node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Log1p/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 404
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 404
          }
          dim {
            size: 13
          }
        }
        tensor_content: "c\321tv2\270\363?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\305 \260rh\221\030@\315\314\314\314\314\354V@\377\262{\362\260\320\017@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@fffff\316x@\270\036\205\353Q\2702@\355\273\"\370\337J\226?\000\000\000\000\000\240T@=\n\327\243p=\000@\000\000\000\000\000\000\000\000\217\302\365(\\\217\332?q=\n\327\243p\036@ffffff/@\024\256G\341z\024\031@\000\000\000\000\000\000\000@\000\000\000\000\000\300u@ffffff-@\256G\341z\024\266x@\341z\024\256G\341\010@\326s\322\373\306\227\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\376\324x\351&1\344?\341z\024\256G\341\023@\000\000\000\000\000\000Y@R\270\036\205\353Q\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Qxw@\024\256G\341z\024\n@+j0\r\303G\244?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\331\316\367S\343%\030@\000\000\000\000\000@A@\305\376\262{\362\360\027@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffff\316x@\205\353Q\270\036\005 @\226>tA}\213\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\033/\335$\006\201\031@\232\231\231\231\231\031V@(~\214\271k\211\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@{\024\256G\341vx@\315\314\314\314\314L-@]\212\253\312\276+\322?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?\242E\266\363\375\324\026@33333\223R@\030\225\324\th\342\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@\256G\341z\024rx@{\024\256G\341z\'@Ve\337\025\301_\"@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\276\237\032/\335$\026@\000\000\000\000\000\000Y@\014\223\251\202QI\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\232\231\231\231\231\2317@\210\205Z\323\274c\020@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\254\034Zd;\337\025@\000\000\000\000\000\000Y@\202\342\307\230\273\226\366?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@fffff\316x@\354Q\270\036\205k:@Z\365\271\332\212=\001@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?P\215\227n\022\203\026@\000\000\000\000\000\000Y@N\321\221\\\376C\370?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243(e@fffff\2460@\255Q\017\321\350\016\372?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\372~j\274t\023\024@\000\000\000\000\000\000Y@d\314]K\310\007\367?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@\024\256G\341z4A@\342\314\257\346\0001#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\004V\016-\262\235\031@\000\000\000\000\000\000Y@\323Mb\020X9\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\366(\\\217\302\201w@\217\302\365(\\O4@V\016-\262\235\3172@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?P\215\227n\022\203\022@\000\000\000\000\000\000Y@\006\022\024?\306\334\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\n\327\243p=\312<@\217\302\365(\\/A@W`\310\352V\317\301?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?}?5^\272I\026@\000\000\000\000\000 V@0*\251\023\320\304\004@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@fffff\316x@\341z\024\256Ga-@\213\340\177+\331\261\016@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?\033/\335$\006\001\031@fffff\306V@w\276\237\032/]\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\352u@\341z\024\256Ga,@\'\302\206\247W\312\330?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?\301\312\241E\266s\026@fffff\346W@\314\177H\277}\035\374?\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@q=\n\327\243tv@\303\365(\\\217B;@\3122\304\261.bR@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\207\026\331\316\367\323\027@\000\000\000\000\000\000Y@HP\374\030s\327\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333s0@\037\205\353Q\270\2364@d\222\221\263\260\'\032@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\376\324x\351&1\344?\252\361\322Mb\020\034@\000\000\000\000\000`X@\314]K\310\007=\363?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314\200x@\256G\341z\024\256\007@\004\377[\311\216\215\260?\000\000\000\000\000\200Q@\354Q\270\036\205\353\001@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?\341z\024\256Ga\031@\232\231\231\231\231\0314@\344\203\236\315\252O\037@\000\000\000\000\000\000\024@\000\000\000\000\000`v@\232\231\231\231\231\231-@\244p=\n\327\003w@\341z\024\256G\341\023@3\304\261.n\243\241?\000\000\000\000\000\240T@=\n\327\243p=\000@\000\000\000\000\000\000\000\000\217\302\365(\\\217\332?\331\316\367S\343\245\030@333333C@\024\256G\341z\024\031@\000\000\000\000\000\000\000@\000\000\000\000\000\300u@ffffff-@\270\036\205\353Q\234x@\270\036\205\353Q\270\035@\017\227\034wJ\007\303?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\234\304 \260r\350\032@\232\231\231\231\231\371S@b\241\3264\3578\006@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\\\217\302\365(\254x@\327\243p=\n\327\"@x\234\242#\271\324B@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\002+\207\026\331\316\030@\315\314\314\314\314\254S@\221~\373:p\316\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353\3212@\n\327\243p=\n-@\263\315\215\351\tK\234?\000\000\000\000\000\300R@\232\231\231\231\231\231\007@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\341z\024\256Ga\032@\315\314\314\314\314\3145@\320\263Y\365\271\232\025@\000\000\000\000\000\000\010@\000\000\000\000\000\200o@\315\314\314\314\314L2@\256G\341z\024\272x@H\341z\024\256G\021@\333m\027\232\3534\222?\000\000\000\000\000\300W@\205\353Q\270\036\205\367?\000\000\000\000\000\000\000\000\230n\022\203\300\312\331?\n\327\243p=\212\034@\315\314\314\314\314\314+@[\323\274\343\024\235\036@\000\000\000\000\000\000\010@\000\000\000\000\000 y@\000\000\000\000\000\0001@\315\314\314\314\314\004x@\315\314\314\314\314\314\021@\211\265\370\024\000\343y?\000\000\000\000\000\0002@{\024\256G\341z\002@\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\315\314\314\314\314L\032@\315\314\314\314\314LP@\\\217\302\365(\\\020@\000\000\000\000\000\000\360?\000\000\000\000\000\200r@\232\231\231\231\231\231.@fffff\316x@\354Q\270\036\205\353\023@2\254\342\215\314#\237?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\024\256G\341z\224\027@\315\314\314\314\314\314M@\366(\\\217\302u\026@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@)\\\217\302\365\254x@\037\205\353Q\270\036%@\204*5{\240\245#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\223\030\004V\016-\033@33333\263X@\356|?5^\272\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@=\n\327\243p=5@\321W\220f,\232\266?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340??5^\272I\014\030@fffff\246P@\313\241E\266\363=\026@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\232\231\231\231\231\271x@\\\217\302\365(\334(@5\007\010\346\350\361\233?\000\000\000\000\000\000\000\000H\341z\024\256G\034@\000\000\000\000\000\000\000\000j\274t\223\030\004\336?=\n\327\243p\275\034@\315\314\314\314\314\214N@\256\330_vO\336\023@\000\000\000\000\000\000\000@\000\000\000\000\000@n@\315\314\314\314\314\3141@\341z\024\256G\215x@\037\205\353Q\270\036\020@\034_{fI\200\345?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\215\227n\022\203@\027@33333\223V@\356|?5^\272\022@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\256G\341z\024\216w@\037\205\353Q\270\236-@\372\263\037)\"\303\306?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?-\262\235\357\247F\026@\000\000\000\000\000`R@\373\\m\305\3762\003@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@\270\036\205\353Q\274x@333333.@9\326\305m4\200\247?\000\000\000\000\000@J@H\341z\024\256G\025@\000\000\000\000\000\000\000\000\354Q\270\036\205\353\331?\303\365(\\\217B\031@\315\314\314\314\314\314F@0*\251\023\320D\035@\000\000\000\000\000\000\030@\000\000\000\000\000Pr@\232\231\231\231\231\2310@fffff\316x@ffffff\036@?RD\206U\\\024@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\343\245\233\304 0\031@33333\363V@\374\030s\327\022\362\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243p\021x@\205\353Q\270\036E1@\303G\304\224H\002\037@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?Nb\020X94\031@\315\314\314\314\314\354T@\026\373\313\356\311C\006@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\003q@{\024\256G\341:0@[_$\264\345\334\360?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?=\n\327\243p\275\027@\315\314\314\314\314L=@t$\227\377\220\376\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\232\231\231\231\231-x@R\270\036\205\353Q\032@\337\375\361^\2652\241?\000\000\000\000\000\300R@\232\231\231\231\231\231\007@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\177j\274t\223\030\034@\232\231\231\231\231\231/@\320\263Y\365\271\232\025@\000\000\000\000\000\000\010@\000\000\000\000\000\200o@\315\314\314\314\314L2@R\270\036\205\353\271x@\256G\341z\024\256\377?j\207\277&k\324\325?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?)\\\217\302\365\250\031@\315\314\314\314\314\014D@\030\225\324\th\342\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@{\024\256G\341z\030@\331Z_$\264\345\352?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?L7\211A`e\026@\315\314\314\314\314lU@\341\013\223\251\202\321\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\037\205\353Q\270\366r@\303\365(\\\217\2020@\314bb\363qm\362?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\347\373\251\361\322\315\026@\000\000\000\000\000\300W@#J{\203/L\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\270\036\205\353Qlv@\232\231\231\231\231Y2@\360P\024\350\023y\326?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?D\213l\347\373)\030@33333\363H@\030\225\324\th\342\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\315\314\314\314\314\314\036@\347\030\220\275\336\375\271?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\004V\016-\262\035\031@\000\000\000\000\000\240R@\241g\263\352s5\020@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@\303\365(\\\217Zw@q=\n\327\243\360\'@\310$#gaO\303?\000\000\000\000\000\000\000\000=\n\327\243p\275;@\000\000\000\000\000\000\000\000\260rh\221\355|\343?7\211A`\345\320\025@\315\314\314\314\314,W@\030\225\324\th\"\375?\000\000\000\000\000\000\020@\000\000\000\000\0008\206@\232\231\231\231\231\0314@=\n\327\243p\261x@\217\302\365(\\\0172@\0221%\222\350e\304?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\362\322Mb\020\330\030@\000\000\000\000\000\000\032@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@\217\302\365(\\\247x@\303\365(\\\217\302\035@J\265O\307c\006\252?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\335$\006\201\225C\031@\315\314\314\314\314\014C@\023\362A\317f\325\031@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@\217\302\365(\\[x@\270\036\205\353Q\270\026@?W[\261\277,&@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\276\237\032/\335\244\031@\000\000\000\000\000\000Y@\347\214(\355\r\276\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\000\000\000\000\000\354s@\n\327\243p=\n.@\2343\242\2647\270*@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346??5^\272I\214\027@\315\314\314\314\314\254W@\3019#J{\203\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\232\231\231\231\231Y0@\031\347oB!\002\350?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\031\004V\016-\262\027@fffff\206W@)\355\r\2760\231\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\341z\024\256G\245x@\315\314\314\314\314L0@$EdX\305\033\325?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?}?5^\272I\027@\232\231\231\231\231\331W@\212\037c\356Z\302\003@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\327\243p=\nKx@\217\302\365(\\\017.@\322\000\336\002\t\n\360?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\031\004V\016-\262\032@33333\323U@\333\371~j\274\364\020@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@H\341z\024\256\303w@\366(\\\217\302\365\'@\210c]\334F\003\345?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\221\355|?5^\033@\000\000\000\000\000\000Y@\240\211\260\341\351\025\000@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@{\024\256G\341~x@\232\231\231\231\231\231\033@\267b\177\331=\331\033@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\'1\010\254\034\332\026@\000\000\000\000\000@X@m\347\373\251\361\322\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@{\024\256G\341\246x@\\\217\302\365(\0341@\347\000\301\034=~\257?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\254\034Zd;\337\027@\000\000\000\000\000@M@\253>W[\261?\023@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffff\316x@\024\256G\341z\224\"@HP\374\030s\327,@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\362\322Mb\020\330\031@33333SW@\276\301\027&S\005\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243p};@\315\314\314\314\314\0142@\342\222\343N\351`\340?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?;\337O\215\227n\035@fffff\346Q@d;\337O\215\227\020@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\205\353Q\270\036ax@\354Q\270\036\205\353\022@\307\021k\361)\000\246?\000\000\000\000\000@J@H\341z\024\256G\025@\000\000\000\000\000\000\000\000\354Q\270\036\205\353\331?\303\365(\\\217B\032@fffff\3466@0*\251\023\320D\035@\000\000\000\000\000\000\030@\000\000\000\000\000Pr@\232\231\231\231\231\2310@\354Q\270\036\205;w@\205\353Q\270\036\005#@\027\267\321\000\336\202\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\205\353Q\270\036\205\027@33333SX@@\244\337\276\016\034\003@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\256G\341z\024\302u@\217\302\365(\\\017(@(D\300!T\251\261?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?{\024\256G\341z\027@\315\314\314\314\314lQ@\000o\201\004\305\017\002@\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@fffffRx@=\n\327\243p\275,@\316\302\236v\370\373 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?1\010\254\034Zd\031@fffff\206U@]\376C\372\355k\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314\334T@\244p=\n\327\2431@d#\020\257\353w\035@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\022\203\300\312\241\305\030@fffff\206S@\2343\242\2647\370\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\037\205\353Q\270.X@\205\353Q\270\036\2055@g\233\033\323\023\226\270?\000\000\000\000\000\000D@\244p=\n\327\243\031@\000\000\000\000\000\000\000\000\317\367S\343\245\233\334?\321\"\333\371~j\033@ffffffE@\031\342X\027\267\021\021@\000\000\000\000\000\000\020@\000\000\000\000\000\300o@\232\231\231\231\231\2311@fffff\316x@\327\243p=\n\327\007@\036\376\232\254Q\017\261?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?\311v\276\237\032/\032@\315\314\314\314\314\214@@\036\026jM\363\016\t@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\217\302\365(\\ox@R\270\036\205\353Q\025@\201&\302\206\247W\262?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?j\274t\223\030\004\030@fffff\006U@\334\327\201sF\224\001@\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@\037\205\353Q\270\232w@\n\327\243p=\212,@-!\037\364lV\275?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\364\375\324x\351&\032@\232\231\231\231\231YM@\327\243p=\nW\017@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@\217\302\365(\\\257x@\354Q\270\036\205\353\036@\236\357\247\306Kw$@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\331\316\367S\343\245\343?=\n\327\243p\275\030@\315\314\314\314\314,X@w\276\237\032/]\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333\273w@H\341z\024\256\0072@\'\240\211\260\341\351\305?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\362\322Mb\020X\027@\232\231\231\231\231\371V@\343\245\233\304 \260\001@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\037\205\353Q\270\272x@)\\\217\302\365\2502@Q\367\001Hm\002\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\232\231\231\231\231\031\032@\000\000\000\000\000\240U@?\306\334\265\204|\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\366(\\\217\302uI@\341z\024\256G!2@4\277\232\003\004S\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?X9\264\310v\276\031@\232\231\231\231\231\371U@I\235\200&\302\206\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\\\217\302\365(\014Y@\270\036\205\353Q80@\"\303*\336\310<\357?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\272I\014\002+\007\027@\232\231\231\231\231\231X@\370S\343\245\233\304\002@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\\\217\302\365(lp@\217\302\365(\\O1@[\323\274\343\024\r6@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\022\203\300\312\241E\027@\232\231\231\231\231\031W@$\271\374\207\364\333\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333wx@\\\217\302\365(\0346@0L\246\nF\325#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\234\304 \260rh\027@33333sS@\304\261.n\243\001\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\303\365(\\\217\"u@\270\036\205\353Q\370=@\224j\237\216\307\014\330?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\004V\016-\262\235\025@fffff&V@R\270\036\205\353Q\r@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\244p=\n\327\263x@{\024\256G\341\3727@S\256\360.\027\361\305?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\356|?5^\272\026@fffff\346@@\327\022\362A\317f\024@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@\354Q\270\036\205k$@\212\216\344\362\037R&@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?j\274t\223\030\204\032@fffff\246W@V}\256\266b\377\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffffv[@\205\353Q\270\036E7@<\203\206\376\t.\266?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\203\300\312\241E\266\034@\315\314\314\314\314L:@\263{\362\260P\353\031@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@\244p=\n\327gx@\366(\\\217\302\365\006@\037\021S\"\211^\324?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\016-\262\235\357\247\027@\315\314\314\314\314\314T@\351H.\377!\375\017@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@33333kx@\024\256G\341zT2@\003[%X\034\316\371?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\374\251\361\322Mb\030@\232\231\231\231\2319X@\243\001\274\005\022\024\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@R\270\036\205\353\to@\327\243p=\nW4@}\263\315\215\351\t\313?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?\240\032/\335$\206\026@\000\000\000\000\000\000Y@\243\001\274\005\022T\030@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\256G\341z\024*x@\256G\341z\024\356=@c\177\331=y\270/@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?/\335$\006\201\225\027@\232\231\231\231\231\331W@\313\020\307\272\270\215\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q\270\036@\244p=\n\327c8@333333\354?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343??5^\272I\214\026@\315\314\314\314\314\254W@=\233U\237\253\255\377?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@\327\243p=\nW2@_\2652\341\227\372\305?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?w\276\237\032/\335\027@\232\231\231\231\231YW@\240\032/\335$F\033@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@\341z\024\256G\241w@\341z\024\256G\341,@\341\013\223\251\202\221\n@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353?\351&1\010\254\234\025@\000\000\000\000\000\000Y@0L\246\nF%\365?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@fffff\316x@R\270\036\205\353\321:@\004\377[\311\216\215\300?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\203\300\312\241E\266\032@\232\231\231\231\231\031?@HP\374\030s\327\027@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@fffff\316x@\024\256G\341z\024\031@\262\235\357\247\306K\341?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000ffffff\342?\341z\024\256G\341\035@\315\314\314\314\314LJ@`\345\320\"\333\371\006@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\315\314\314\314\314dx@H\341z\024\256G\t@V\202\305\341\314\257\351?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?m\347\373\251\361\322\025@\315\314\314\314\314LB@\254\034Zd;_\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\244p=\n\327\017r@\341z\024\256Ga\'@Qf\203L2r\206?\000\000\000\000\000\200K@\000\000\000\000\000\000\002@\000\000\000\000\000\000\000\000L7\211A`\345\330?\035Zd;\337\317\031@fffff\346?@B>\350\331\254:\035@\000\000\000\000\000\000\360?\000\000\000\000\000\300r@\232\231\231\231\231\231.@\354Q\270\036\205\253x@\366(\\\217\302u @R\'\240\211\260\341\342?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\260rh\221\355|\031@\232\231\231\231\231yX@\346\256%\344\203\236\002@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\\\217\302\365(\034x@=\n\327\243p=&@\244\210\014\253x#\243?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?=\n\327\243p=\031@\000\000\000\000\000@C@\023\362A\317f\325\031@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffffVx@\000\000\000\000\000\000\033@>\350\331\254\372|\027@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\037\205\353Q\270\236\031@\000\000\000\000\000\000X@\300\354\236<,\324\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\037\205\353Q\270^3@\r\340-\220\240\370\241?\000\000\000\000\000\300W@q=\n\327\243p\005@\000\000\000\000\000\000\000\000\376e\367\344a\241\332?\266\363\375\324xi\037@\232\231\231\231\231\231@@F\266\363\375\324x\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000l@ffffff-@\024\256G\341z\214x@{\024\256G\341z\016@P6\345\n\357\362\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?Nb\020X9\264\023@\315\314\314\314\314\354W@\345\362\037\322o_\367?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\217\302\365(\\{x@H\341z\024\256\207=@\335A\354L\2413\034@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\331\316\367S\343\245\343?\266\363\375\324xi\030@fffffFU@\"lxz\245,\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@)\\\217\302\365(\004@\n\327\243p=J7@\241\271N#-\325\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\240\032/\335$\006\341?\000\000\000\000\000\000\033@\232\231\231\231\231\271R@e\252`TR\247\n@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\205\353Q\270\036\221x@\366(\\\217\302\365\036@Q\024\350\023y\222\224?\000\000\000\000\000\300W@q=\n\327\243p\005@\000\000\000\000\000\000\000\000\376e\367\344a\241\332?\305 \260rh\021 @fffff\346?@F\266\363\375\324x\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000l@ffffff-@\315\314\314\314\314hx@\n\327\243p=\n\007@\257Z\231\360K\375\264?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\360\247\306K7\t\030@fffff&E@\373\313\356\311\303\002\026@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@fffff\316x@\315\314\314\314\314\314$@\004\342u\375\202\335\260?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\217\302\365(\\\017\037@33333\323T@!\260rh\221\355\005@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@)\\\217\302\365\270x@=\n\327\243p=\036@\221,`\002\267\356\276?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?\027\331\316\367S# @\000\000\000\000\000\000S@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@fffff\316x@\327\243p=\n\327\020@\201&\302\206\247W\272?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?;\337O\215\227n\031@33333sJ@1\010\254\034Z$\034@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\000\000\000\000\000Lw@q=\n\327\243p&@T\343\245\233\304 \240?\000\000\000\000\000\300W@\205\353Q\270\036\205\367?\000\000\000\000\000\000\000\000\230n\022\203\300\312\331?fffff\346\033@\232\231\231\231\231\231.@[\323\274\343\024\235\036@\000\000\000\000\000\000\010@\000\000\000\000\000 y@\000\000\000\000\000\0001@fffff\316x@=\n\327\243p=\022@\253\t\242\356\003\220\252?\000\000\000\000\000\000\000\000\366(\\\217\302\365\021@\000\000\000\000\000\000\000\000#\333\371~j\274\334?\217\302\365(\\\017\030@\315\314\314\314\314\214F@\241g\263\352s\265\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340n@\000\000\000\000\000\2002@\244p=\n\327\277x@\270\036\205\353Q\270)@0\330\r\333\026e\226?\000\000\000\000\000\000N@q=\n\327\243p\007@\000\000\000\000\000\000\000\000D\213l\347\373\251\331?333333\033@\315\314\314\314\314\314#@p\316\210\322\336\340\030@\000\000\000\000\000\000\360?\000\000\000\000\000\220p@333333/@R\270\036\205\353\225x@\037\205\353Q\270\036\024@Tt$\227\377\220\236?\000\000\000\000\000\000\000\000q=\n\327\243p\001@\000\000\000\000\000\000\000\000\035Zd;\337O\335?\270\036\205\353Q\270\031@\232\231\231\231\231YM@\253>W[\261?\030@\000\000\000\000\000\000\010@\000\000\000\000\000\300k@33333\2632@R\270\036\205\353\241x@\327\243p=\n\327\024@6\310$#ga\257?\000\000\000\000\000\0004@\244p=\n\327\243\n@\000\000\000\000\000\000\360?c\177\331=yX\334?\024\256G\341z\224\036@\232\231\231\231\231\331H@\360\026HP\374\330\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000k@\315\314\314\314\314\314-@\205\353Q\270\036\221w@\024\256G\341z\024\010@)\350\366\222\306h\342?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?\006\201\225C\213\254 @33333SR@0\273\'\017\013\265\016@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\303\365(\\\217\036x@\303\365(\\\217\302\003@\347\251\016\271\031n\336?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\301\312\241E\266s\030@ffffffM@\031s\327\022\362\001\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@H\341z\024\256\303x@\366(\\\217\302u)@\000\343\0314\364O\300?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\024\256G\341z\024\033@333333\007@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@\303\365(\\\217\026x@\\\217\302\365(\\\023@\376e\367\344a\221I@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?\272I\014\002+\007\027@\000\000\000\000\000\000Y@\317\367S\343\245\233\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314\314\004@\270\036\205\353Q8$@\205|\320\263Y\365\301?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\246\233\304 \260\362\031@\000\000\000\000\000\000*@\365JY\2068\226\035@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\024\256G\341z\304x@\232\231\231\231\231\231\027@4\235\235\014\216\222\031@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?\331\316\367S\343\245\030@\232\231\231\231\231YX@\331\316\367S\343\245\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\\\217\302\365(\354r@\232\231\231\231\231\0318@b\326\213\241\234h\277?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?-\262\235\357\247F\030@\000\000\000\000\000\000D@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@\n\327\243p=Vx@\232\231\231\231\231\031#@\332\003\255\300\220\225!@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?\303\365(\\\217B\026@fffff\246Q@5^\272I\014\202\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@333333\r@)\\\217\302\365(1@\206\346:\215\264T\306?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\327\243p=\n\327\027@fffff\006W@\243\222:\001M\004\017@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\000\000\000\000\000\224x@\205\353Q\270\036E1@\217\245\017]P\337\320?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\321\"\333\371~\352\030@\315\314\314\314\314\314V@\225e\210c]\\\004@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@H\341z\024\256sx@\232\231\231\231\231\031/@M\370\245~\336\024\000@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\236\357\247\306K\267\037@\315\314\314\314\314\014X@Y\027\267\321\000^\000@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\315\314\314\314\314\024w@\232\231\231\231\231\231\r@\215\356 v\246\320\271?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\\\217\302\365(\334\032@ffffffT@\354Q\270\036\205k\005@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@=\n\327\243p\271x@R\270\036\205\353Q$@\177\373:p\316\210\322?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\217\302\365(\\\217\025@\232\231\231\231\2319R@O\257\224e\210c\006@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@\244p=\n\327#5@\354/\273\'\017\013\225?\000\000\000\000\000@U@\256G\341z\024\256\347?\000\000\000\000\000\000\000\000=\n\327\243p=\332?\325x\351&1\210\031@\232\231\231\231\231\331A@\216uq\033\r`\"@\000\000\000\000\000\000\000@\000\000\000\000\000\220s@\315\314\314\314\314L1@fffff\316x@\024\256G\341z\024\027@\314\356\311\303B\255\261?\000\000\000\000\000\000\000\000q=\n\327\243p\001@\000\000\000\000\000\000\000\000\035Zd;\337O\335?J\014\002+\207\226\034@\232\231\231\231\231\031K@\253>W[\261?\030@\000\000\000\000\000\000\010@\000\000\000\000\000\300k@33333\2632@fffff\316x@R\270\036\205\353Q\025@\327\335<\325!\027\034@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\240\032/\335$\006\030@33333\323W@<N\321\221\\\376\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256\377s@ffffff/@\371\203\201\347\336\303\305?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?j\274t\223\030\004\030@\232\231\231\231\231yU@\256\330_vO^\032@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\217\302\365(\\+x@\232\231\231\231\231\0311@\346\221?\030x\356\305?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\203\300\312\241E\266\027@\315\314\314\314\314\014V@\2068\326\305m\264\003@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\303\365(\\\217\216u@\205\353Q\270\036\205/@\323\244\024t{I\273?\000\000\000\000\000\000T@\217\302\365(\\\217\376?\000\000\000\000\000\000\000\000;\337O\215\227n\332?X9\264\310v\276\027@\000\000\000\000\000\2003@\316\210\322\336\340+%@\000\000\000\000\000\000\020@\000\000\000\000\000\340t@\000\000\000\000\000\0006@q=\n\327\243\200w@H\341z\024\256G\026@-\262\235\357\247\306\253?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?\303\365(\\\217B\031@\232\231\231\231\231YR@\n\327\243p=\212\n@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\232\231\231\231\231\271x@)\\\217\302\365(\031@D\372\355\353\3009\347?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\234\304 \260r\350\026@\000\000\000\000\000`Q@\254\034Zd;_\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@33333ox@\217\302\365(\\\217&@\320\263Y\365\271Z.@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\317\367S\343\245\233\030@\000\000\000\000\000\000Y@\033\r\340-\220\240\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327\243\"@33333s:@\035\217\031\250\214\177\217?\000\000\000\000\000\200V@\000\000\000\000\000\000\016@\000\000\000\000\000\000\000\000\236\357\247\306K7\331?7\211A`\345\320\035@\232\231\231\231\231\031A@\016\2760\231*X\031@\000\000\000\000\000\000\010@\000\000\000\000\000\200n@\315\314\314\314\314\314/@=\n\327\243p%x@\341z\024\256G\341\010@\274\226\220\017z>V@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\254\034Zd;\337\033@\232\231\231\231\231\371V@D\213l\347\373\251\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\366(\\\217\30251@\367\314\222\00055\366?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\315\314\314\314\314\314\027@\000\000\000\000\000\200T@\354Q\270\036\205\353\017@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@33333\023m@\366(\\\217\302\265;@Gw\020;S\350\254?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?!\260rh\221\355\030@\232\231\231\231\231\331J@\221~\373:p\016\024@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@fffff&x@\256G\341z\024\256(@I\272f\362\3156\267?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\347\373\251\361\322\315\033@\000\000\000\000\000\2005@\263{\362\260P\353\031@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@{\024\256G\341\232w@ffffff\024@M\363\216St$\351?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?u\223\030\004V\016\034@fffff&U@q\033\r\340-\020\001@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\205\353Q\270\036\001x@\024\256G\341z\224-@\260U\202\305\341\314\257?\000\000\000\000\000\000D@\000\000\000\000\000\000\364?\000\000\000\000\000\000\000\000\333\371~j\274t\333?\366(\\\217\302\365\031@333333F@\275R\226!\216\225!@\000\000\000\000\000\000\360?\000\000\000\000\000\360t@33333\2633@fffff\316x@\354Q\270\036\205\353\027@\225\361\3573.\034\310?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\276\237\032/\335$\027@fffff\246@@\327\022\362A\317f\024@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@\315\314\314\314\314L,@Hm\342\344~\207\302?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\006\201\225C\213\354\026@\315\314\314\314\314LP@P\374\030s\327\022\006@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\000\000\000\000\000xx@\270\036\205\353Q8+@S\313\326\372\"\241\335?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\331\316\367S\343\245\035@\232\231\231\231\2319S@\254\034Zd;_\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\n\327\243p=\202w@\000\000\000\000\000\000\025@)\\\217\302\365(\264?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?T\343\245\233\304 \033@\315\314\314\314\314\214D@;\001M\204\rO\016@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@R\270\036\205\353\235x@\270\036\205\353Q\270\032@)\320\'\362$\351\306?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\256G\341z\024\256\026@\315\314\314\314\314\314<@O\257\224e\210c\006@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@q=\n\327\243\224x@\232\231\231\231\231\2311@\202\250\373\000\2446\271?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?j\274t\223\030\204\027@33333\363W@\351\267\257\003\347\014\000@\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@\256G\341z\024\266w@\024\256G\341z\2241@\253>W[\261\277/@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\256G\341z\024.\032@fffff\306X@\312T\301\250\244N\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\024\256G\341z\0245@RD\206U\274\221\343?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\234\304 \260rh!@\232\231\231\231\231\271U@7\211A`\345\320\374?\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@33333[x@{\024\256G\341z\024@\215\264T\336\216p\272?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?h\221\355|?\265\027@\232\231\231\231\231\231G@\356|?5^\272\033@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@fffff\316x@q=\n\327\243p\"@\t\212\037c\356\372P@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\010\254\034Zd\273\026@\000\000\000\000\000\000Y@\221~\373:p\316\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\354Q\270\036\205\017x@{\024\256G\341\3726@\217\337\333\364g?\320?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\177j\274t\223\230\025@33333\323W@{\024\256G\341z\027@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@\217\302\365(\\\317>@\027\361\235\230\365b\300?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?L7\211A`\345\031@fffffFX@\330\201sF\224v\003@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\244p=\n\327\263x@\n\327\243p=\212(@\265\211\223\373\035J!@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\022\203\300\312\241\305\030@fffff&W@\360\205\311T\301\250\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\327\243p=\nW.@\237q\341@H\026\363?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\347\373\251\361\322M\031@\315\314\314\314\314lX@^\272I\014\002+\002@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@\205\353Q\270\036\205(@\353V\317I\357\033\257?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?\201\225C\213l\347\033@\000\000\000\000\000\300V@\327\243p=\nW\001@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@fffff\316x@\217\302\365(\\\217\026@_\014\345D\273\n\305?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\010\254\034Zd\273\031@\315\314\314\314\314\214H@u\223\030\004VN\037@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\217\302\365(\\kw@\n\327\243p=\n#@\376\324x\351&1\300?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334??5^\272I\014\033@33333\263E@\352\225\262\014q\354\037@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@\341z\024\256G\271x@\000\000\000\000\000\000#@\367\257\2544)e\021@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\217\302\365(\\\217\342?^\272I\014\002\253\030@\000\000\000\000\000\000U@\277}\0358gD\010@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\n\327\243p=J0@}\320\263Y\365\031,@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?T\343\245\233\304\240\032@\000\000\000\000\000\000Y@q=\n\327\243p\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\206A@\270\036\205\353Q85@;\215\264T\336\216\310?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?\323Mb\020X\271\031@ffffff-@\'\240\211\260\341\251\025@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@{\024\256G\341\232x@R\270\036\205\353Q\024@\237v\370k\262f @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?X9\264\310v\276\027@33333\023T@yX\2505\315;\006@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\000\000\000\000\000\000\014@q=\n\327\243\3600@\253\347\244\367\215\257\235?\000\000\000\000\000\000D@\000\000\000\000\000\000\364?\000\000\000\000\000\000\000\000\333\371~j\274t\333?\250\306K7\211\301\033@\000\000\000\000\000@A@\275R\226!\216\225!@\000\000\000\000\000\000\360?\000\000\000\000\000\360t@33333\2633@\232\231\231\231\231]x@\217\302\365(\\\217\027@\336Y\273\355Bs\275?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?\364\375\324x\351\246\030@ffffffQ@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@\341z\024\256G}x@\256G\341z\024\256&@g\270\001\237\037F\250?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?\037\205\353Q\270\036\030@333333T@\n\327\243p=\n\004@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@fffff\316x@\205\353Q\270\036\205\037@\331\231B\3475v\301?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\252\361\322Mb\220\027@\315\314\314\314\314L6@q\033\r\340-\220\017@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@fffff\316x@=\n\327\243p\275%@\215\234\205=\355\360\367?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\004V\016-\262\235\025@\000\000\000\000\000\000Y@\201\004\305\2171w\371?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\232\231\231\231\231Yu@\217\302\365(\\\217*@\210\205Z\323\274\303D@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?9\264\310v\276\037\026@\232\231\231\231\231YU@Gr\371\017\351\267\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\227t@\341z\024\256Ga;@{\332\341\257\311\032\265?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\006\201\225C\213\354\031@\000\000\000\000\000\2002@\246\nF%u\302\030@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\303\365(\\\217\266w@q=\n\327\243p\031@A\361c\314]\013+@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\376\324x\351&1\344?\201\225C\213l\347\016@\000\000\000\000\000\000Y@\317f\325\347j+\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243pm`@)\\\217\302\365\250*@\260U\202\305\341\314\313?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\356|?5^:\027@fffff\346J@\361\364JY\2068\r@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\327\243p=\nox@H\341z\024\256\0070@\323\366\257\2544)\311?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\201\225C\213l\347\030@\315\314\314\314\314\314S@#\333\371~j\034 @\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\n\327\243p=\202w@\315\314\314\314\314L$@B>\350\331\254\372\254?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\272I\014\002+\007\034@33333\223U@\035\311\345?\244_\013@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@fffff\316x@\000\000\000\000\000\000\026@?RD\206U\274\350?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?{\024\256G\341\372\031@\232\231\231\231\231\231W@\375\366u\340\234\321\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\327\243p=\n?x@\232\231\231\231\231\231)@-x\321W\220f\314?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\360?\031\004V\016-\262\335?\335$\006\201\225\303\036@fffff\346I@\236\357\247\306Kw\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@\270\036\205\353Qlx@R\270\036\205\353Q\032@\022\245\275\301\027&\223?\000\000\000\000\000@U@\232\231\231\231\231\231\020@\000\000\000\000\000\000\000\000\333\371~j\274t\333?\252\361\322Mb\020\032@33333\263;@\374\030s\327\022\022!@\000\000\000\000\000\000\020@\000\000\000\000\000\360u@fffff\3461@{\024\256G\341\206x@q=\n\327\243p\031@\202sF\224\366\346\'@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000J\014\002+\207\026\345?;\337O\215\227n\026@\000\000\000\000\000\000Y@q\033\r\340-\220\364?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243p\301t@\303\365(\\\217B(@\223\214\234\205=\355\240?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?#\333\371~j<\030@fffff\246B@\253>W[\261?\023@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@\n\327\243p=\302x@\205\353Q\270\036\005!@1\261\371\2706T\300?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\337O\215\227n\222\031@333333\037@1\010\254\034Z$\034@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\217\302\365(\\kw@\303\365(\\\217\302\024@\220\332\304\311\375\016\245?\000\000\000\000\000\0009@q=\n\327\243p\023@\000\000\000\000\000\000\000\000\335$\006\201\225C\333?\234\304 \260r\350\032@\000\000\000\000\000\300@@_\007\316\031Q\232\025@\000\000\000\000\000\000\020@\000\000\000\000\000\220q@\000\000\000\000\000\0003@fffff\316x@)\\\217\302\365(\025@\304\010\341\321\306\021\273?\000\000\000\000\000\000\000\000=\n\327\243p\275;@\000\000\000\000\000\000\000\000\260rh\221\355|\343?;\337O\215\227\356\027@33333\263X@\210\205Z\323\274\343\375?\000\000\000\000\000\000\020@\000\000\000\000\0008\206@\232\231\231\231\231\0314@\366(\\\217\302ax@R\270\036\205\353\0212@\341@H\0260\201\253?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\031\004V\016-2\032@\000\000\000\000\000\200I@HP\374\030s\327\027@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@\232\231\231\231\231\215x@\217\302\365(\\\217\035@\002Hm\342\344~\267?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?D\213l\347\373\251\031@fffff\006U@\010=\233U\237+\005@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\000\000\000\000\000\270x@\024\256G\341z\024\"@H\376`\340\271W\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\016-\262\235\357\247\342?\037\205\353Q\270\236\027@\232\231\231\231\231\231J@Gr\371\017\3517\t@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\354Q\270\036\205Cx@fffff\346&@\241J\315\036h\005\246?\000\000\000\000\000\000T@\217\302\365(\\\217\376?\000\000\000\000\000\000\000\000;\337O\215\227n\332?\364\375\324x\351\246\026@fffff\3465@\316\210\322\336\340+%@\000\000\000\000\000\000\020@\000\000\000\000\000\340t@\000\000\000\000\000\0006@\315\314\314\314\314\354w@\232\231\231\231\231\031 @R\325\004Q\367\001\270?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?u\223\030\004V\216\027@\000\000\000\000\000\200C@\313\020\307\272\270\315\025@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\000\000\000\000\000hx@\354Q\270\036\205k/@[\224\331 \223\214\326?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?7\211A`\345\320\031@\232\231\231\231\231\231X@\270@\202\342\307\230\375?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\341z\024\256G\241x@\256G\341z\024.-@\344\024\035\311\345\237\'@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\262\235\357\247\306K\033@\000\000\000\000\000 S@Nb\020X9\264\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\232\231\231\231\2319H@=\n\327\243p\2756@\351&1\010\254\034\302?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\223\030\004V\016\255\030@ffffff\032@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@R\270\036\205\353\365w@=\n\327\243p=\027@b\204\360h\343\010\003@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\205\353Q\270\036\205\030@\000\000\000\000\000\000Y@\277\016\2343\242\264\366?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\205\353Q\270\036\235e@\315\314\314\314\314\314;@\n\334\272\233\247:\274?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?m\347\373\251\361\322\031@33333\363P@\364\375\324x\351\346\034@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@fffff\316x@\354Q\270\036\205\353\032@_$\264\345\\\252\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\307K7\211A\340\030@\000\000\000\000\000\000Y@\231*\030\225\324\t\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\327\243p=\n\273x@\327\243p=\n\2270@\367\344a\241\3264\267?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\360?\031\004V\016-\262\335?\256G\341z\024\256\027@\000\000\000\000\000\300N@\327\243p=\nW\017@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@=\n\327\243pux@\315\314\314\314\314L+@\025\221a\025od\332?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\364\375\324x\351\246\034@\232\231\231\231\231\371S@D\372\355\353\300\271\t@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\341z\024\256GAw@q=\n\327\243p\031@p\231\323e1\261\261?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\333\371~j\274\364\032@\315\314\314\314\314\314>@\263{\362\260P\353\031@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@\217\302\365(\\[x@\303\365(\\\217\302\022@\270\222\035\033\201x\265?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\345\320\"\333\371~\027@\315\314\314\314\314LB@\337\340\013\223\251\002\022@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@)\\\217\302\365\300x@333333\"@/n\243\001\274\0254@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?F\266\363\375\324x\021@\315\314\314\314\314\314V@\325x\351&1\010\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256G\335q@\341z\024\256G\241>@l\317,\tPS\303?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?/\335$\006\201\025\030@fffff\246T@B>\350\331\254\372\005@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\\\217\302\365(\250x@\232\231\231\231\231\231$@\344,\354i\207\277\320?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?d;\337O\215\027\030@\232\231\231\231\231\231V@y\351&1\010\254\006@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\315\314\314\314\314\304x@q=\n\327\243p\'@{\240\025\030\262\272\331?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\272I\014\002+\207\031@\315\314\314\314\314\314P@\303\365(\\\217B\014@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\217\302\365(\\\263x@\270\036\205\353Q\270$@sh\221\355|?\275?\000\000\000\000\000\000\000\000H\341z\024\256\307+@\000\000\000\000\000\000\360?\232\231\231\231\231\231\341?\313\241E\266\363}\031@\232\231\231\231\231\031W@+\030\225\324\t\350\n@\000\000\000\000\000\000\024@\000\000\000\000\000@q@ffffff0@\244p=\n\327\233x@\000\000\000\000\000\000%@\366\356\217\367\252\225\356?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\343\245\233\304 0\030@333333V@\216\006\360\026H\320\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\256G\341z\024&s@H\341z\024\256G1@\024\355*\244\374\244\340?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\262\235\357\247\306\313 @\000\000\000\000\000\340V@\002+\207\026\331N\002@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\366(\\\217\302-x@\244p=\n\327\243\027@\035=~o\323\237\265?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?V\016-\262\235o\027@\315\314\314\314\314,Q@\314\177H\277}\235\005@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@H\341z\024\256\223x@H\341z\024\256G#@\205\0108\204*5\263?\000\000\000\000\000\200@@q=\n\327\243p\001@\000\000\000\000\000\000\000\000h\221\355|?5\336?\256G\341z\024\256\035@\232\231\231\231\231\371Q@\t\033\236^)\313\010@\000\000\000\000\000\000\034@\000\000\000\000\000\300k@ffffff2@fffff\316x@\341z\024\256G\341\031@\366]\021\374o%\323?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\006\201\225C\213l\027@\315\314\314\314\314\014E@\236\357\247\306K\267\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@fffffJx@\000\000\000\000\000\000*@\201[w\363T\007\364?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?H\341z\024\256G\026@fffff\206X@\303\323+e\031b\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\205\353Q\270\036\211w@\205\353Q\270\036\0055@Y4\235\235\014\216\202?\000\000\000\000\000\200V@\303\365(\\\217\302\007@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?\'1\010\254\034Z\034@\315\314\314\314\314\3144@B>\350\331\254:\035@\000\000\000\000\000\000\360?\000\000\000\000\000\320q@\232\231\231\231\231\231.@\354Q\270\036\205\253x@ffffff\037@gDio\360\2457@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\205\353Q\270\036\205\031@\315\314\314\314\314\014X@\005\305\2171w-\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@q=\n\327\243\2607@\215\013\007B\262\200\251?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?\313\241E\266\363\375\027@ffffff5@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@fffff\316x@\\\217\302\365(\334 @\314bb\363qm\260?\000\000\000\000\000\000\000\000\327\243p=\n\327\027@\000\000\000\000\000\000\000\000V\016-\262\235\357\337?\010\254\034Zd\273\027@\315\314\314\314\314\014Q@\213\375e\367\344\341\n@\000\000\000\000\000\000\024@\000\000\000\000\000pq@3333333@fffff\316x@\\\217\302\365(\\#@\361\272~\301n\330\246?\000\000\000\000\000\0009@q=\n\327\243p\023@\000\000\000\000\000\000\000\000\335$\006\201\225C\333?`\345\320\"\333y\032@\232\231\231\231\231\231Q@_\007\316\031Q\232\025@\000\000\000\000\000\000\020@\000\000\000\000\000\220q@\000\000\000\000\000\0003@\256G\341z\024\272x@\341z\024\256G\341\034@w\020;S\350<\006@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\351&1\010\254\234\023@33333sX@\177\373:p\316\210\365?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@fffff\316x@\n\327\243p=J=@\345\3259\006d\257\267?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\006\201\225C\213l\032@\232\231\231\231\231\031E@\246\nF%u\302\030@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\024\256G\341z\374w@{\024\256G\341z\035@:X\377\3470_\350?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?=\n\327\243p=\026@ffffffO@b\020X9\264\310\377?\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@fffff\206x@fffff\346$@kH\334c\351C\353?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\\\217\302\365(\334\027@\315\314\314\314\314LV@\224\366\006_\230\014\020@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\024\256G\341z\210x@)\\\217\302\365\250+@#\241-\347R|\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\331\316\367S\343\245\343?V\016-\262\235\357\031@ffffffW@\032\300[ Aq\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\303x@\256G\341z\024\2562@\220\275\336\375\361\336\032@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\345\320\"\333\371\376\032@fffff&W@\202\342\307\230\273\226\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@{\024\256G\341z\324?q=\n\327\243p1@\265l\255/\022\332\316?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?\242E\266\363\375T\030@\232\231\231\231\231\331E@\'\240\211\260\341\251\025@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\024\256G\341z\224)@\273~\301n\330\266\300?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\260rh\221\355|\027@fffffFR@R\270\036\205\353\321\003@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\256G\341z\024*u@=\n\327\243p\275.@\345\355\010\247\005/\306?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\207\026\331\316\367\323\026@\000\000\000\000\000\000K@\313\020\307\272\270\r\003@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@\205\353Q\270\036\005(@M\241\363\032\273D\265?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\321\"\333\371~j\026@33333sV@H\277}\0358\347\007@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@\000\000\000\000\000px@\366(\\\217\302\365+@,}\350\202\372\006#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\266\363\375\324x\351\032@fffff\206W@d]\334F\003\370\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q\270\032@\366(\\\217\302\2652@\'1\010\254\034Z\264?\000\000\000\000\000\000N@\n\327\243p=\n\373?\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?7\211A`\345P\032@33333\363A@\226\262\014q\254k%@\000\000\000\000\000\000\020@\000\000\000\000\000\260y@\315\314\314\314\314L2@\024\256G\341z,w@\366(\\\217\302\365\025@H\277}\0358g\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?-\262\235\357\247F\031@fffff\006X@\315\314\314\314\314\314\000@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@=\n\327\243p\221r@333333&@\177\274W\255L\370\037@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\024\256G\341z\024\026@\000\000\000\000\000\000Y@+\366\227\335\223\207\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\217\302\365(\\\2178@#\370\337Jvl\264?\000\000\000\000\000\000D@\244p=\n\327\243\031@\000\000\000\000\000\000\000\000\317\367S\343\245\233\334?!\260rh\221\355\031@\315\314\314\314\314\014@@\344\203\236\315\252\217\020@\000\000\000\000\000\000\020@\000\000\000\000\000\300o@\232\231\231\231\231\2311@fffff\316x@\303\365(\\\217\302\034@\371\367\031\027\016\204\264?\000\000\000\000\000\000\000\000\327\243p=\n\327\027@\000\000\000\000\000\000\000\000V\016-\262\235\357\337?ffffff\027@\000\000\000\000\000\300D@\267b\177\331=y\017@\000\000\000\000\000\000\024@\000\000\000\000\000pq@3333333@fffff\316x@\n\327\243p=\212!@\231\323e1\261\371\300?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\201\225C\213lg\027@\315\314\314\314\314,X@\t\212\037c\356\332\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\315\314\314\314\314\240x@\270\036\205\353Qx0@\260U\202\305\341\314\366?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\n\327\243p=\n\032@\000\000\000\000\000\000Y@7\032\300[ A\374?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@)\\\217\302\365\304v@\217\302\365(\\\217\035@\214\271k\t\371\240\327?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\370S\343\245\233D\032@33333\323U@\341\013\223\251\202\321\014@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\327\243p=\n\273x@\217\302\365(\\\217\"@\345\355\010\247\005\177 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\337O\215\227n\222\035@33333\323X@\2201w-!\237\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353}w@=\n\327\243p\2750@v\375\202\335\260M @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\217\302\365(\\\217\025@\232\231\231\231\231\271X@J{\203/L\246\373?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\232\231\231\231\231\3314@\340\333\364g?R\304?\000\000\000\000\000\000\000\000\037\205\353Q\270\236%@\000\000\000\000\000\000\000\000;\337O\215\227n\332?\362\322Mb\020\330\027@\000\000\000\000\000\2001@.\220\240\3701&\025@\000\000\000\000\000\000\020@\000\000\000\000\000\020s@3333333@\327\243p=\n\217w@\303\365(\\\217\302#@O\314z1\224\023\344?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\274t\223\030\004V\027@\000\000\000\000\000@L@t$\227\377\220\376\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@R\270\036\205\353\271x@q=\n\327\243\360 @{1\224\023\355*\022@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?d;\337O\215\227\031@\000\000\000\000\000\000V@0L\246\nF%\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@)\\\217\302\365hw@)\\\217\302\365(\037@\3377\276\366\314\222\240?\000\000\000\000\000\000\000\000q=\n\327\243p\001@\000\000\000\000\000\000\000\000\035Zd;\337O\335?\313\241E\266\363\375\033@fffff\346F@\253>W[\261?\030@\000\000\000\000\000\000\010@\000\000\000\000\000\300k@33333\2632@\256G\341z\024\252x@\205\353Q\270\036\205\007@Yni5$\356\241?\000\000\000\000\000\000T@\315\314\314\314\314\314\023@\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?\213l\347\373\251q\033@fffff\346;@\326\305m4\200w\024@\000\000\000\000\000\000\020@\000\000\000\000\000\240n@3333333@fffff\316x@\244p=\n\327\243\n@\317\203\273\263v[\037@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\366(\\\217\302\365\344?\274t\223\030\004\326\030@\232\231\231\231\231YP@0\273\'\017\013\265\007@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@q=\n\327\243p*@\225+\274\313E|\365?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\335$\006\201\225C\030@\000\000\000\000\000\000Y@=,\324\232\346\035\374?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\n\327\243p=\036v@\270\036\205\353Q\270\031@aO;\37459\022@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\260rh\221\355|\014@\232\231\231\231\231\371U@\344\203\236\315\252\317\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333+v@{\024\256G\341z\034@\232\231\231\231\231\231\271?\000\000\000\000\000\000A@\\\217\302\365(\\\030@\000\000\000\000\000\000\000\000\203\300\312\241E\266\333?!\260rh\221\355\033@33333\2631@\326\305m4\200\367\025@\000\000\000\000\000\000\034@\000\000\000\000\000\220t@\232\231\231\231\231\0310@{\024\256G\341fx@q=\n\327\243p\023@\240\211\260\341\351\225\320?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\022\203\300\312\241\305\026@\000\000\000\000\000\000X@\"\375\366u\340\234\374?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\366(\\\217\302\201x@q=\n\327\24301@\324+e\031\342X\247?\000\000\000\000\000\000\000\000H\341z\024\256\307+@\000\000\000\000\000\000\360?\232\231\231\231\231\231\341?Zd;\337O\215\027@\000\000\000\000\000\000L@\204\rO\257\224\345\010@\000\000\000\000\000\000\024@\000\000\000\000\000@q@ffffff0@\315\314\314\314\314\214x@\205\353Q\270\036\005+@I\272f\362\3156\325?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?X9\264\310v~ @\232\231\231\231\231\231Q@e\031\342X\0277\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@33333\257w@\232\231\231\231\231\231\017@\276\331\346\306\364\204\245?\000\000\000\000\000\000<@\024\256G\341z\024.@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\370S\343\245\233\304\031@\315\314\314\314\314\314J@O@\023a\303S\r@\000\000\000\000\000\000\020@\000\000\000\000\000\340p@3333332@\\\217\302\365(\260x@R\270\036\205\353Q @\314@e\374\373\214\337?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\n\327\243p=\212\032@\000\000\000\000\000\240T@\n\327\243p=\212\n@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@fffff\316x@)\\\217\302\365(\022@\3377\276\366\314\222\003@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?J\014\002+\207\026\025@\000\000\000\000\000\200W@\361c\314]K\310\373?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\270\036\205\353Q(V@\244p=\n\327#0@\260U\202\305\341\254\022@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\201\225C\213l\347\027@\232\231\231\231\231\371U@\367u\340\234\021\245\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\366(\\\217\302\365$@\303\365(\\\217\0023@\226x@\331\224\013\021@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?\246\233\304 \260r\030@33333ST@\030&S\005\243\022\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327kx@\327\243p=\nW)@]\376C\372\355\2333@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\215\227n\022\203@\035@\232\231\231\231\231yX@\310\230\273\226\220\017\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\341z\024\256G\341*@->\005\300x\006\362?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353??5^\272I\014\024@\000\000\000\000\000\000V@\245N@\023a\303\371?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\024\256G\341ztu@=\n\327\243p=(@0*\251\023\320d8@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\317\367S\343\245\233\022@\000\000\000\000\000\000Y@(\017\013\265\246y\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@H\341z\024\256G<@\022\245\275\301\027&\325?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?\362\322Mb\020X\030@\000\000\000\000\000\300N@e\031\342X\0277\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\000\000\000\000\000\214w@\303\365(\\\217\302%@\272f\362\31567\302?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?j\274t\223\030\004\031@\315\314\314\314\314\014U@Zd;\337O\r\002@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\244p=\n\327Kx@fffff\346$@d#\020\257\353\027\332?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\360?\323Mb\020X9\340?\016-\262\235\357\247\030@33333\323V@\374\251\361\322Mb\010@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\244p=\n\327\263x@\366(\\\217\302u5@]\304wb\326\213\241?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?`\345\320\"\333y\027@fffff&G@\"lxz\245\354\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffff\316x@\232\231\231\231\231\231#@\224\3367\276\366\314\272?\000\000\000\000\000\000D@\244p=\n\327\243\031@\000\000\000\000\000\000\360?\317\367S\343\245\233\334?\305 \260rh\021\035@\000\000\000\000\000\200H@\022\245\275\301\027&\023@\000\000\000\000\000\000\020@\000\000\000\000\000\300o@\232\231\231\231\231\2311@\000\000\000\000\000Tx@333333\030@\007_\230L\025,\025@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?Nb\020X94\030@\000\000\000\000\000\240T@\201&\302\206\247W\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\256G\341z\024\246w@\303\365(\\\217\3022@\314]K\310\007-C@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\035Zd;\337\317\025@\000\000\000\000\000\000Y@\023\362A\317f\325\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\327\243p=\n\227>@I\235\200&\302&/@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\217\302\365(\\\217\342?Nb\020X9\264\027@\000\000\000\000\000\300Q@\277}\0358gD\007@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327\013w@\341z\024\256G!2@\017\326\3779\314\027\362?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\'1\010\254\034\332\026@fffff\206W@;\337O\215\227\356\020@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\037\205\353Q\270\202v@\232\231\231\231\231\2316@*\221D/\243\230\003@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\317\367S\343\245\233\031@\315\314\314\314\314\314W@\232\231\231\231\231\031\002@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243\240t@\244p=\n\327\243&@vq\033\r\340\3351@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?1\010\254\034Z\344\030@\000\000\000\000\000\000Y@\005\305\2171w-\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327\233x@H\341z\024\256\3075@\372~j\274t\223.@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\177j\274t\223\230\032@33333SW@\024?\306\334\265\204\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q\260v@=\n\327\243p=7@\200\267@\202\342\247<@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?\037\205\353Q\270\236\024@\000\000\000\000\000\000Y@\3122\304\261.n\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\327\243p=\n_j@\024\256G\341z\0244@\2201w-!\237\366?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353?j\274t\223\030\204\030@\000\000\000\000\000\000X@Z\365\271\332\212\375\373?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\270\036\205\353Q\020t@=\n\327\243p=.@\321\226s)\256*\273?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\341z\024\256Ga\030@fffffFP@\016\2760\231*X\031@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@R\270\036\205\353\251x@\315\314\314\314\314\314(@\306\341\314\257\346\000\261?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?q=\n\327\243p\033@\232\231\231\231\231\231R@\373:p\316\210R\007@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\270\036\205\353Qtx@\256G\341z\024\256\033@\313\271\024W\225\235\035@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?+\207\026\331\316w\026@\232\231\231\231\231yX@\365\333\327\201sF\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\n\327\243p=\252s@ffffff:@Uj\366@+0\264?\000\000\000\000\000\000T@\315\314\314\314\314\314\023@\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?d;\337O\215\227\034@33333\263;@\326\305m4\200w\024@\000\000\000\000\000\000\020@\000\000\000\000\000\240n@3333333@fffff\316x@{\024\256G\341z\014@\213\246\263\223\301Q\242?\000\000\000\000\000\0004@\244p=\n\327\243\n@\000\000\000\000\000\000\000\000c\177\331=yX\334?H\341z\024\256G\037@\000\000\000\000\000 P@\363\037\322o_\307\022@\000\000\000\000\000\000\024@\000\000\000\000\000\000k@\315\314\314\314\314\314-@)\\\217\302\3654x@\024\256G\341z\024\016@\240l\312\025\336\245\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?X9\264\310v\276\024@33333sW@\267b\177\331=y\370?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\244p=\n\327Ov@R\270\036\205\353Q<@Dn\206\033\360\371\261?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?\024\256G\341z\024\030@\232\231\231\231\231\231G@8gDiop\014@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@H\341z\024\256\223x@\270\036\205\353Q8$@)?\251\366\351x\254?\000\000\000\000\000\200Q@\354Q\270\036\205\353\001@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?D\213l\347\373)\034@\000\000\000\000\000\000$@\344\203\236\315\252O\037@\000\000\000\000\000\000\024@\000\000\000\000\000`v@\232\231\231\231\231\231-@\341z\024\256G9w@\366(\\\217\302\365\022@\375M(D\300!\244?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\037\205\353Q\270\236\031@\232\231\231\231\231yR@[\261\277\354\236\274\010@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@\315\314\314\314\314\230x@ffffff @2\311\310Y\330\323\324?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\323Mb\020X\271\031@33333\263X@\000\000\000\000\000\000\375?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@H\341z\024\256\307.@\304\224H\242\227Q\363?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\000\000\000\000\000\200\027@fffff\246W@c\356ZB>h\003@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243Dr@\\\217\302\365(\334,@\t3m\377\312J\243?\000\000\000\000\000\000T@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000B`\345\320\"\333\331?\177j\274t\223\030\035@fffff&C@#\333\371~j<\035@\000\000\000\000\000\000\000@\000\000\000\000\000\220t@333333)@33333\203x@{\024\256G\341z\032@\2201w-!\037\224?\000\000\000\000\000\000T@)\\\217\302\365(\374?\000\000\000\000\000\000\000\000\244p=\n\327\243\330?\354Q\270\036\205\353\030@\000\000\000\000\000\200?@=\233U\237\253-\"@\000\000\000\000\000\000\360?\000\000\000\000\000 n@3333332@\232\231\231\231\231Yu@\\\217\302\365(\334)@q=\n\327\243p\235?\000\000\000\000\000\000<@\024\256G\341z\024.@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\362\322Mb\020\330\030@fffff\346<@O@\023a\303S\r@\000\000\000\000\000\000\020@\000\000\000\000\000\340p@3333332@\341z\024\256G\305x@\327\243p=\n\327\030@\201C\250R\263G\014@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353?\317\367S\343\245\233\030@fffff\246T@!\260rh\221\355\373?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243\000V@\n\327\243p=\n.@\316\245\270\252\354\273\242?\000\000\000\000\000\0009@q=\n\327\243p\023@\000\000\000\000\000\000\000\000\335$\006\201\225C\333?h\221\355|?5\031@\232\231\231\231\231\031@@_\007\316\031Q\232\025@\000\000\000\000\000\000\020@\000\000\000\000\000\220q@\000\000\000\000\000\0003@fffff\316x@\341z\024\256G\341\032@\034\323\023\226x@\251?\000\000\000\000\000\200@@q=\n\327\243p\001@\000\000\000\000\000\000\000\000h\221\355|?5\336?L7\211A`e\033@33333\223Q@g\325\347j+v\t@\000\000\000\000\000\000\034@\000\000\000\000\000\300k@ffffff2@fffff\316x@\037\205\353Q\270\036\036@\335^\322\030\255c\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\016-\262\235\357\247\342?sh\221\355|?\031@33333\363I@\254\213\333h\000\357\017@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353Ix@)\\\217\302\365(%@\231\r2\311\310Y\270?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\276\237\032/\335$\031@\000\000\000\000\000\200F@\337\340\013\223\251\002\022@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@H\341z\024\256\363w@\341z\024\256G\341!@\371\240g\263\352s\305?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?Nb\020X9\264\031@fffff&J@\232\010\033\236^)\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\315\314\314\314\314\314\034@\177M\326\250\207h\352?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\002+\207\026\331N\035@\000\000\000\000\000\240W@\376e\367\344a\241\000@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\037\205\353Q\270\226x@\000\000\000\000\000\200&@\266\333.4\327i\310?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\254\034Zd;\337\032@\000\000\000\000\000\2001@u\223\030\004VN\037@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\244p=\n\327\233x@=\n\327\243p=\032@(a\246\355_Y\301?\000\000\000\000\000\000)@H\341z\024\256G\030@\000\000\000\000\000\000\000\000\223\030\004V\016-\332?\307K7\211A`\026@ffffffB@\313\241E\266\363\375\031@\000\000\000\000\000\000\020@\000\000\000\000\000\220u@fffff\3462@fffff\316x@\256G\341z\024.*@\004s\364\370\275M\267?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\037\205\353Q\270\236\034@\315\314\314\314\314\014W@\355\236<,\324\232\005@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@R\270\036\205\353\241x@H\341z\024\256G\023@\016\2760\231*\030\351?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\366(\\\217\302\365\027@\315\314\314\314\314lT@\271\215\006\360\026\010\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\000\000\000\000\000,x@\327\243p=\nW-@\373\221\"2\254\342\333?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\307K7\211A`\025@\000\000\000\000\000\000Y@\000\000\000\000\000\000\017@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@fffff\316x@\327\243p=\n\0277@\0054\0216<\3158@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?L7\211A`e\025@\000\000\000\000\000\000X@\221\017z6\253>\373?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\205\353Q\270\036\3053@\356_YiR\n\232?\000\000\000\000\000\200K@=\n\327\243p=\016@\000\000\000\000\000\000\000\000`\345\320\"\333\371\336?b\020X9\264\310\032@333333L@=\233U\237\253\355\026@\000\000\000\000\000\000\024@\000\000\000\000\000 w@\232\231\231\231\231\2311@fffff\316x@\270\036\205\353Q\270\034@\320\325V\354/[+@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?=\n\327\243p\275\027@\232\231\231\231\231\371U@\305\2171w-!\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314<Q@\303\365(\\\217\002A@,e\031\342X7&@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\307K7\211A`\345?9\264\310v\276\237\023@\000\000\000\000\000\000Y@Dio\360\205\311\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\303\365(\\\217bA@\217\344\362\037\322\3170@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\317\367S\343\245\033\025@fffff\206X@\2505\315;N\321\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\217\302\365(\\\317>@2U0*\251\323+@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\242E\266\363\375\324\030@\000\000\000\000\000\300W@\236^)\313\020\307\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q(Y@\327\243p=\nW.@\246\325\220\270\307r#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?9\264\310v\276\237\031@\315\314\314\314\314LX@\276\301\027&S\205\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\037x@\205\353Q\270\036\2053@!\223\214\234\205=\321?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\252\361\322Mb\020\031@33333\263T@C\034\353\3426\032\n@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\n\327\243p=\226x@\232\231\231\231\231\231\037@\273\270\215\006\360v\"@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\376\324x\351&1\344?w\276\237\032/\335\030@\000\000\000\000\000\000Y@\277\016\2343\242\264\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\342v@\217\302\365(\\\017#@\273\'\017\013\265\306\031@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?33333\263\031@33333\263R@|\362\260Pk\232\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314|X@\217\302\365(\\\017(@`\260\033\266-\312\300?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?5^\272I\014\202\030@\315\314\314\314\314LU@B>\350\331\254\372\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\327\243p=\n;x@\256G\341z\024.,@\313\326\372\"\241-\247?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?{\024\256G\341z\030@\315\314\314\314\314,S@\315\314\314\314\314L\002@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@fffff\316x@)\\\217\302\365(\"@\212Y/\206r\242\305?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?\213l\347\373\251\361\027@\232\231\231\231\231\031V@\245,C\034\353\342\377?\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@\270\036\205\353Q\020x@\037\205\353Q\270\236-@#gaO;\374\245?\000\000\000\000\000\000<@\024\256G\341z\024.@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\345\320\"\333\371\376\030@33333SS@\354Q\270\036\205\353\014@\000\000\000\000\000\000\020@\000\000\000\000\000\340p@3333332@fffff\316x@\256G\341z\024.%@\321W\220f,\232\341?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?m\347\373\251\361\322\034@fffff\346V@R\'\240\211\260\341\376?\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\n\327\243p=>x@333333 @\034\010\311\002&\260\036@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\260rh\221\355\374\026@\232\231\231\231\231\271X@\030\225\324\th\"\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\232\231\231\231\231\221x@\354Q\270\036\205\3533@Z\273\355Bs\235\246?\000\000\000\000\000\200Q@\354Q\270\036\205\353\001@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?\226C\213l\347{\033@33333\263G@\344\203\236\315\252O\037@\000\000\000\000\000\000\024@\000\000\000\000\000`v@\232\231\231\231\231\231-@\366(\\\217\302mx@H\341z\024\256G\030@_)\313\020\307\232)@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\321\"\333\371~j\027@fffff&X@\370\302d\252`T\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\020n@\n\327\243p=\3127@\336\223\207\205Z\223\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\'1\010\254\034\332\023@\232\231\231\231\231\331V@(~\214\271k\t\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\024\256G\341z\300s@\000\000\000\000\000\000,@:z\374\336\246?\303?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?\006\201\225C\213l\027@\000\000\000\000\000@X@xz\245,C\034\377?\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@)\\\217\302\365$w@)\\\217\302\365h9@_\007\316\031Q\332\213?\000\000\000\000\000\300R@\000\000\000\000\000\000\020@\000\000\000\000\000\000\000\000=\n\327\243p=\332?Zd;\337O\215\027@\315\314\314\314\314\314G@\363\037\322o_G\035@\000\000\000\000\000\000\010@\000\000\000\000\000P}@\232\231\231\231\231\0315@fffff\316x@\232\231\231\231\231\231-@\3745Y\243\036\242\261?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\372~j\274t\223\030@\232\231\231\231\231\031O@*:\222\313\177\310\004@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@fffff\316x@fffff\346\"@\273\325s\322\373&\031@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?w\276\237\032/]\031@\232\231\231\231\231\031X@\372~j\274t\223\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\\\217\302\365(\340s@\n\327\243p=\3121@C\377\004\027+j\344?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\374\251\361\322Mb\030@\000\000\000\000\000 U@\360\026HP\374\330\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\270\036\205\353Q\300w@\205\353Q\270\036\205$@\3230|DL\211\244?\000\000\000\000\000\000T@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000B`\345\320\"\333\331?\331\316\367S\343%\035@\315\314\314\314\314\014A@#\333\371~j<\035@\000\000\000\000\000\000\000@\000\000\000\000\000\220t@333333)@fffff\316x@R\270\036\205\353Q\020@\225\232=\320\n\214\006@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\240\032/\335$\006\341??5^\272I\014\027@fffff&D@\206\311T\301\250d\020@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\037\205\353Q\270\216x@\327\243p=\n\327$@\202\220,`\002\267\266?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?\'1\010\254\034\332\027@\232\231\231\231\231\331F@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@)\\\217\302\365\270x@fffff\346*@\300\004n\335\315S\215?\000\000\000\000\000\000Y@\037\205\353Q\270\036\365?\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?\335$\006\201\225C\033@\000\000\000\000\000@D@J{\203/L\246 @\000\000\000\000\000\000\024@\000\000\000\000\000\000p@333333.@fffff\216x@\232\231\231\231\231\231\017@,H3\026Mg\313?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\215\227n\022\203\300\031@\315\314\314\314\314\314!@\365JY\2068\226\035@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\205\353Q\270\036\221w@\270\036\205\353Q\270\014@A\237\310\223\244k\246?\000\000\000\000\000\000T@\366(\\\217\302\365\n@\000\000\000\000\000\000\000\000F\266\363\375\324x\331?\331\316\367S\343%\027@\232\231\231\231\231\031?@\031\004V\016-r\032@\000\000\000\000\000\000\020@\000\000\000\000\000\020u@\232\231\231\231\231\0310@fffff\316x@{\024\256G\341z$@\204d\001\023\270u\267?\000\000\000\000\000\000\000\000\037\205\353Q\270\236%@\000\000\000\000\000\000\000\000;\337O\215\227n\332?\303\365(\\\217B\030@333333\037@.\220\240\3701&\025@\000\000\000\000\000\000\020@\000\000\000\000\000\020s@3333333@\303\365(\\\217nx@\024\256G\341z\024\026@z\245,C\034\253%@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?T\343\245\233\304 \033@33333\263V@\351&1\010\254\034\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353\2215@\n\327\243p=\3129@\312\246\\\341].\324?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\325x\351&1\210 @33333\223S@\326V\354/\273\'\007@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\315\314\314\314\314\020x@\217\302\365(\\\217\020@\1770\360\334{\270\314?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\317\367S\343\245\033\030@\315\314\314\314\314\354S@\007\360\026HP\374\003@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@)\\\217\302\365\250,@u\315\344\233mn\314?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\221\355|?5^\030@\232\231\231\231\231\331W@\374\251\361\322Mb\004@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@fffff\316x@\327\243p=\n\0271@?\000\251M\234\334\340?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?33333s!@\000\000\000\000\000\300T@\326V\354/\273\'\007@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\000\000\000\000\000\340w@\205\353Q\270\036\205\022@F\261\334\322jH\214?\000\000\000\000\000\000T@q=\n\327\243p\335?\000\000\000\000\000\000\000\0005^\272I\014\002\333?\000\000\000\000\000\200\037@\000\000\000\000\000\000@@\325\347j+\366\227\026@\000\000\000\000\000\000\020@\000\000\000\000\000\340o@\315\314\314\314\314\314,@H\341z\024\256\243x@\303\365(\\\217\302\007@;\3745Y\243\236\032@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\370S\343\245\233D\031@\000\000\000\000\000\300T@\216uq\033\r\340\005@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@{\024\256G\341\372+@\312\303B\255i\336\301?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?^\272I\014\002\253\030@\000\000\000\000\000\200V@\221\355|?5^\003@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\327\243p=\n\213x@)\\\217\302\365\250(@F\266\363\375\324\210 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\307K7\211A`\345?\000\000\000\000\000\200\027@ffffffV@P\374\030s\327\022\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\256G\341z\024\276u@\303\365(\\\217\302!@?\035\217\031\250\214\257?\000\000\000\000\000\000\000\000\217\302\365(\\\217\021@\000\000\000\000\000\000\000\000}?5^\272I\334?d;\337O\215\227\027@fffff&J@\202sF\224\366\006 @\000\000\000\000\000\000\010@\000\000\000\000\000\000v@\315\314\314\314\314\3142@\366(\\\217\302\311v@\327\243p=\nW)@\351\361{\233\376l\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?\246\233\304 \260r\025@\315\314\314\314\314\014X@\300\354\236<,\324\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\314w@\341z\024\256Ga$@\365\326\300V\t\026\313?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340??5^\272I\214\030@\232\231\231\231\231\331U@\017\2343\242\264\267\005@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\354Q\270\036\205\247x@\341z\024\256G\341*@\207\242@\237\310\223\363?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\022\203\300\312\241\305\033@\232\231\231\231\231YX@(~\214\271k\t\376?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@{\024\256G\341\266v@\\\217\302\365(\\\022@\327\206\212q\376&\344?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\262\235\357\247\306\313\027@fffff\346N@\024\256G\341z\324\022@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@fffff\316x@\205\353Q\270\036\205 @MJA\267\2274\246?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?\366(\\\217\302u\030@\000\000\000\000\000\200O@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@\354Q\270\036\205\237x@\\\217\302\365(\334\"@?\343\302\201\220\034 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?h\221\355|?\265\025@\232\231\231\231\231\331W@\000\221~\373:p\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256G\tv@\244p=\n\327#2@\277`7l[\224\231?\000\000\000\000\000\000\000\000=\n\327\243p=\376?\000\000\000\000\000\000\000\000\372~j\274t\223\340?)\\\217\302\365(\032@\232\231\231\231\231\331M@\2505\315;N\021\031@\000\000\000\000\000\000\360?\000\000\000\000\000`z@\315\314\314\314\314\314/@\217\302\365(\\_x@\315\314\314\314\314L!@-`\002\267\356\346\251?\000\000\000\000\000\000\000\000\366(\\\217\302\365\021@\000\000\000\000\000\000\000\000#\333\371~j\274\334?u\223\030\004V\216\031@\000\000\000\000\000\000H@u\002\232\010\033\036\023@\000\000\000\000\000\000\010@\000\000\000\000\000\340n@\000\000\000\000\000\2002@fffff\316x@=\n\327\243p=#@H\371I\265O\007\003@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\016-\262\235\357\247\342?\226C\213l\347{\027@33333\363D@\230n\022\203\300\312\r@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256+w@\256G\341z\024\256*@g\270\001\237\037F\334?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?h\221\355|?5\032@ffffff5@9\326\305m4\000\013@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@=\n\327\243p\305w@\024\256G\341z\024\016@i\000o\201\004\305\303?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?\024\256G\341z\224\030@333333=@\212\037c\356ZB\037@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@{\024\256G\341jx@q=\n\327\243p\033@k\324C4\272\343\020@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\244p=\n\327\243\350?\203\300\312\241E6\027@\000\000\000\000\000@V@(\017\013\265\246y\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\020v@H\341z\024\256G-@u\002\232\010\033\236\322?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\031\004V\016-\262\030@ffffffW@\'\302\206\247W\312\371?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\341z\024\256GAx@)\\\217\302\365(8@\r\303G\304\224H\341?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\035Zd;\337\317\034@33333sT@\204\rO\257\224\345\000@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\315\314\314\314\314\214x@\256G\341z\024.#@[\261\277\354\236<\254?\000\000\000\000\000\200@@q=\n\327\243p\001@\000\000\000\000\000\000\000\000h\221\355|?5\336?\213l\347\373\251\361\034@\315\314\314\314\314\214D@J\014\002+\207\026\020@\000\000\000\000\000\000\034@\000\000\000\000\000\300k@ffffff2@{\024\256G\341\232x@\270\036\205\353Q\270\033@G\254\305\247\000\310\"@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?5^\272I\014\202\026@\232\231\231\231\231yW@\301\250\244N@\023\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\341z\024\256G\3416@w\241\271N#-\321?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\223\030\004V\016-\027@fffff\246Q@\025\035\311\345?$\007@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@333333,@\224\301Q\362\352\034\303?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?\020X9\264\310\366\026@\315\314\314\314\314\214P@\327\022\362A\317\346\034@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@\366(\\\217\302\261x@\315\314\314\314\314L*@\377\004\027+j\260\021@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?P\215\227n\022\003\030@\000\000\000\000\000\240W@\373:p\316\210R\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\264t@R\270\036\205\353Q5@{Ic\264\216\252\334?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\360?\323Mb\020X9\340?\201\225C\213l\347\032@\000\000\000\000\000\240P@e\031\342X\0277\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@33333\203v@\232\231\231\231\231\031 @\010=\233U\237\253\343?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?F\266\363\375\324x\032@333333T@\314\356\311\303B-\n@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@fffff\316x@ffffff\036@\313\204_\352\347M\370?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\\\217\302\365(\\\343?\000\000\000\000\000\300 @\232\231\231\231\231yW@\262\235\357\247\306K\001@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@33333Gx@\217\302\365(\\\217\n@\231d\344,\354i\367?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\333\371~j\274\364\035@33333\263V@\177\373:p\316\210\377?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@{\024\256G\341fw@\256G\341z\024\256\373?\316\337\204B\004\034\242?\000\000\000\000\000\000A@\\\217\302\365(\\\030@\000\000\000\000\000\000\000\000\203\300\312\241E\266\333?\\\217\302\365(\\\032@333333D@\326\305m4\200\367\025@\000\000\000\000\000\000\034@\000\000\000\000\000\220t@\232\231\231\231\231\0310@\000\000\000\000\000\274x@\000\000\000\000\000\000#@,e\031\342X\2674@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000J\014\002+\207\026\345?Zd;\337O\215\020@\000\000\000\000\000\000Y@}\256\266b\177\331\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\354Q\270\036\205#w@\327\243p=\nW7@\205\224\237T\373t\330?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\024\256G\341z\024 @\000\000\000\000\000\240U@D\372\355\353\300\271\t@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\256G\341z\0246x@\n\327\243p=\n\t@\223W\347\030\220\275\216?\000\000\000\000\000\200V@\\\217\302\365(\\\363?\000\000\000\000\000\000\360?D\213l\347\373\251\331?\376\324x\351&\261\037@\315\314\314\314\314\3148@\n\327\243p=\212\027@\000\000\000\000\000\000\360?\000\000\000\000\000\300h@333333+@\270\036\205\353Q\270x@H\341z\024\256G\t@U\336\216pZ\360\001@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\321\"\333\371~j\027@33333\363V@\307K7\211A`\003@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\366(\\\217\302\261x@H\341z\024\256G\'@\321tv28J\266?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\217\302\365(\\\217\030@fffff\346F@\351&1\010\254\\\020@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@\217\302\365(\\/x@\n\327\243p=\212$@\322\373\306\327\236Y\242?\000\000\000\000\000\000T@\366(\\\217\302\365\n@\000\000\000\000\000\000\000\000F\266\363\375\324x\331?)\\\217\302\365(\031@\315\314\314\314\314\3141@\031\004V\016-r\032@\000\000\000\000\000\000\020@\000\000\000\000\000\020u@\232\231\231\231\231\0310@fffff\316x@\256G\341z\024\256\022@n4\200\267@\202\242?\000\000\000\000\000\000T@\315\314\314\314\314\314\023@\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?\205\353Q\270\036\205\032@ffffff7@\326\305m4\200w\024@\000\000\000\000\000\000\020@\000\000\000\000\000\240n@3333333@fffff\316x@\315\314\314\314\314\314\022@u\345\263<\017\256\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\376\324x\351&1\344?\010\254\034Zd\273\032@333333X@0\273\'\017\013\265\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256Guw@\327\243p=\n\327\r@\034\360\371a\204\360\260?\000\000\000\000\000\000\000\000\354Q\270\036\205\353\t@\000\000\000\000\000\000\000\000q=\n\327\243p\335?F\266\363\375\324x\027@\315\314\314\314\314\3149@\353\3426\032\300\333\024@\000\000\000\000\000\000\020@\000\000\000\000\000\340z@fffff\3460@\327\243p=\n\347w@q=\n\327\243\360#@\270\257\003\347\214(\265?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?5^\272I\014\202\030@ffffff2@\373\313\356\311\303\002\026@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@fffff\316x@)\\\217\302\365(!@\202\250\373\000\2446\261?\000\000\000\000\000\000\000\000\354Q\270\036\205\353\t@\000\000\000\000\000\000\000\000q=\n\327\243p\335?\242E\266\363\375T\031@3333331@\353\3426\032\300\333\024@\000\000\000\000\000\000\020@\000\000\000\000\000\340z@fffff\3460@\217\302\365(\\sw@\\\217\302\365(\\\035@k\324C4\272\303\025@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\037\205\353Q\270\236\032@\315\314\314\314\314\214X@HP\374\030s\327\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\2434v@{\024\256G\341\2721@\032\335A\354L\241\273?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?H\341z\024\256\307\030@333333K@b\241\3264\3578\006@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\244p=\n\327\227x@\000\000\000\000\000\000*@k`\253\004\213\303\325?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\242E\266\363\375\324\031@\232\231\231\231\231\271X@\246\233\304 \260\362\000@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@q=\n\327\243\260x@333333)@h\005\206\254n\365\264?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?H\341z\024\256G\037@33333sB@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@\024\256G\341z\230x@\217\302\365(\\\217\014@\315;N\321\221\\\326?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\027\331\316\367S\343\027@\315\314\314\314\314,S@R\270\036\205\353\321\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\244p=\n\327\303x@q=\n\327\243\360#@\000o\201\004\305\217\261?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?D\213l\347\373\251\035@\000\000\000\000\000@O@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@fffff\316x@\303\365(\\\217\302\030@;\001M\204\rO\t@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\366(\\\217\302\365\344?\360\247\306K7\t\027@\232\231\231\231\231\031H@\325x\351&1\210\010@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\346t@\303\365(\\\217B,@\215\321:\252\232 \320?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?o\022\203\300\312!\027@\315\314\314\314\314,R@\317f\325\347jk\021@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@{\024\256G\341Vx@\217\302\365(\\\0172@\024\355*\244\374\244\212?\000\000\000\000\000\200A@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000}?5^\272I\334?\020X9\264\310\366\034@fffff\246H@\327\022\362A\317&\034@\000\000\000\000\000\000\360?\000\000\000\000\000\300q@\000\000\000\000\000\000/@\244p=\n\327\253x@\366(\\\217\302\365\025@\313\370\367\031\027\016\274?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?\223\030\004V\016-\033@33333SV@\261Pk\232w\034\003@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@33333\227x@\354Q\270\036\205\353\031@\200`\216\036\277\267\251?\000\000\000\000\000\200A@=\n\327\243p=\030@\000\000\000\000\000\000\000\000\021\307\272\270\215\006\334?m\347\373\251\361\322\026@ffffff<@U0*\251\023\220\032@\000\000\000\000\000\000\360?\000\000\000\000\000\000s@fffff\3460@\270\036\205\353Q\240x@\\\217\302\365(\334(@\301n\330\266(3\016@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\366(\\\217\302\365\344?\002+\207\026\331\316\027@\315\314\314\314\314,U@F\266\363\375\324\370\006@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\303\365(\\\217\0026@fffff&1@\267E\231\r2\311\314?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?5^\272I\014\202\031@33333\223W@\302\027&S\005c\031@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\270\036\205\353Q\210x@33333s4@\275\030\312\211v\025\005@\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?1\010\254\034Z\344\023@fffff\346B@\326V\354/\273\'\004@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@33333\347u@H\341z\024\256G)@*t^c\227\250\340?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\360?\323Mb\020X9\340?\240\032/\335$\206\032@\000\000\000\000\000 S@d;\337O\215\227\020@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@33333Gx@\024\256G\341z\024#@\234\242#\271\374\207\322?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\331\316\367S\343\245\025@\232\231\231\231\231\231#@33333\263\014@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@{\024\256G\341\316u@\315\314\314\314\314\214=@N\356w(\n\364\261?\000\000\000\000\000\000\000\000H\341z\024\256\307+@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\341?\305 \260rh\221\032@fffffFU@\312\303B\255i^\013@\000\000\000\000\000\000\024@\000\000\000\000\000@q@ffffff0@\024\256G\341z\214x@\341z\024\256Ga#@\325\347j+\366\227\255?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\354Q\270\036\205\353\033@333333M@o\022\203\300\312\241\006@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@fffff\316x@)\\\217\302\365(\024@A\016J\230i\373\247?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?^\272I\014\002\253\031@fffff\206P@\314]K\310\007\275\010@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@{\024\256G\341\202x@\037\205\353Q\270\236!@\344f\270\001\237?\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\347\373\251\361\322\315\032@\000\000\000\000\000\200V@H\341z\024\256\307\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\347o@\354Q\270\036\205k0@S\226!\216uq\253?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?%\006\201\225C\013\032@\232\231\231\231\231\0315@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@fffff\316x@\037\205\353Q\270\036\025@\266\370\024\000\343\031\300?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\323Mb\020X9\032@\232\231\231\231\231\031=@\243\222:\001MD\022@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@=\n\327\243p\355w@=\n\327\243p=\022@\263\315\215\351\tK\351?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\260rh\221\355|\030@ffffffJ@\310\007=\233U\037\005@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@fffff\316x@\354Q\270\036\205\353\027@\203i\030>\"\246\324?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\370S\343\245\233\304\027@\000\000\000\000\000`W@\325\th\"lx\377?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\000\000\000\000\000\244w@fffff\3460@\267\234KqU\331\341?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\327\243p=\nW\031@\315\314\314\314\314\214X@mV}\256\266\342\000@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\037\205\353Q\270\252x@\366(\\\217\302\3650@k\016\020\314\321\343\247?\000\000\000\000\000\000T@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000B`\345\320\"\333\331?!\260rh\221m\034@\315\314\314\314\314LB@#\333\371~j<\035@\000\000\000\000\000\000\000@\000\000\000\000\000\220t@333333)@)\\\217\302\365$v@\270\036\205\353Q8!@\343\252\262\357\212\340\237?\000\000\000\000\000\000\000\000\217\302\365(\\\217\021@\000\000\000\000\000\000\000\000}?5^\272I\334?u\223\030\004V\016\030@\000\000\000\000\000@H@\202sF\224\366\006 @\000\000\000\000\000\000\010@\000\000\000\000\000\000v@\315\314\314\314\314\3142@\n\327\243p=\032x@\217\302\365(\\\017%@+\030\225\324\th\306?\000\000\000\000\000\000\000\000\327\243p=\n\327\027@\000\000\000\000\000\000\000\000V\016-\262\235\357\337?w\276\237\032/\335\027@333333>@\3274\3578E\307\016@\000\000\000\000\000\000\024@\000\000\000\000\000pq@3333333@{\024\256G\341\226x@\303\365(\\\217B$@Dio\360\205\331#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\033/\335$\006\001\031@fffff&X@/\335$\006\201\225\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353QHx@q=\n\327\243p0@2ZGU\023D\275?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?9\264\310v\276\037\033@33333\323Q@E\330\360\364J\331\006@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\341z\024\256G\271x@\256G\341z\024\256\036@\366]\021\374o%\253?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?7\211A`\345P\034@\315\314\314\314\314\214O@7\211A`\345P\013@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@)\\\217\302\365\300x@\315\314\314\314\314\314\026@\3578EGr\371\317?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?!\260rh\221m\027@\315\314\314\314\314\214X@\212\260\341\351\225\262\372?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@q=\n\327\243\200x@R\270\036\205\353Q5@\033\236^)\313\3609@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\236\357\247\306K7\025@fffffFV@\\\217\302\365(\\\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\327\243p=\n\327_@\244p=\n\327\243:@j\366@+0d\301?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\250\306K7\211A\030@\315\314\314\314\314\214M@\024\320D\330\360\364\020@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\205\353Q\270\036\325w@R\270\036\205\353Q-@\262KTo\rl\323?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?sh\221\355|?\031@fffff\346<@\'\240\211\260\341\251\025@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\232\231\231\231\231\231\030@1%\222\350e4\033@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?m\347\373\251\361R\030@\232\231\231\231\231\031U@=\n\327\243p\275\005@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@ffffff-@e\215z\210F\367!@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\244p=\n\327\243\350?\014\002+\207\026\331\030@\232\231\231\231\231YX@\321\221\\\376C\372\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256\233w@\232\231\231\231\231\2311@\326\305m4\200\337F@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\372~j\274t\023\022@\000\000\000\000\000\000Y@\234\242#\271\374\207\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256G\021V@=\n\327\243p}B@\325\347j+\366W%@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\274t\223\030\004\326\031@33333\263W@\221~\373:p\316\377?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256\207E@{\024\256G\341\3727@J\357\033_{f\315?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\347\373\251\361\322M\031@\000\000\000\000\000@J@\317f\325\347jk\021@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@R\270\036\205\353\255x@q=\n\327\243\360%@\001\336\002\t\212\1772@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\307K7\211A`\345?Zd;\337O\215\020@\000\000\000\000\000\000Y@\376\324x\351&1\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\\\217\302\365(\374B@o*Ral!\314?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\234\304 \260rh\026@\000\000\000\000\000\000O@\322o_\007\316Y\030@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@3333330@9b->\005\300\304?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\366(\\\217\302\365\030@\315\314\314\314\314L0@\236\357\247\306K\267\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@fffff\316x@\\\217\302\365(\\\032@\255n\365\234\364\276\241?\000\000\000\000\000\200A@=\n\327\243p=\030@\000\000\000\000\000\000\000\000\021\307\272\270\215\006\334?9\264\310v\276\037\030@\315\314\314\314\314L7@U0*\251\023\220\032@\000\000\000\000\000\000\360?\000\000\000\000\000\000s@fffff\3460@\000\000\000\000\000\244v@R\270\036\205\353Q\037@\375\274\251H\2051\001@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\274t\223\030\004\326\026@\000\000\000\000\000\240X@\r\340-\220\240\370\371?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@33333_p@\024\256G\341z\224/@\270\222\035\033\201x\215?\000\000\000\000\000\000N@q=\n\327\243p\007@\000\000\000\000\000\000\000\000D\213l\347\373\251\331?\321\"\333\371~j\032@\315\314\314\314\314\3142@p\316\210\322\336\340\030@\000\000\000\000\000\000\360?\000\000\000\000\000\220p@333333/@33333\213w@\205\353Q\270\036\205\021@"
      }
    }
  }
}
node {
  name: "Log1p"
  op: "Log1p"
  input: "Log1p/x"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 404
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "Log1p_1/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 404
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 404
          }
        }
        tensor_content: "ffffff.@fffff&E@\000\000\000\000\000\000I@\232\231\231\231\231\0315@33333\2631@\000\000\000\000\000\2002@\232\231\231\231\231\231&@333333/@333333/@\315\314\314\314\314\314,@333333(@fffff\3461@\232\231\231\231\231\0317@fffff\3463@ffffff/@\232\231\231\231\231\231!@\000\000\000\000\000\000I@\000\000\000\000\000\2006@\232\231\231\231\231\0318@\000\000\000\000\000\200;@\315\314\314\314\314\314%@\315\314\314\314\314\314>@33333s@@\000\000\000\000\000\0008@\000\000\000\000\000\2002@\232\231\231\231\231\231*@fffff\3466@\232\231\231\231\231YA@\232\231\231\231\231\2310@\000\000\000\000\000\2001@\315\314\314\314\314L6@\232\231\231\231\231\0310@\315\314\314\314\314\314-@\232\231\231\231\231\0317@33333sA@\000\000\000\000\000\0009@\315\314\314\314\314\314+@333333*@ffffff4@\000\000\000\000\000\0004@ffffff.@33333\2638@3333336@33333\2630@ffffff)@333333/@ffffff2@\000\000\000\000\000\0005@\232\231\231\231\231\031>@333333.@33333\2632@333333#@\000\000\000\000\000\200?@\315\314\314\314\314\3148@\232\231\231\231\231\0313@\000\000\000\000\000\0006@\000\000\000\000\000\000-@\000\000\000\000\000\000&@\000\000\000\000\000\000@@ffffff=@\315\314\314\314\314L4@ffffff8@333333-@\000\000\000\000\000\2003@333333,@\232\231\231\231\231\231,@333333/@\000\000\000\000\000\000%@333333\031@\315\314\314\314\314L3@\315\314\314\314\314L3@\315\314\314\314\314\314*@333333B@\315\314\314\314\314\3141@\000\000\000\000\000\000+@\000\000\000\000\000\2000@\232\231\231\231\231\231 @\232\231\231\231\231\231,@\000\000\000\000\000\0000@\315\314\314\314\314\314*@\232\231\231\231\231\231<@\000\000\000\000\000\300E@3333334@\000\000\000\000\000\0006@\000\000\000\000\000\0007@33333\2634@\000\000\000\000\000\000)@\000\000\000\000\000@H@333333-@\315\314\314\314\314\314*@33333\2637@\000\000\000\000\000\000I@33333\2635@fffff\346C@\232\231\231\231\231YC@3333336@33333sA@\000\000\000\000\000\2006@\232\231\231\231\231\031?@33333\263<@\000\000\000\000\000\000G@\232\231\231\231\231\331D@\000\000\000\000\000\0005@\232\231\231\231\231\231:@\000\000\000\000\000\000.@ffffff8@\232\231\231\231\231\231*@3333335@ffffff\'@33333\2635@ffffff3@\000\000\000\000\000\000I@\315\314\314\314\314\3146@33333\2633@33333\2638@\232\231\231\231\231\031B@ffffff,@fffff\3462@\315\314\314\314\314L2@\232\231\231\231\231\2314@\232\231\231\231\231\2318@3333332@ffffff!@\000\000\000\000\000\000F@\315\314\314\314\314\314$@ffffff*@3333335@\000\000\000\000\000\200B@33333\263>@fffff\3466@\000\000\000\000\000\0004@\315\314\314\314\314L3@33333\263?@\000\000\000\000\000\000@@\232\231\231\231\231\0317@\315\314\314\314\314\3142@\315\314\314\314\314\314%@\000\000\000\000\000\000I@\232\231\231\231\231\2313@\000\000\000\000\000\000\024@\315\314\314\314\314\314,@\315\314\314\314\314\3143@\232\231\231\231\231\231+@\232\231\231\231\231\2313@fffff\3467@\000\000\000\000\000\2008@\000\000\000\000\000\0009@fffff\3463@3333331@\232\231\231\231\231\2318@\000\000\000\000\000\000+@\232\231\231\231\231\231:@ffffff5@\315\314\314\314\314\314\'@\232\231\231\231\231\2316@\232\231\231\231\231\2313@\000\000\000\000\000\000!@33333\2637@\232\231\231\231\231\0317@ffffff6@\000\000\000\000\000\2004@\232\231\231\231\231\2317@ffffff2@\232\231\231\231\231\231A@\232\231\231\231\231\0317@fffff\346;@\232\231\231\231\231\2314@33333\2637@\000\000\000\000\000\000<@333333+@\232\231\231\231\231\031;@\232\231\231\231\231\2317@\232\231\231\231\231\2314@3333332@33333\2635@\232\231\231\231\231\0311@\315\314\314\314\314\314 @\315\314\314\314\314L9@\232\231\231\231\231\231+@3333336@ffffff2@33333\2634@\232\231\231\231\231\231?@\000\000\000\000\000\200>@\315\314\314\314\314L4@\232\231\231\231\231\231!@3333333@ffffff3@\232\231\231\231\231\0317@\000\000\000\000\000\0007@\232\231\231\231\231\231-@ffffffH@\232\231\231\231\231\2316@33333\263@@\232\231\231\231\231\0315@333333+@\232\231\231\231\231\031@@333333*@ffffff7@fffff\3462@fffff\3467@\232\231\231\231\231\231\'@\315\314\314\314\314L7@\315\314\314\314\314\3146@\232\231\231\231\231\2313@33333\2630@\315\314\314\314\314\314*@3333336@ffffff4@\315\314\314\314\314\3145@ffffff:@\315\314\314\314\314\314-@\232\231\231\231\231\0318@\315\314\314\314\314\3147@\232\231\231\231\231\231(@\232\231\231\231\231\031=@\000\000\000\000\000\0005@\000\000\000\000\000\2003@\315\314\314\314\314L7@\315\314\314\314\314\3147@\315\314\314\314\314\3141@\000\000\000\000\000\000\'@33333\2635@fffff\3463@\000\000\000\000\000\0009@33333\263@@\000\000\000\000\000\200<@ffffff5@\315\314\314\314\314L8@\000\000\000\000\000\200;@\315\314\314\314\314\214@@3333330@\315\314\314\314\314L7@fffff&H@fffff\3466@\315\314\314\314\314\3146@333333*@ffffff)@\232\231\231\231\231\2316@\000\000\000\000\000\000.@\232\231\231\231\231\231.@\000\000\000\000\000\000%@\000\000\000\000\000\0008@\000\000\000\000\000\2002@33333\2635@\000\000\000\000\000\2003@\232\231\231\231\231\231@@3333337@\000\000\000\000\000\000\024@\232\231\231\231\231\0313@ffffff)@\315\314\314\314\314L6@ffffff$@\315\314\314\314\314\314+@\315\314\314\314\314L0@\000\000\000\000\000\0001@\232\231\231\231\231\0314@fffff\346=@3333331@fffff\246B@33333\263F@\315\314\314\314\314\3141@3333337@\000\000\000\000\000\000=@\000\000\000\000\000\0006@\000\000\000\000\000\0002@ffffff1@\315\314\314\314\314LA@\232\231\231\231\231\0314@\000\000\000\000\000\0009@333333/@\315\314\314\314\314\3148@333333<@3333335@ffffff5@\315\314\314\314\314\3147@\000\000\000\000\000\000?@333333:@ffffff1@33333\363B@\000\000\000\000\000\2001@\000\000\000\000\000\0004@\232\231\231\231\231\231 @fffff\3467@\315\314\314\314\314\314 @\232\231\231\231\231\231+@\315\314\314\314\314\314\034@ffffff\'@\232\231\231\231\231\0311@\232\231\231\231\231\2315@\000\000\000\000\000\000I@\232\231\231\231\231\0310@ffffff4@\232\231\231\231\231\2314@ffffff5@\232\231\231\231\231\2314@\000\000\000\000\000@B@\000\000\000\000\000\000!@\315\314\314\314\314\3148@\232\231\231\231\231\231%@fffff\3465@\315\314\314\314\314L1@fffff\3462@\232\231\231\231\231\031B@\315\314\314\314\314\314-@3333332@fffff\246@@\315\314\314\314\314\3145@33333\2633@\232\231\231\231\231\231?@\315\314\314\314\314\3148@ffffff3@\315\314\314\314\314\3146@\000\000\000\000\000\000\036@ffffffF@\315\314\314\314\314\3140@33333\2632@\000\000\000\000\000\000I@\000\000\000\000\000\000I@\000\000\000\000\000\2003@\232\231\231\231\231\0314@\000\000\000\000\000\000I@3333331@\315\314\314\314\314\3144@\315\314\314\314\314L3@fffff\246D@ffffff4@\000\000\000\000\000\2004@\232\231\231\231\231\231+@\000\000\000\000\000\2000@fffff\3467@\232\231\231\231\231\2314@\000\000\000\000\000\200?@\315\314\314\314\314L7@\315\314\314\314\314\3140@\000\000\000\000\000\000,@fffff\346@@\315\314\314\314\314\014B@\232\231\231\231\231\231)@\315\314\314\314\314L2@33333\2632@\232\231\231\231\231\0313@\000\000\000\000\000\000=@\232\231\231\231\231\031>@\000\000\000\000\000\000I@\000\000\000\000\000\000I@\000\000\000\000\000\0006@\315\314\314\314\314\314\'@\315\314\314\314\314\314B@\000\000\000\000\000\000I@33333\2636@\315\314\314\314\314\3144@\000\000\000\000\000\2007@fffff\346;@\000\000\000\000\000\000I@\315\314\314\314\314L3@fffff\3467@\232\231\231\231\231\2316@ffffff.@33333\2635@3333333@fffff\346E@\315\314\314\314\314L4@\232\231\231\231\231\231@@fffff\3463@\000\000\000\000\000\2006@\232\231\231\231\231Y@@\000\000\000\000\000\0006@\232\231\231\231\231\0311@\000\000\000\000\000\0003@\000\000\000\000\000\000.@\232\231\231\231\231\0310@\232\231\231\231\231\0319@33333\2637@33333\263<@\232\231\231\231\231\231B@\232\231\231\231\231\2316@ffffff0@\000\000\000\000\000\0009@\315\314\314\314\314\314=@\232\231\231\231\231\0316@ffffff1@\232\231\231\231\231\0312@\315\314\314\314\314L>@\000\000\000\000\000\2001@33333\2638@333333)@\000\000\000\000\000\200:@33333\263<@\232\231\231\231\231\231*@\315\314\314\314\314\314$@ffffff8@\000\000\000\000\000\0007@\000\000\000\000\000\0004@\315\314\314\314\314\3141@\000\000\000\000\000\000\034@\232\231\231\231\231\231\'@ffffff8@\232\231\231\231\231\231+@ffffff3@3333339@ffffff3@ffffff3@\232\231\231\231\231\031=@"
      }
    }
  }
}
node {
  name: "Log1p_1"
  op: "Log1p"
  input: "Log1p_1/x"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 404
          }
        }
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "Log1p"
  input: "Log1p_1"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 320
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 87654321
      }
    }
  }
}
node {
  name: "seed2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 42
      }
    }
  }
}
node {
  name: "seed2/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2/Equal"
  op: "Equal"
  input: "seed"
  input: "seed2/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2/Equal_1"
  op: "Equal"
  input: "seed2/Const"
  input: "seed2/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/LogicalAnd"
  op: "LogicalAnd"
  input: "seed2/Equal"
  input: "seed2/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "seed2"
  op: "Select"
  input: "seed2/LogicalAnd"
  input: "seed2/Const_1"
  input: "seed2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "RepeatDataset"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_aDBaNS2H9to"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "adanet/iteration_0/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/step/Assign"
  op: "Assign"
  input: "adanet/iteration_0/step"
  input: "adanet/iteration_0/step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/step/read"
  op: "Identity"
  input: "adanet/iteration_0/step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  op: "Cast"
  input: "IteratorGetNext"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
  op: "Pack"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2791452705860138
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2791452705860138
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/Size"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/fraction"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/Size"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/fraction"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  op: "Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/Size"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/fraction"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/Size"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/fraction"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/Shape_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice/stack"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/strided_slice"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat/values_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Equal"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/All"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels/ExpandDims"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Const"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/mean_squared_error/Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/broadcast_weights"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Sum"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/weights"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar/x"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/rank"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/broadcast_weights_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Sum"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Cast"
  op: "Cast"
  input: "IteratorGetNext:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Cast"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Const"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/broadcast_weights"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Sum"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/value"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Cast"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total/read"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_dnn3/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/head/weighted_loss/value"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add/x"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/scalar"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.014999999664723873
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/scalar"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_1"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_2"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_2/x"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/Shape_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/strided_slice"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat/values_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Equal"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/All"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Const"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/broadcast_weights"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Sum"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/weights"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar/x"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/rank"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add:0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/broadcast_weights_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Sum"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Cast"
  op: "Cast"
  input: "IteratorGetNext:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Cast"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Const"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Cast"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/broadcast_weights"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Mul"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Sum"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_3"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Cast"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_0/step/read"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/is_training/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 20000
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/is_training"
  op: "Less"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/add"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/is_training/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/mul"
  op: "Mul"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/Pow"
  op: "Pow"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/mean/total"
  input: "adanet/iteration_0/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/mean/count"
  input: "adanet/iteration_0/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Cast"
  op: "Cast"
  input: "adanet/iteration_0/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_3"
  input: "adanet/iteration_0/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/mean/total"
  input: "adanet/iteration_0/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/mean/count"
  input: "adanet/iteration_0/mean/Cast"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/mean/count/read"
  input: "adanet/iteration_0/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/mean/total/read"
  input: "adanet/iteration_0/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/mean/AssignAdd_1"
  input: "adanet/iteration_0/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/mean/AssignAdd"
  input: "adanet/iteration_0/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/LogicalNot"
  op: "LogicalNot"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd/x"
  input: "adanet/iteration_0/train_op/is_over/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Assign"
  op: "Assign"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/read"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/value"
  op: "Const"
  input: "^adanet/iteration_0/train_op/is_over/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/assign_is_over"
  op: "Assign"
  input: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/Switch:1"
  input: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/Switch"
  op: "RefSwitch"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_0/train_op/is_over/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/noassign_is_over"
  op: "NoOp"
  input: "^adanet/iteration_0/train_op/is_over/cond/switch_f"
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/cond/switch_f"
  input: "^adanet/iteration_0/train_op/is_over/cond/noassign_is_over"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_0/train_op/is_over/cond/control_dependency"
  input: "adanet/iteration_0/train_op/is_over/cond/assign_is_over"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd/value"
  op: "Const"
  input: "^adanet/iteration_0/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "adanet/iteration_0/train_op/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd_1/value"
  op: "Const"
  input: "^adanet/iteration_0/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/step"
  input: "adanet/iteration_0/train_op/AssignAdd_1/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/train_op/AssignAdd"
  input: "^adanet/iteration_0/train_op/AssignAdd_1"
  input: "^adanet/iteration_0/train_op/is_over/cond/Merge"
}
node {
  name: "adanet/iteration_2/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/step/Assign"
  op: "Assign"
  input: "adanet/iteration_2/step"
  input: "adanet/iteration_2/step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/step/read"
  op: "Identity"
  input: "adanet/iteration_2/step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/is_training"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/mul"
  op: "Mul"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/Pow"
  op: "Pow"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/t0_dnn3_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/t0_dnn3_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/t0_dnn3_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  op: "Cast"
  input: "IteratorGetNext"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
  op: "Pack"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2791452705860138
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2791452705860138
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_0/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_1/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/logits/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/zero_fraction_2/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/logits/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/t2_dnn2/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/Shape_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice/stack"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/strided_slice"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat/values_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/All"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/ExpandDims"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step/Assign"
  op: "Assign"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step/read"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/Fill"
  op: "Fill"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/Fill"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/Fill"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/scalar"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ToFloat"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/Const_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ResourceApplyProximalAdagrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/value"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad"
  op: "AssignAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "t2_dnn2/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "t2_dnn2/loss"
  op: "ScalarSummary"
  input: "t2_dnn2/loss/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/Shape_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice/stack"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/strided_slice"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat/values_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/All"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels/ExpandDims"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/mean_squared_error/Mul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/t2_dnn2/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn2/t2_dnn2/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/t2_dnn2/loss/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  op: "Cast"
  input: "IteratorGetNext"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
  op: "Pack"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/strided_slice"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/x/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2791452705860138
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2791452705860138
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_0/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_1/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  op: "Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_2/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_2/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/hiddenlayer_2/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/Size"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/fraction"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/logits/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/fraction_of_zero_values/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/zero_fraction_3/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model_fn/dnn/model_fn/dnn/logits/activation"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/activation"
  op: "HistogramSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/t2_dnn3/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/activation/tag"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/Shape_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice/stack"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/strided_slice"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat/values_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/All"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/ExpandDims"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step/Assign"
  op: "Assign"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step/read"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/Fill"
  op: "Fill"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/Fill"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/Fill"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/scalar"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ToFloat"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/input_from_feature_columns/input_layer/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/Const_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ResourceApplyProximalAdagrad"
  op: "ResourceApplyProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/learning_rate"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l1_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/l2_regularization_strength"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/gradients/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update"
  op: "NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ResourceApplyProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update_adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ResourceApplyProximalAdagrad"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/value"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad"
  op: "AssignAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "t2_dnn3/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "t2_dnn3/loss"
  op: "ScalarSummary"
  input: "t2_dnn3/loss/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/Shape_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice/stack"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/strided_slice"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat/values_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Equal"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/All"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/concat"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels"
  op: "Identity"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels/ExpandDims"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/mean_squared_error/Mul"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Sum"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/Sum_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/t2_dnn3/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/subnetwork_t2_dnn3/t2_dnn3/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/t2_dnn3/loss/tags"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias/read"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias/read"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add_1"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add/x"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/scalar"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.014999999664723873
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/scalar"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_1"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul_1"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_2"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_2/x"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Abs"
  op: "Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_3"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/scalar_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.014999999664723873
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul_2"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/scalar_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_4"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul_2"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul_3"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_4"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_5"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_2"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity_regularization/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weights/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  op: "Pack"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble"
  op: "HistogramSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/truediv_1"
  op: "RealDiv"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/norm_1/Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/Shape_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice/stack"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/strided_slice"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat/values_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Equal"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/All"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/ExpandDims"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/Sum_1"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss_2/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_2"
      }
    }
  }
}
node {
  name: "loss_2"
  op: "ScalarSummary"
  input: "loss_2/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_6"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/loss/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/train_mixture_weights/NoOp"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_2/step/read"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/is_training/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 20000
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/is_training"
  op: "Less"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/add"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/is_training/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/mul"
  op: "Mul"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/Pow"
  op: "Pow"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_1"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/t2_dnn2_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_2/mean/total"
  input: "adanet/iteration_2/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_2/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_2/mean/count"
  input: "adanet/iteration_2/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_2/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Cast"
  op: "Cast"
  input: "adanet/iteration_2/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_6"
  input: "adanet/iteration_2/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_2/mean/total"
  input: "adanet/iteration_2/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_2/mean/count"
  input: "adanet/iteration_2/mean/Cast"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_2/mean/count/read"
  input: "adanet/iteration_2/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/mean/total/read"
  input: "adanet/iteration_2/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_2/mean/AssignAdd_1"
  input: "adanet/iteration_2/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_2/mean/AssignAdd"
  input: "adanet/iteration_2/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  op: "Shape"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/BiasAdd"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias/read"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias/read"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add_1"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add/x"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/scalar"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.014999999664723873
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/scalar"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_1"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul_1"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_2"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_2/x"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Abs"
  op: "Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Abs"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_3"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/scalar_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.014999999664723873
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul_2"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/scalar_1"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_4"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul_2"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul_3"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_4"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_5"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_2"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity_regularization/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weights/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  op: "Pack"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble"
  op: "HistogramSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/truediv_1"
  op: "RealDiv"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/norm_1/Squeeze"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/Shape_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/strided_slice"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat/values_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Equal"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/All"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels"
  op: "Identity"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/ExpandDims"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/ToFloat"
  op: "Cast"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Mul"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/mean_squared_error/Mul"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/Sum_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss_3/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_3"
      }
    }
  }
}
node {
  name: "loss_3"
  op: "ScalarSummary"
  input: "loss_3/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_6"
  op: "Add"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/loss/tags"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/train_mixture_weights/NoOp"
  op: "NoOp"
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_2/step/read"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/is_training/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 20000
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/is_training"
  op: "Less"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/add"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/is_training/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/mul"
  op: "Mul"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/Pow"
  op: "Pow"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_1"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/AssignSub"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/t2_dnn3_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/total/Assign"
  op: "Assign"
  input: "adanet/iteration_2/mean_1/total"
  input: "adanet/iteration_2/mean_1/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/total/read"
  op: "Identity"
  input: "adanet/iteration_2/mean_1/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/count/Assign"
  op: "Assign"
  input: "adanet/iteration_2/mean_1/count"
  input: "adanet/iteration_2/mean_1/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/count/read"
  op: "Identity"
  input: "adanet/iteration_2/mean_1/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Cast"
  op: "Cast"
  input: "adanet/iteration_2/mean_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Sum"
  op: "Sum"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_6"
  input: "adanet/iteration_2/mean_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_2/mean_1/total"
  input: "adanet/iteration_2/mean_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_2/mean_1/count"
  input: "adanet/iteration_2/mean_1/Cast"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Maximum"
  op: "Maximum"
  input: "adanet/iteration_2/mean_1/count/read"
  input: "adanet/iteration_2/mean_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/value"
  op: "DivNoNan"
  input: "adanet/iteration_2/mean_1/total/read"
  input: "adanet/iteration_2/mean_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_2/mean_1/AssignAdd_1"
  input: "adanet/iteration_2/mean_1/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/mean_1/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_2/mean_1/AssignAdd"
  input: "adanet/iteration_2/mean_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_candidate_index/ArgMin/input"
  op: "Pack"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/read"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/read"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/read"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/best_candidate_index/ArgMin/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_candidate_index/ArgMin"
  op: "ArgMin"
  input: "adanet/iteration_2/best_candidate_index/ArgMin/input"
  input: "adanet/iteration_2/best_candidate_index/ArgMin/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/stack"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/add"
  op: "Add"
  input: "adanet/iteration_2/best_candidate_index/ArgMin"
  input: "adanet/iteration_2/best_predictions/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/strided_slice/stack"
  op: "Pack"
  input: "adanet/iteration_2/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/strided_slice/stack_1"
  op: "Pack"
  input: "adanet/iteration_2/best_predictions/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/strided_slice/Cast"
  op: "Cast"
  input: "adanet/iteration_2/best_predictions/strided_slice/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_predictions/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_2/best_predictions/stack"
  input: "adanet/iteration_2/best_predictions/strided_slice/stack"
  input: "adanet/iteration_2/best_predictions/strided_slice/stack_1"
  input: "adanet/iteration_2/best_predictions/strided_slice/Cast"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_2/best_loss/stack"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/best_loss/Slice/begin"
  op: "Pack"
  input: "adanet/iteration_2/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_2/best_loss/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_loss/Slice"
  op: "Slice"
  input: "adanet/iteration_2/best_loss/stack"
  input: "adanet/iteration_2/best_loss/Slice/begin"
  input: "adanet/iteration_2/best_loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/best_loss/Reshape"
  op: "Reshape"
  input: "adanet/iteration_2/best_loss/Slice"
  input: "adanet/iteration_2/best_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/iteration/adanet/iteration/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration/adanet/iteration"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/iteration/adanet/iteration/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_2/iteration/adanet/iteration"
  op: "ScalarSummary"
  input: "adanet/iteration_2/iteration/adanet/iteration/tags"
  input: "adanet/iteration_2/iteration/adanet/iteration/values"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/iteration_step/adanet/iteration_step/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration_step/adanet/iteration_step"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/iteration_step/adanet/iteration_step"
  op: "ScalarSummary"
  input: "adanet/iteration_2/iteration_step/adanet/iteration_step/tags"
  input: "adanet/iteration_2/step/read"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_2/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_2/loss/tags"
  input: "adanet/iteration_2/best_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalNot"
  op: "LogicalNot"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_2/train_op/is_over/LogicalAnd/x"
  input: "adanet/iteration_2/train_op/is_over/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalNot_1"
  op: "LogicalNot"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalAnd_1"
  op: "LogicalAnd"
  input: "adanet/iteration_2/train_op/is_over/LogicalAnd"
  input: "adanet/iteration_2/train_op/is_over/LogicalNot_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalNot_2"
  op: "LogicalNot"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/LogicalAnd_2"
  op: "LogicalAnd"
  input: "adanet/iteration_2/train_op/is_over/LogicalAnd_1"
  input: "adanet/iteration_2/train_op/is_over/LogicalNot_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var/Assign"
  op: "Assign"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var/read"
  op: "Identity"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_2/train_op/is_over/LogicalAnd_2"
  input: "adanet/iteration_2/train_op/is_over/LogicalAnd_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_2/train_op/is_over/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_2/train_op/is_over/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_2/train_op/is_over/LogicalAnd_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/assign_is_over/value"
  op: "Const"
  input: "^adanet/iteration_2/train_op/is_over/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/assign_is_over"
  op: "Assign"
  input: "adanet/iteration_2/train_op/is_over/cond/assign_is_over/Switch:1"
  input: "adanet/iteration_2/train_op/is_over/cond/assign_is_over/value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/assign_is_over/Switch"
  op: "RefSwitch"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_2/train_op/is_over/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/noassign_is_over"
  op: "NoOp"
  input: "^adanet/iteration_2/train_op/is_over/cond/switch_f"
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/control_dependency"
  op: "Identity"
  input: "adanet/iteration_2/train_op/is_over/cond/switch_f"
  input: "^adanet/iteration_2/train_op/is_over/cond/noassign_is_over"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/is_over/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_2/train_op/is_over/cond/control_dependency"
  input: "adanet/iteration_2/train_op/is_over/cond/assign_is_over"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/AssignAdd/value"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/train_mixture_weights/NoOp"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/train_mixture_weights/NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad"
  input: "^adanet/iteration_2/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "adanet/iteration_2/train_op/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/AssignAdd_1/value"
  op: "Const"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/train_mixture_weights/NoOp"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/train_mixture_weights/NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad"
  input: "^adanet/iteration_2/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_2/step"
  input: "adanet/iteration_2/train_op/AssignAdd_1/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_2/train_op/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/train_mixture_weights/NoOp"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/train_mixture_weights/NoOp"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/head/ProximalAdagrad"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/head/ProximalAdagrad"
  input: "^adanet/iteration_2/train_op/AssignAdd"
  input: "^adanet/iteration_2/train_op/AssignAdd_1"
  input: "^adanet/iteration_2/train_op/is_over/cond/Merge"
}
node {
  name: "current_iteration/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "current_iteration"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "current_iteration/Assign"
  op: "Assign"
  input: "current_iteration"
  input: "current_iteration/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "current_iteration/read"
  op: "Identity"
  input: "current_iteration"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_0/step/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0/Assign"
  input: "^adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Assign"
  input: "^adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  input: "^adanet/iteration_2/step/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/iteration_step/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/iteration_step/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/Assign"
  input: "^adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/Assign"
  input: "^adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var/Assign"
  input: "^current_iteration/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "current_iteration"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/mean_1/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/mean_1/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_2/step"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/mean/total"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/mean/count"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count"
        string_val: "adanet/iteration_0/mean/total"
        string_val: "adanet/iteration_0/mean/count"
        string_val: "adanet/iteration_2/mean/total"
        string_val: "adanet/iteration_2/mean/count"
        string_val: "adanet/iteration_2/mean_1/total"
        string_val: "adanet/iteration_2/mean_1/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "current_iteration"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 64
          }
        }
        string_val: "global_step"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_2/step"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean/total/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_1/total/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/mean_2/total/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/prediction/mean/total/Assign"
  input: "^adanet/iteration_0/mean/count/Assign"
  input: "^adanet/iteration_0/mean/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_1/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_1/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_2/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/mean_2/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_dnn3/prediction/mean/total/Assign"
  input: "^adanet/iteration_2/mean/count/Assign"
  input: "^adanet/iteration_2/mean/total/Assign"
  input: "^adanet/iteration_2/mean_1/count/Assign"
  input: "^adanet/iteration_2/mean_1/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/Read_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/Read_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/Read_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/Read_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/Read_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/Identity_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/Read_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/Identity_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/Read_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/Identity_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/Read_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/Identity_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/Read_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/Identity_20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/Read_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/Identity_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/Read_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/Identity_24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/Read_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/Identity_26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/Read_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/Identity_28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/Read_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/Identity_30"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/Read_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/Identity_32"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/Read_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/Identity_34"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/Read_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/Identity_36"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/Read_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/Identity_38"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/Read_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/Identity_40"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/Read_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/Identity_42"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/Read_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/Identity_44"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/Read_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/Identity_46"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/Read_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/Identity_48"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/Read_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/Identity_50"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/Read_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/Identity_52"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/Read_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/Identity_54"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/Read_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/Identity_56"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/Read_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/Identity_58"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/Read_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/Identity_60"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/Read_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/Identity_62"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/Read_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/Identity_64"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/Read_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/Identity_66"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/Read_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/Identity_68"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/Read_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/Identity_70"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_a09c539f92ae4811880c9e4701f39aad/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
        string_val: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/step"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_2/step"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  input: "current_iteration"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Read_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/Read_36/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/Identity_72"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/Read_37/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/Identity_74"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/Read_38/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/Identity_76"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/Read_39/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/Identity_78"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/Read_40/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/Identity_80"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/Read_41/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/Identity_82"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/Read_42/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/Identity_84"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/Read_43/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/Identity_86"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/Read_44/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/Identity_88"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/Read_45/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/Identity_90"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/Read_46/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/Identity_92"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/Read_47/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/Identity_94"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/Read_48/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/Identity_96"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_49/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/Read_49/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/Identity_98"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_50/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/Read_50/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/Identity_100"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_51/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/Read_51/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/Identity_102"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_52/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/Read_52/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/Identity_104"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_53/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/Read_53/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/Identity_106"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_54/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/Read_54/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/Identity_108"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_55/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/Read_55/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/Identity_110"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_56/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/Read_56/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/Identity_112"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_57/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/Read_57/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/Identity_114"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_58/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/Read_58/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/Identity_116"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_59/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/Read_59/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/Identity_118"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_60/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/Read_60/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/Identity_120"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_61/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/Read_61/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/Identity_122"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_62/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/Read_62/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/Identity_124"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_63/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/Read_63/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/Identity_126"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_64/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/Read_64/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/Identity_128"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_65/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/Read_65/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/Identity_130"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_66/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/Read_66/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/Identity_132"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_67/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/Read_67/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/Identity_134"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_68/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/Read_68/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/Identity_136"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_69/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/Read_69/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/Identity_138"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_70/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/Read_70/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/Identity_140"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_71/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/Read_71/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/Identity_142"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/ork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/k_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/ork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/k_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/bnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/ork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/k_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/ork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/k_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/ork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/k_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/bnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "1 0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 1 0,64:0,1"
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "save/Identity_73"
  input: "save/Identity_75"
  input: "save/Identity_77"
  input: "save/Identity_79"
  input: "save/Identity_81"
  input: "save/Identity_83"
  input: "save/Identity_85"
  input: "save/Identity_87"
  input: "save/Identity_89"
  input: "save/Identity_91"
  input: "save/Identity_93"
  input: "save/Identity_95"
  input: "save/Identity_97"
  input: "save/Identity_99"
  input: "save/Identity_101"
  input: "save/Identity_103"
  input: "save/Identity_105"
  input: "save/Identity_107"
  input: "save/Identity_109"
  input: "save/Identity_111"
  input: "save/Identity_113"
  input: "save/Identity_115"
  input: "save/Identity_117"
  input: "save/Identity_119"
  input: "save/Identity_121"
  input: "save/Identity_123"
  input: "save/Identity_125"
  input: "save/Identity_127"
  input: "save/Identity_129"
  input: "save/Identity_131"
  input: "save/Identity_133"
  input: "save/Identity_135"
  input: "save/Identity_137"
  input: "save/Identity_139"
  input: "save/Identity_141"
  input: "save/Identity_143"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_2/step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
        string_val: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "adanet/iteration_0/step"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t0_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn2_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/candidate_t2_dnn3_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn2_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/ensemble_t2_dnn3_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "adanet/iteration_2/step"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn2/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/subnetwork_t2_dnn3/iteration_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_2/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "current_iteration"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/ork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/k_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/ork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/k_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/bnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/ork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/k_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/ork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/k_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/ork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/k_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel"
        string_val: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/bnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "1 0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "64 64 0,64:0,64"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "64 1 0,64:0,1"
        string_val: "64 1 0,64:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "save/Identity_145"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "save/Identity_146"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "save/Identity_147"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "save/Identity_148"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2_1:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  input: "save/Identity_149"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2_1:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  input: "save/Identity_150"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2_1:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/bias/part_0"
  input: "save/Identity_151"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2_1:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_dnn3/model_fn/dnn/logits/kernel/part_0"
  input: "save/Identity_152"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2_1:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "save/Identity_153"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2_1:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  input: "save/Identity_154"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2_1:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "save/Identity_155"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2_1:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_156"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2_1:12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "save/Identity_157"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2_1:13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  input: "save/Identity_158"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2_1:14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "save/Identity_159"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2_1:15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_160"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2_1:16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0"
  input: "save/Identity_161"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2_1:17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  input: "save/Identity_162"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2_1:18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0"
  input: "save/Identity_163"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2_1:19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn2/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_164"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2_1:20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0"
  input: "save/Identity_165"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2_1:21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/bias/part_0/ProximalAdagrad"
  input: "save/Identity_166"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2_1:22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0"
  input: "save/Identity_167"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2_1:23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_0/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_168"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2_1:24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0"
  input: "save/Identity_169"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2_1:25"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/bias/part_0/ProximalAdagrad"
  input: "save/Identity_170"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2_1:26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0"
  input: "save/Identity_171"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2_1:27"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_1/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_172"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2_1:28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0"
  input: "save/Identity_173"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2_1:29"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/bias/part_0/ProximalAdagrad"
  input: "save/Identity_174"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2_1:30"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0"
  input: "save/Identity_175"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2_1:31"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/hiddenlayer_2/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_176"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2_1:32"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0"
  input: "save/Identity_177"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2_1:33"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/bias/part_0/ProximalAdagrad"
  input: "save/Identity_178"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2_1:34"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0"
  input: "save/Identity_179"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2_1:35"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/adanet/iteration_2/subnetwork_t2_dnn3/model_fn/dnn/logits/kernel/part_0/ProximalAdagrad"
  input: "save/Identity_180"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
library {
  function {
    signature {
      name: "_make_dataset_aDBaNS2H9to"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Log1p/x"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 404
              }
              dim {
                size: 13
              }
            }
            tensor_content: "c\321tv2\270\363?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\305 \260rh\221\030@\315\314\314\314\314\354V@\377\262{\362\260\320\017@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@fffff\316x@\270\036\205\353Q\2702@\355\273\"\370\337J\226?\000\000\000\000\000\240T@=\n\327\243p=\000@\000\000\000\000\000\000\000\000\217\302\365(\\\217\332?q=\n\327\243p\036@ffffff/@\024\256G\341z\024\031@\000\000\000\000\000\000\000@\000\000\000\000\000\300u@ffffff-@\256G\341z\024\266x@\341z\024\256G\341\010@\326s\322\373\306\227\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\376\324x\351&1\344?\341z\024\256G\341\023@\000\000\000\000\000\000Y@R\270\036\205\353Q\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Qxw@\024\256G\341z\024\n@+j0\r\303G\244?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\331\316\367S\343%\030@\000\000\000\000\000@A@\305\376\262{\362\360\027@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffff\316x@\205\353Q\270\036\005 @\226>tA}\213\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\033/\335$\006\201\031@\232\231\231\231\231\031V@(~\214\271k\211\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@{\024\256G\341vx@\315\314\314\314\314L-@]\212\253\312\276+\322?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?\242E\266\363\375\324\026@33333\223R@\030\225\324\th\342\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@\256G\341z\024rx@{\024\256G\341z\'@Ve\337\025\301_\"@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\276\237\032/\335$\026@\000\000\000\000\000\000Y@\014\223\251\202QI\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\232\231\231\231\231\2317@\210\205Z\323\274c\020@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\254\034Zd;\337\025@\000\000\000\000\000\000Y@\202\342\307\230\273\226\366?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@fffff\316x@\354Q\270\036\205k:@Z\365\271\332\212=\001@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?P\215\227n\022\203\026@\000\000\000\000\000\000Y@N\321\221\\\376C\370?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243(e@fffff\2460@\255Q\017\321\350\016\372?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\372~j\274t\023\024@\000\000\000\000\000\000Y@d\314]K\310\007\367?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@\024\256G\341z4A@\342\314\257\346\0001#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\004V\016-\262\235\031@\000\000\000\000\000\000Y@\323Mb\020X9\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\366(\\\217\302\201w@\217\302\365(\\O4@V\016-\262\235\3172@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?P\215\227n\022\203\022@\000\000\000\000\000\000Y@\006\022\024?\306\334\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\n\327\243p=\312<@\217\302\365(\\/A@W`\310\352V\317\301?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?}?5^\272I\026@\000\000\000\000\000 V@0*\251\023\320\304\004@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@fffff\316x@\341z\024\256Ga-@\213\340\177+\331\261\016@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?\033/\335$\006\001\031@fffff\306V@w\276\237\032/]\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\352u@\341z\024\256Ga,@\'\302\206\247W\312\330?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?\301\312\241E\266s\026@fffff\346W@\314\177H\277}\035\374?\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@q=\n\327\243tv@\303\365(\\\217B;@\3122\304\261.bR@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\207\026\331\316\367\323\027@\000\000\000\000\000\000Y@HP\374\030s\327\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333s0@\037\205\353Q\270\2364@d\222\221\263\260\'\032@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\376\324x\351&1\344?\252\361\322Mb\020\034@\000\000\000\000\000`X@\314]K\310\007=\363?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314\200x@\256G\341z\024\256\007@\004\377[\311\216\215\260?\000\000\000\000\000\200Q@\354Q\270\036\205\353\001@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?\341z\024\256Ga\031@\232\231\231\231\231\0314@\344\203\236\315\252O\037@\000\000\000\000\000\000\024@\000\000\000\000\000`v@\232\231\231\231\231\231-@\244p=\n\327\003w@\341z\024\256G\341\023@3\304\261.n\243\241?\000\000\000\000\000\240T@=\n\327\243p=\000@\000\000\000\000\000\000\000\000\217\302\365(\\\217\332?\331\316\367S\343\245\030@333333C@\024\256G\341z\024\031@\000\000\000\000\000\000\000@\000\000\000\000\000\300u@ffffff-@\270\036\205\353Q\234x@\270\036\205\353Q\270\035@\017\227\034wJ\007\303?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\234\304 \260r\350\032@\232\231\231\231\231\371S@b\241\3264\3578\006@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\\\217\302\365(\254x@\327\243p=\n\327\"@x\234\242#\271\324B@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\002+\207\026\331\316\030@\315\314\314\314\314\254S@\221~\373:p\316\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353\3212@\n\327\243p=\n-@\263\315\215\351\tK\234?\000\000\000\000\000\300R@\232\231\231\231\231\231\007@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\341z\024\256Ga\032@\315\314\314\314\314\3145@\320\263Y\365\271\232\025@\000\000\000\000\000\000\010@\000\000\000\000\000\200o@\315\314\314\314\314L2@\256G\341z\024\272x@H\341z\024\256G\021@\333m\027\232\3534\222?\000\000\000\000\000\300W@\205\353Q\270\036\205\367?\000\000\000\000\000\000\000\000\230n\022\203\300\312\331?\n\327\243p=\212\034@\315\314\314\314\314\314+@[\323\274\343\024\235\036@\000\000\000\000\000\000\010@\000\000\000\000\000 y@\000\000\000\000\000\0001@\315\314\314\314\314\004x@\315\314\314\314\314\314\021@\211\265\370\024\000\343y?\000\000\000\000\000\0002@{\024\256G\341z\002@\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\315\314\314\314\314L\032@\315\314\314\314\314LP@\\\217\302\365(\\\020@\000\000\000\000\000\000\360?\000\000\000\000\000\200r@\232\231\231\231\231\231.@fffff\316x@\354Q\270\036\205\353\023@2\254\342\215\314#\237?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\024\256G\341z\224\027@\315\314\314\314\314\314M@\366(\\\217\302u\026@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@)\\\217\302\365\254x@\037\205\353Q\270\036%@\204*5{\240\245#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\223\030\004V\016-\033@33333\263X@\356|?5^\272\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@=\n\327\243p=5@\321W\220f,\232\266?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340??5^\272I\014\030@fffff\246P@\313\241E\266\363=\026@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\232\231\231\231\231\271x@\\\217\302\365(\334(@5\007\010\346\350\361\233?\000\000\000\000\000\000\000\000H\341z\024\256G\034@\000\000\000\000\000\000\000\000j\274t\223\030\004\336?=\n\327\243p\275\034@\315\314\314\314\314\214N@\256\330_vO\336\023@\000\000\000\000\000\000\000@\000\000\000\000\000@n@\315\314\314\314\314\3141@\341z\024\256G\215x@\037\205\353Q\270\036\020@\034_{fI\200\345?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\215\227n\022\203@\027@33333\223V@\356|?5^\272\022@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\256G\341z\024\216w@\037\205\353Q\270\236-@\372\263\037)\"\303\306?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?-\262\235\357\247F\026@\000\000\000\000\000`R@\373\\m\305\3762\003@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@\270\036\205\353Q\274x@333333.@9\326\305m4\200\247?\000\000\000\000\000@J@H\341z\024\256G\025@\000\000\000\000\000\000\000\000\354Q\270\036\205\353\331?\303\365(\\\217B\031@\315\314\314\314\314\314F@0*\251\023\320D\035@\000\000\000\000\000\000\030@\000\000\000\000\000Pr@\232\231\231\231\231\2310@fffff\316x@ffffff\036@?RD\206U\\\024@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\343\245\233\304 0\031@33333\363V@\374\030s\327\022\362\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243p\021x@\205\353Q\270\036E1@\303G\304\224H\002\037@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?Nb\020X94\031@\315\314\314\314\314\354T@\026\373\313\356\311C\006@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\003q@{\024\256G\341:0@[_$\264\345\334\360?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?=\n\327\243p\275\027@\315\314\314\314\314L=@t$\227\377\220\376\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\232\231\231\231\231-x@R\270\036\205\353Q\032@\337\375\361^\2652\241?\000\000\000\000\000\300R@\232\231\231\231\231\231\007@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\177j\274t\223\030\034@\232\231\231\231\231\231/@\320\263Y\365\271\232\025@\000\000\000\000\000\000\010@\000\000\000\000\000\200o@\315\314\314\314\314L2@R\270\036\205\353\271x@\256G\341z\024\256\377?j\207\277&k\324\325?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?)\\\217\302\365\250\031@\315\314\314\314\314\014D@\030\225\324\th\342\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@{\024\256G\341z\030@\331Z_$\264\345\352?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?L7\211A`e\026@\315\314\314\314\314lU@\341\013\223\251\202\321\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\037\205\353Q\270\366r@\303\365(\\\217\2020@\314bb\363qm\362?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\347\373\251\361\322\315\026@\000\000\000\000\000\300W@#J{\203/L\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\270\036\205\353Qlv@\232\231\231\231\231Y2@\360P\024\350\023y\326?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?D\213l\347\373)\030@33333\363H@\030\225\324\th\342\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\315\314\314\314\314\314\036@\347\030\220\275\336\375\271?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\004V\016-\262\035\031@\000\000\000\000\000\240R@\241g\263\352s5\020@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@\303\365(\\\217Zw@q=\n\327\243\360\'@\310$#gaO\303?\000\000\000\000\000\000\000\000=\n\327\243p\275;@\000\000\000\000\000\000\000\000\260rh\221\355|\343?7\211A`\345\320\025@\315\314\314\314\314,W@\030\225\324\th\"\375?\000\000\000\000\000\000\020@\000\000\000\000\0008\206@\232\231\231\231\231\0314@=\n\327\243p\261x@\217\302\365(\\\0172@\0221%\222\350e\304?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\362\322Mb\020\330\030@\000\000\000\000\000\000\032@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@\217\302\365(\\\247x@\303\365(\\\217\302\035@J\265O\307c\006\252?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\335$\006\201\225C\031@\315\314\314\314\314\014C@\023\362A\317f\325\031@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@\217\302\365(\\[x@\270\036\205\353Q\270\026@?W[\261\277,&@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\276\237\032/\335\244\031@\000\000\000\000\000\000Y@\347\214(\355\r\276\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\000\000\000\000\000\354s@\n\327\243p=\n.@\2343\242\2647\270*@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346??5^\272I\214\027@\315\314\314\314\314\254W@\3019#J{\203\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\232\231\231\231\231Y0@\031\347oB!\002\350?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\031\004V\016-\262\027@fffff\206W@)\355\r\2760\231\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\341z\024\256G\245x@\315\314\314\314\314L0@$EdX\305\033\325?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?}?5^\272I\027@\232\231\231\231\231\331W@\212\037c\356Z\302\003@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\327\243p=\nKx@\217\302\365(\\\017.@\322\000\336\002\t\n\360?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\031\004V\016-\262\032@33333\323U@\333\371~j\274\364\020@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@H\341z\024\256\303w@\366(\\\217\302\365\'@\210c]\334F\003\345?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\221\355|?5^\033@\000\000\000\000\000\000Y@\240\211\260\341\351\025\000@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@{\024\256G\341~x@\232\231\231\231\231\231\033@\267b\177\331=\331\033@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\'1\010\254\034\332\026@\000\000\000\000\000@X@m\347\373\251\361\322\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@{\024\256G\341\246x@\\\217\302\365(\0341@\347\000\301\034=~\257?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?\254\034Zd;\337\027@\000\000\000\000\000@M@\253>W[\261?\023@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffff\316x@\024\256G\341z\224\"@HP\374\030s\327,@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\362\322Mb\020\330\031@33333SW@\276\301\027&S\005\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243p};@\315\314\314\314\314\0142@\342\222\343N\351`\340?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?;\337O\215\227n\035@fffff\346Q@d;\337O\215\227\020@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\205\353Q\270\036ax@\354Q\270\036\205\353\022@\307\021k\361)\000\246?\000\000\000\000\000@J@H\341z\024\256G\025@\000\000\000\000\000\000\000\000\354Q\270\036\205\353\331?\303\365(\\\217B\032@fffff\3466@0*\251\023\320D\035@\000\000\000\000\000\000\030@\000\000\000\000\000Pr@\232\231\231\231\231\2310@\354Q\270\036\205;w@\205\353Q\270\036\005#@\027\267\321\000\336\202\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\205\353Q\270\036\205\027@33333SX@@\244\337\276\016\034\003@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\256G\341z\024\302u@\217\302\365(\\\017(@(D\300!T\251\261?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?{\024\256G\341z\027@\315\314\314\314\314lQ@\000o\201\004\305\017\002@\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@fffffRx@=\n\327\243p\275,@\316\302\236v\370\373 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?1\010\254\034Zd\031@fffff\206U@]\376C\372\355k\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314\334T@\244p=\n\327\2431@d#\020\257\353w\035@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\022\203\300\312\241\305\030@fffff\206S@\2343\242\2647\370\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\037\205\353Q\270.X@\205\353Q\270\036\2055@g\233\033\323\023\226\270?\000\000\000\000\000\000D@\244p=\n\327\243\031@\000\000\000\000\000\000\000\000\317\367S\343\245\233\334?\321\"\333\371~j\033@ffffffE@\031\342X\027\267\021\021@\000\000\000\000\000\000\020@\000\000\000\000\000\300o@\232\231\231\231\231\2311@fffff\316x@\327\243p=\n\327\007@\036\376\232\254Q\017\261?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?\311v\276\237\032/\032@\315\314\314\314\314\214@@\036\026jM\363\016\t@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\217\302\365(\\ox@R\270\036\205\353Q\025@\201&\302\206\247W\262?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?j\274t\223\030\004\030@fffff\006U@\334\327\201sF\224\001@\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@\037\205\353Q\270\232w@\n\327\243p=\212,@-!\037\364lV\275?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\364\375\324x\351&\032@\232\231\231\231\231YM@\327\243p=\nW\017@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@\217\302\365(\\\257x@\354Q\270\036\205\353\036@\236\357\247\306Kw$@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\331\316\367S\343\245\343?=\n\327\243p\275\030@\315\314\314\314\314,X@w\276\237\032/]\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333\273w@H\341z\024\256\0072@\'\240\211\260\341\351\305?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\362\322Mb\020X\027@\232\231\231\231\231\371V@\343\245\233\304 \260\001@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\037\205\353Q\270\272x@)\\\217\302\365\2502@Q\367\001Hm\002\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\232\231\231\231\231\031\032@\000\000\000\000\000\240U@?\306\334\265\204|\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\366(\\\217\302uI@\341z\024\256G!2@4\277\232\003\004S\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?X9\264\310v\276\031@\232\231\231\231\231\371U@I\235\200&\302\206\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\\\217\302\365(\014Y@\270\036\205\353Q80@\"\303*\336\310<\357?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\272I\014\002+\007\027@\232\231\231\231\231\231X@\370S\343\245\233\304\002@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\\\217\302\365(lp@\217\302\365(\\O1@[\323\274\343\024\r6@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\022\203\300\312\241E\027@\232\231\231\231\231\031W@$\271\374\207\364\333\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333wx@\\\217\302\365(\0346@0L\246\nF\325#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\234\304 \260rh\027@33333sS@\304\261.n\243\001\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\303\365(\\\217\"u@\270\036\205\353Q\370=@\224j\237\216\307\014\330?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\004V\016-\262\235\025@fffff&V@R\270\036\205\353Q\r@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\244p=\n\327\263x@{\024\256G\341\3727@S\256\360.\027\361\305?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\356|?5^\272\026@fffff\346@@\327\022\362A\317f\024@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@\354Q\270\036\205k$@\212\216\344\362\037R&@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?j\274t\223\030\204\032@fffff\246W@V}\256\266b\377\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffffv[@\205\353Q\270\036E7@<\203\206\376\t.\266?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\203\300\312\241E\266\034@\315\314\314\314\314L:@\263{\362\260P\353\031@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@\244p=\n\327gx@\366(\\\217\302\365\006@\037\021S\"\211^\324?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\016-\262\235\357\247\027@\315\314\314\314\314\314T@\351H.\377!\375\017@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@33333kx@\024\256G\341zT2@\003[%X\034\316\371?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\374\251\361\322Mb\030@\232\231\231\231\2319X@\243\001\274\005\022\024\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@R\270\036\205\353\to@\327\243p=\nW4@}\263\315\215\351\t\313?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?\240\032/\335$\206\026@\000\000\000\000\000\000Y@\243\001\274\005\022T\030@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\256G\341z\024*x@\256G\341z\024\356=@c\177\331=y\270/@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?/\335$\006\201\225\027@\232\231\231\231\231\331W@\313\020\307\272\270\215\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q\270\036@\244p=\n\327c8@333333\354?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343??5^\272I\214\026@\315\314\314\314\314\254W@=\233U\237\253\255\377?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@\327\243p=\nW2@_\2652\341\227\372\305?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?w\276\237\032/\335\027@\232\231\231\231\231YW@\240\032/\335$F\033@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@\341z\024\256G\241w@\341z\024\256G\341,@\341\013\223\251\202\221\n@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353?\351&1\010\254\234\025@\000\000\000\000\000\000Y@0L\246\nF%\365?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@fffff\316x@R\270\036\205\353\321:@\004\377[\311\216\215\300?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\203\300\312\241E\266\032@\232\231\231\231\231\031?@HP\374\030s\327\027@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@fffff\316x@\024\256G\341z\024\031@\262\235\357\247\306K\341?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000ffffff\342?\341z\024\256G\341\035@\315\314\314\314\314LJ@`\345\320\"\333\371\006@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\315\314\314\314\314dx@H\341z\024\256G\t@V\202\305\341\314\257\351?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?m\347\373\251\361\322\025@\315\314\314\314\314LB@\254\034Zd;_\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\244p=\n\327\017r@\341z\024\256Ga\'@Qf\203L2r\206?\000\000\000\000\000\200K@\000\000\000\000\000\000\002@\000\000\000\000\000\000\000\000L7\211A`\345\330?\035Zd;\337\317\031@fffff\346?@B>\350\331\254:\035@\000\000\000\000\000\000\360?\000\000\000\000\000\300r@\232\231\231\231\231\231.@\354Q\270\036\205\253x@\366(\\\217\302u @R\'\240\211\260\341\342?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\260rh\221\355|\031@\232\231\231\231\231yX@\346\256%\344\203\236\002@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\\\217\302\365(\034x@=\n\327\243p=&@\244\210\014\253x#\243?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?=\n\327\243p=\031@\000\000\000\000\000@C@\023\362A\317f\325\031@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffffVx@\000\000\000\000\000\000\033@>\350\331\254\372|\027@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\037\205\353Q\270\236\031@\000\000\000\000\000\000X@\300\354\236<,\324\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\037\205\353Q\270^3@\r\340-\220\240\370\241?\000\000\000\000\000\300W@q=\n\327\243p\005@\000\000\000\000\000\000\000\000\376e\367\344a\241\332?\266\363\375\324xi\037@\232\231\231\231\231\231@@F\266\363\375\324x\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000l@ffffff-@\024\256G\341z\214x@{\024\256G\341z\016@P6\345\n\357\362\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?Nb\020X9\264\023@\315\314\314\314\314\354W@\345\362\037\322o_\367?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\217\302\365(\\{x@H\341z\024\256\207=@\335A\354L\2413\034@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\331\316\367S\343\245\343?\266\363\375\324xi\030@fffffFU@\"lxz\245,\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@)\\\217\302\365(\004@\n\327\243p=J7@\241\271N#-\325\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\240\032/\335$\006\341?\000\000\000\000\000\000\033@\232\231\231\231\231\271R@e\252`TR\247\n@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\205\353Q\270\036\221x@\366(\\\217\302\365\036@Q\024\350\023y\222\224?\000\000\000\000\000\300W@q=\n\327\243p\005@\000\000\000\000\000\000\000\000\376e\367\344a\241\332?\305 \260rh\021 @fffff\346?@F\266\363\375\324x\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000l@ffffff-@\315\314\314\314\314hx@\n\327\243p=\n\007@\257Z\231\360K\375\264?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\360\247\306K7\t\030@fffff&E@\373\313\356\311\303\002\026@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@fffff\316x@\315\314\314\314\314\314$@\004\342u\375\202\335\260?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\217\302\365(\\\017\037@33333\323T@!\260rh\221\355\005@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@)\\\217\302\365\270x@=\n\327\243p=\036@\221,`\002\267\356\276?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?\027\331\316\367S# @\000\000\000\000\000\000S@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@fffff\316x@\327\243p=\n\327\020@\201&\302\206\247W\272?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?;\337O\215\227n\031@33333sJ@1\010\254\034Z$\034@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\000\000\000\000\000Lw@q=\n\327\243p&@T\343\245\233\304 \240?\000\000\000\000\000\300W@\205\353Q\270\036\205\367?\000\000\000\000\000\000\000\000\230n\022\203\300\312\331?fffff\346\033@\232\231\231\231\231\231.@[\323\274\343\024\235\036@\000\000\000\000\000\000\010@\000\000\000\000\000 y@\000\000\000\000\000\0001@fffff\316x@=\n\327\243p=\022@\253\t\242\356\003\220\252?\000\000\000\000\000\000\000\000\366(\\\217\302\365\021@\000\000\000\000\000\000\000\000#\333\371~j\274\334?\217\302\365(\\\017\030@\315\314\314\314\314\214F@\241g\263\352s\265\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340n@\000\000\000\000\000\2002@\244p=\n\327\277x@\270\036\205\353Q\270)@0\330\r\333\026e\226?\000\000\000\000\000\000N@q=\n\327\243p\007@\000\000\000\000\000\000\000\000D\213l\347\373\251\331?333333\033@\315\314\314\314\314\314#@p\316\210\322\336\340\030@\000\000\000\000\000\000\360?\000\000\000\000\000\220p@333333/@R\270\036\205\353\225x@\037\205\353Q\270\036\024@Tt$\227\377\220\236?\000\000\000\000\000\000\000\000q=\n\327\243p\001@\000\000\000\000\000\000\000\000\035Zd;\337O\335?\270\036\205\353Q\270\031@\232\231\231\231\231YM@\253>W[\261?\030@\000\000\000\000\000\000\010@\000\000\000\000\000\300k@33333\2632@R\270\036\205\353\241x@\327\243p=\n\327\024@6\310$#ga\257?\000\000\000\000\000\0004@\244p=\n\327\243\n@\000\000\000\000\000\000\360?c\177\331=yX\334?\024\256G\341z\224\036@\232\231\231\231\231\331H@\360\026HP\374\330\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000k@\315\314\314\314\314\314-@\205\353Q\270\036\221w@\024\256G\341z\024\010@)\350\366\222\306h\342?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?\006\201\225C\213\254 @33333SR@0\273\'\017\013\265\016@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\303\365(\\\217\036x@\303\365(\\\217\302\003@\347\251\016\271\031n\336?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\301\312\241E\266s\030@ffffffM@\031s\327\022\362\001\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@H\341z\024\256\303x@\366(\\\217\302u)@\000\343\0314\364O\300?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\024\256G\341z\024\033@333333\007@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@\303\365(\\\217\026x@\\\217\302\365(\\\023@\376e\367\344a\221I@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?\272I\014\002+\007\027@\000\000\000\000\000\000Y@\317\367S\343\245\233\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314\314\004@\270\036\205\353Q8$@\205|\320\263Y\365\301?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\246\233\304 \260\362\031@\000\000\000\000\000\000*@\365JY\2068\226\035@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\024\256G\341z\304x@\232\231\231\231\231\231\027@4\235\235\014\216\222\031@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?\331\316\367S\343\245\030@\232\231\231\231\231YX@\331\316\367S\343\245\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\\\217\302\365(\354r@\232\231\231\231\231\0318@b\326\213\241\234h\277?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?-\262\235\357\247F\030@\000\000\000\000\000\000D@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@\n\327\243p=Vx@\232\231\231\231\231\031#@\332\003\255\300\220\225!@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?\303\365(\\\217B\026@fffff\246Q@5^\272I\014\202\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@333333\r@)\\\217\302\365(1@\206\346:\215\264T\306?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\327\243p=\n\327\027@fffff\006W@\243\222:\001M\004\017@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\000\000\000\000\000\224x@\205\353Q\270\036E1@\217\245\017]P\337\320?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\321\"\333\371~\352\030@\315\314\314\314\314\314V@\225e\210c]\\\004@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@H\341z\024\256sx@\232\231\231\231\231\031/@M\370\245~\336\024\000@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\236\357\247\306K\267\037@\315\314\314\314\314\014X@Y\027\267\321\000^\000@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\315\314\314\314\314\024w@\232\231\231\231\231\231\r@\215\356 v\246\320\271?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\\\217\302\365(\334\032@ffffffT@\354Q\270\036\205k\005@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@=\n\327\243p\271x@R\270\036\205\353Q$@\177\373:p\316\210\322?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\217\302\365(\\\217\025@\232\231\231\231\2319R@O\257\224e\210c\006@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@\244p=\n\327#5@\354/\273\'\017\013\225?\000\000\000\000\000@U@\256G\341z\024\256\347?\000\000\000\000\000\000\000\000=\n\327\243p=\332?\325x\351&1\210\031@\232\231\231\231\231\331A@\216uq\033\r`\"@\000\000\000\000\000\000\000@\000\000\000\000\000\220s@\315\314\314\314\314L1@fffff\316x@\024\256G\341z\024\027@\314\356\311\303B\255\261?\000\000\000\000\000\000\000\000q=\n\327\243p\001@\000\000\000\000\000\000\000\000\035Zd;\337O\335?J\014\002+\207\226\034@\232\231\231\231\231\031K@\253>W[\261?\030@\000\000\000\000\000\000\010@\000\000\000\000\000\300k@33333\2632@fffff\316x@R\270\036\205\353Q\025@\327\335<\325!\027\034@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\240\032/\335$\006\030@33333\323W@<N\321\221\\\376\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256\377s@ffffff/@\371\203\201\347\336\303\305?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?j\274t\223\030\004\030@\232\231\231\231\231yU@\256\330_vO^\032@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\217\302\365(\\+x@\232\231\231\231\231\0311@\346\221?\030x\356\305?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\203\300\312\241E\266\027@\315\314\314\314\314\014V@\2068\326\305m\264\003@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\303\365(\\\217\216u@\205\353Q\270\036\205/@\323\244\024t{I\273?\000\000\000\000\000\000T@\217\302\365(\\\217\376?\000\000\000\000\000\000\000\000;\337O\215\227n\332?X9\264\310v\276\027@\000\000\000\000\000\2003@\316\210\322\336\340+%@\000\000\000\000\000\000\020@\000\000\000\000\000\340t@\000\000\000\000\000\0006@q=\n\327\243\200w@H\341z\024\256G\026@-\262\235\357\247\306\253?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?\303\365(\\\217B\031@\232\231\231\231\231YR@\n\327\243p=\212\n@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\232\231\231\231\231\271x@)\\\217\302\365(\031@D\372\355\353\3009\347?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\234\304 \260r\350\026@\000\000\000\000\000`Q@\254\034Zd;_\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@33333ox@\217\302\365(\\\217&@\320\263Y\365\271Z.@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\317\367S\343\245\233\030@\000\000\000\000\000\000Y@\033\r\340-\220\240\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327\243\"@33333s:@\035\217\031\250\214\177\217?\000\000\000\000\000\200V@\000\000\000\000\000\000\016@\000\000\000\000\000\000\000\000\236\357\247\306K7\331?7\211A`\345\320\035@\232\231\231\231\231\031A@\016\2760\231*X\031@\000\000\000\000\000\000\010@\000\000\000\000\000\200n@\315\314\314\314\314\314/@=\n\327\243p%x@\341z\024\256G\341\010@\274\226\220\017z>V@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\254\034Zd;\337\033@\232\231\231\231\231\371V@D\213l\347\373\251\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\366(\\\217\30251@\367\314\222\00055\366?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\315\314\314\314\314\314\027@\000\000\000\000\000\200T@\354Q\270\036\205\353\017@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@33333\023m@\366(\\\217\302\265;@Gw\020;S\350\254?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?!\260rh\221\355\030@\232\231\231\231\231\331J@\221~\373:p\016\024@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@fffff&x@\256G\341z\024\256(@I\272f\362\3156\267?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\347\373\251\361\322\315\033@\000\000\000\000\000\2005@\263{\362\260P\353\031@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@{\024\256G\341\232w@ffffff\024@M\363\216St$\351?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?u\223\030\004V\016\034@fffff&U@q\033\r\340-\020\001@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\205\353Q\270\036\001x@\024\256G\341z\224-@\260U\202\305\341\314\257?\000\000\000\000\000\000D@\000\000\000\000\000\000\364?\000\000\000\000\000\000\000\000\333\371~j\274t\333?\366(\\\217\302\365\031@333333F@\275R\226!\216\225!@\000\000\000\000\000\000\360?\000\000\000\000\000\360t@33333\2633@fffff\316x@\354Q\270\036\205\353\027@\225\361\3573.\034\310?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\276\237\032/\335$\027@fffff\246@@\327\022\362A\317f\024@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@\315\314\314\314\314L,@Hm\342\344~\207\302?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\006\201\225C\213\354\026@\315\314\314\314\314LP@P\374\030s\327\022\006@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\000\000\000\000\000xx@\270\036\205\353Q8+@S\313\326\372\"\241\335?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\331\316\367S\343\245\035@\232\231\231\231\2319S@\254\034Zd;_\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\n\327\243p=\202w@\000\000\000\000\000\000\025@)\\\217\302\365(\264?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?T\343\245\233\304 \033@\315\314\314\314\314\214D@;\001M\204\rO\016@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@R\270\036\205\353\235x@\270\036\205\353Q\270\032@)\320\'\362$\351\306?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\256G\341z\024\256\026@\315\314\314\314\314\314<@O\257\224e\210c\006@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@q=\n\327\243\224x@\232\231\231\231\231\2311@\202\250\373\000\2446\271?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?j\274t\223\030\204\027@33333\363W@\351\267\257\003\347\014\000@\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@\256G\341z\024\266w@\024\256G\341z\2241@\253>W[\261\277/@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\256G\341z\024.\032@fffff\306X@\312T\301\250\244N\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\024\256G\341z\0245@RD\206U\274\221\343?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\234\304 \260rh!@\232\231\231\231\231\271U@7\211A`\345\320\374?\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@33333[x@{\024\256G\341z\024@\215\264T\336\216p\272?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?h\221\355|?\265\027@\232\231\231\231\231\231G@\356|?5^\272\033@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@fffff\316x@q=\n\327\243p\"@\t\212\037c\356\372P@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\010\254\034Zd\273\026@\000\000\000\000\000\000Y@\221~\373:p\316\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\354Q\270\036\205\017x@{\024\256G\341\3726@\217\337\333\364g?\320?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\177j\274t\223\230\025@33333\323W@{\024\256G\341z\027@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@\217\302\365(\\\317>@\027\361\235\230\365b\300?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?L7\211A`\345\031@fffffFX@\330\201sF\224v\003@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\244p=\n\327\263x@\n\327\243p=\212(@\265\211\223\373\035J!@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\022\203\300\312\241\305\030@fffff&W@\360\205\311T\301\250\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\327\243p=\nW.@\237q\341@H\026\363?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\347\373\251\361\322M\031@\315\314\314\314\314lX@^\272I\014\002+\002@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@\205\353Q\270\036\205(@\353V\317I\357\033\257?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?\201\225C\213l\347\033@\000\000\000\000\000\300V@\327\243p=\nW\001@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@fffff\316x@\217\302\365(\\\217\026@_\014\345D\273\n\305?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\010\254\034Zd\273\031@\315\314\314\314\314\214H@u\223\030\004VN\037@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\217\302\365(\\kw@\n\327\243p=\n#@\376\324x\351&1\300?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334??5^\272I\014\033@33333\263E@\352\225\262\014q\354\037@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@\341z\024\256G\271x@\000\000\000\000\000\000#@\367\257\2544)e\021@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\217\302\365(\\\217\342?^\272I\014\002\253\030@\000\000\000\000\000\000U@\277}\0358gD\010@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\n\327\243p=J0@}\320\263Y\365\031,@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?T\343\245\233\304\240\032@\000\000\000\000\000\000Y@q=\n\327\243p\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\206A@\270\036\205\353Q85@;\215\264T\336\216\310?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?\323Mb\020X\271\031@ffffff-@\'\240\211\260\341\251\025@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@{\024\256G\341\232x@R\270\036\205\353Q\024@\237v\370k\262f @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?X9\264\310v\276\027@33333\023T@yX\2505\315;\006@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\000\000\000\000\000\000\014@q=\n\327\243\3600@\253\347\244\367\215\257\235?\000\000\000\000\000\000D@\000\000\000\000\000\000\364?\000\000\000\000\000\000\000\000\333\371~j\274t\333?\250\306K7\211\301\033@\000\000\000\000\000@A@\275R\226!\216\225!@\000\000\000\000\000\000\360?\000\000\000\000\000\360t@33333\2633@\232\231\231\231\231]x@\217\302\365(\\\217\027@\336Y\273\355Bs\275?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?\364\375\324x\351\246\030@ffffffQ@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@\341z\024\256G}x@\256G\341z\024\256&@g\270\001\237\037F\250?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?\037\205\353Q\270\036\030@333333T@\n\327\243p=\n\004@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@fffff\316x@\205\353Q\270\036\205\037@\331\231B\3475v\301?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\252\361\322Mb\220\027@\315\314\314\314\314L6@q\033\r\340-\220\017@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@fffff\316x@=\n\327\243p\275%@\215\234\205=\355\360\367?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\004V\016-\262\235\025@\000\000\000\000\000\000Y@\201\004\305\2171w\371?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\232\231\231\231\231Yu@\217\302\365(\\\217*@\210\205Z\323\274\303D@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?9\264\310v\276\037\026@\232\231\231\231\231YU@Gr\371\017\351\267\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\227t@\341z\024\256Ga;@{\332\341\257\311\032\265?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\006\201\225C\213\354\031@\000\000\000\000\000\2002@\246\nF%u\302\030@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\303\365(\\\217\266w@q=\n\327\243p\031@A\361c\314]\013+@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\376\324x\351&1\344?\201\225C\213l\347\016@\000\000\000\000\000\000Y@\317f\325\347j+\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243pm`@)\\\217\302\365\250*@\260U\202\305\341\314\313?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\356|?5^:\027@fffff\346J@\361\364JY\2068\r@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\327\243p=\nox@H\341z\024\256\0070@\323\366\257\2544)\311?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\201\225C\213l\347\030@\315\314\314\314\314\314S@#\333\371~j\034 @\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\n\327\243p=\202w@\315\314\314\314\314L$@B>\350\331\254\372\254?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\272I\014\002+\007\034@33333\223U@\035\311\345?\244_\013@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@fffff\316x@\000\000\000\000\000\000\026@?RD\206U\274\350?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?{\024\256G\341\372\031@\232\231\231\231\231\231W@\375\366u\340\234\321\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\327\243p=\n?x@\232\231\231\231\231\231)@-x\321W\220f\314?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\360?\031\004V\016-\262\335?\335$\006\201\225\303\036@fffff\346I@\236\357\247\306Kw\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@\270\036\205\353Qlx@R\270\036\205\353Q\032@\022\245\275\301\027&\223?\000\000\000\000\000@U@\232\231\231\231\231\231\020@\000\000\000\000\000\000\000\000\333\371~j\274t\333?\252\361\322Mb\020\032@33333\263;@\374\030s\327\022\022!@\000\000\000\000\000\000\020@\000\000\000\000\000\360u@fffff\3461@{\024\256G\341\206x@q=\n\327\243p\031@\202sF\224\366\346\'@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000J\014\002+\207\026\345?;\337O\215\227n\026@\000\000\000\000\000\000Y@q\033\r\340-\220\364?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@=\n\327\243p\301t@\303\365(\\\217B(@\223\214\234\205=\355\240?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?#\333\371~j<\030@fffff\246B@\253>W[\261?\023@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@\n\327\243p=\302x@\205\353Q\270\036\005!@1\261\371\2706T\300?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\337O\215\227n\222\031@333333\037@1\010\254\034Z$\034@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\217\302\365(\\kw@\303\365(\\\217\302\024@\220\332\304\311\375\016\245?\000\000\000\000\000\0009@q=\n\327\243p\023@\000\000\000\000\000\000\000\000\335$\006\201\225C\333?\234\304 \260r\350\032@\000\000\000\000\000\300@@_\007\316\031Q\232\025@\000\000\000\000\000\000\020@\000\000\000\000\000\220q@\000\000\000\000\000\0003@fffff\316x@)\\\217\302\365(\025@\304\010\341\321\306\021\273?\000\000\000\000\000\000\000\000=\n\327\243p\275;@\000\000\000\000\000\000\000\000\260rh\221\355|\343?;\337O\215\227\356\027@33333\263X@\210\205Z\323\274\343\375?\000\000\000\000\000\000\020@\000\000\000\000\0008\206@\232\231\231\231\231\0314@\366(\\\217\302ax@R\270\036\205\353\0212@\341@H\0260\201\253?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\031\004V\016-2\032@\000\000\000\000\000\200I@HP\374\030s\327\027@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@\232\231\231\231\231\215x@\217\302\365(\\\217\035@\002Hm\342\344~\267?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?D\213l\347\373\251\031@fffff\006U@\010=\233U\237+\005@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\000\000\000\000\000\270x@\024\256G\341z\024\"@H\376`\340\271W\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\016-\262\235\357\247\342?\037\205\353Q\270\236\027@\232\231\231\231\231\231J@Gr\371\017\3517\t@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\354Q\270\036\205Cx@fffff\346&@\241J\315\036h\005\246?\000\000\000\000\000\000T@\217\302\365(\\\217\376?\000\000\000\000\000\000\000\000;\337O\215\227n\332?\364\375\324x\351\246\026@fffff\3465@\316\210\322\336\340+%@\000\000\000\000\000\000\020@\000\000\000\000\000\340t@\000\000\000\000\000\0006@\315\314\314\314\314\354w@\232\231\231\231\231\031 @R\325\004Q\367\001\270?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?u\223\030\004V\216\027@\000\000\000\000\000\200C@\313\020\307\272\270\315\025@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\000\000\000\000\000hx@\354Q\270\036\205k/@[\224\331 \223\214\326?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?7\211A`\345\320\031@\232\231\231\231\231\231X@\270@\202\342\307\230\375?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\341z\024\256G\241x@\256G\341z\024.-@\344\024\035\311\345\237\'@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\262\235\357\247\306K\033@\000\000\000\000\000 S@Nb\020X9\264\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\232\231\231\231\2319H@=\n\327\243p\2756@\351&1\010\254\034\302?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\223\030\004V\016\255\030@ffffff\032@\340\276\016\2343\342\026@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@R\270\036\205\353\365w@=\n\327\243p=\027@b\204\360h\343\010\003@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\205\353Q\270\036\205\030@\000\000\000\000\000\000Y@\277\016\2343\242\264\366?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\205\353Q\270\036\235e@\315\314\314\314\314\314;@\n\334\272\233\247:\274?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?m\347\373\251\361\322\031@33333\363P@\364\375\324x\351\346\034@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@fffff\316x@\354Q\270\036\205\353\032@_$\264\345\\\252\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\307K7\211A\340\030@\000\000\000\000\000\000Y@\231*\030\225\324\t\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\327\243p=\n\273x@\327\243p=\n\2270@\367\344a\241\3264\267?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\360?\031\004V\016-\262\335?\256G\341z\024\256\027@\000\000\000\000\000\300N@\327\243p=\nW\017@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@=\n\327\243pux@\315\314\314\314\314L+@\025\221a\025od\332?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\364\375\324x\351\246\034@\232\231\231\231\231\371S@D\372\355\353\300\271\t@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\341z\024\256GAw@q=\n\327\243p\031@p\231\323e1\261\261?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\333\371~j\274\364\032@\315\314\314\314\314\314>@\263{\362\260P\353\031@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@\217\302\365(\\[x@\303\365(\\\217\302\022@\270\222\035\033\201x\265?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\345\320\"\333\371~\027@\315\314\314\314\314LB@\337\340\013\223\251\002\022@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@)\\\217\302\365\300x@333333\"@/n\243\001\274\0254@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?F\266\363\375\324x\021@\315\314\314\314\314\314V@\325x\351&1\010\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256G\335q@\341z\024\256G\241>@l\317,\tPS\303?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?/\335$\006\201\025\030@fffff\246T@B>\350\331\254\372\005@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\\\217\302\365(\250x@\232\231\231\231\231\231$@\344,\354i\207\277\320?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?d;\337O\215\027\030@\232\231\231\231\231\231V@y\351&1\010\254\006@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\315\314\314\314\314\304x@q=\n\327\243p\'@{\240\025\030\262\272\331?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\272I\014\002+\207\031@\315\314\314\314\314\314P@\303\365(\\\217B\014@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\217\302\365(\\\263x@\270\036\205\353Q\270$@sh\221\355|?\275?\000\000\000\000\000\000\000\000H\341z\024\256\307+@\000\000\000\000\000\000\360?\232\231\231\231\231\231\341?\313\241E\266\363}\031@\232\231\231\231\231\031W@+\030\225\324\t\350\n@\000\000\000\000\000\000\024@\000\000\000\000\000@q@ffffff0@\244p=\n\327\233x@\000\000\000\000\000\000%@\366\356\217\367\252\225\356?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\343\245\233\304 0\030@333333V@\216\006\360\026H\320\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\256G\341z\024&s@H\341z\024\256G1@\024\355*\244\374\244\340?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\262\235\357\247\306\313 @\000\000\000\000\000\340V@\002+\207\026\331N\002@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\366(\\\217\302-x@\244p=\n\327\243\027@\035=~o\323\237\265?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?V\016-\262\235o\027@\315\314\314\314\314,Q@\314\177H\277}\235\005@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@H\341z\024\256\223x@H\341z\024\256G#@\205\0108\204*5\263?\000\000\000\000\000\200@@q=\n\327\243p\001@\000\000\000\000\000\000\000\000h\221\355|?5\336?\256G\341z\024\256\035@\232\231\231\231\231\371Q@\t\033\236^)\313\010@\000\000\000\000\000\000\034@\000\000\000\000\000\300k@ffffff2@fffff\316x@\341z\024\256G\341\031@\366]\021\374o%\323?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\006\201\225C\213l\027@\315\314\314\314\314\014E@\236\357\247\306K\267\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@fffffJx@\000\000\000\000\000\000*@\201[w\363T\007\364?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?H\341z\024\256G\026@fffff\206X@\303\323+e\031b\016@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\205\353Q\270\036\211w@\205\353Q\270\036\0055@Y4\235\235\014\216\202?\000\000\000\000\000\200V@\303\365(\\\217\302\007@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?\'1\010\254\034Z\034@\315\314\314\314\314\3144@B>\350\331\254:\035@\000\000\000\000\000\000\360?\000\000\000\000\000\320q@\232\231\231\231\231\231.@\354Q\270\036\205\253x@ffffff\037@gDio\360\2457@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\205\353Q\270\036\205\031@\315\314\314\314\314\014X@\005\305\2171w-\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@q=\n\327\243\2607@\215\013\007B\262\200\251?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?\313\241E\266\363\375\027@ffffff5@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@fffff\316x@\\\217\302\365(\334 @\314bb\363qm\260?\000\000\000\000\000\000\000\000\327\243p=\n\327\027@\000\000\000\000\000\000\000\000V\016-\262\235\357\337?\010\254\034Zd\273\027@\315\314\314\314\314\014Q@\213\375e\367\344\341\n@\000\000\000\000\000\000\024@\000\000\000\000\000pq@3333333@fffff\316x@\\\217\302\365(\\#@\361\272~\301n\330\246?\000\000\000\000\000\0009@q=\n\327\243p\023@\000\000\000\000\000\000\000\000\335$\006\201\225C\333?`\345\320\"\333y\032@\232\231\231\231\231\231Q@_\007\316\031Q\232\025@\000\000\000\000\000\000\020@\000\000\000\000\000\220q@\000\000\000\000\000\0003@\256G\341z\024\272x@\341z\024\256G\341\034@w\020;S\350<\006@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\351&1\010\254\234\023@33333sX@\177\373:p\316\210\365?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@fffff\316x@\n\327\243p=J=@\345\3259\006d\257\267?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\006\201\225C\213l\032@\232\231\231\231\231\031E@\246\nF%u\302\030@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@\024\256G\341z\374w@{\024\256G\341z\035@:X\377\3470_\350?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?=\n\327\243p=\026@ffffffO@b\020X9\264\310\377?\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@fffff\206x@fffff\346$@kH\334c\351C\353?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\\\217\302\365(\334\027@\315\314\314\314\314LV@\224\366\006_\230\014\020@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\024\256G\341z\210x@)\\\217\302\365\250+@#\241-\347R|\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\331\316\367S\343\245\343?V\016-\262\235\357\031@ffffffW@\032\300[ Aq\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\303x@\256G\341z\024\2562@\220\275\336\375\361\336\032@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\345\320\"\333\371\376\032@fffff&W@\202\342\307\230\273\226\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@{\024\256G\341z\324?q=\n\327\243p1@\265l\255/\022\332\316?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?\242E\266\363\375T\030@\232\231\231\231\231\331E@\'\240\211\260\341\251\025@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\024\256G\341z\224)@\273~\301n\330\266\300?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\260rh\221\355|\027@fffffFR@R\270\036\205\353\321\003@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\256G\341z\024*u@=\n\327\243p\275.@\345\355\010\247\005/\306?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\207\026\331\316\367\323\026@\000\000\000\000\000\000K@\313\020\307\272\270\r\003@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@\205\353Q\270\036\005(@M\241\363\032\273D\265?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\321\"\333\371~j\026@33333sV@H\277}\0358\347\007@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@\000\000\000\000\000px@\366(\\\217\302\365+@,}\350\202\372\006#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\266\363\375\324x\351\032@fffff\206W@d]\334F\003\370\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q\270\032@\366(\\\217\302\2652@\'1\010\254\034Z\264?\000\000\000\000\000\000N@\n\327\243p=\n\373?\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?7\211A`\345P\032@33333\363A@\226\262\014q\254k%@\000\000\000\000\000\000\020@\000\000\000\000\000\260y@\315\314\314\314\314L2@\024\256G\341z,w@\366(\\\217\302\365\025@H\277}\0358g\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?-\262\235\357\247F\031@fffff\006X@\315\314\314\314\314\314\000@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@=\n\327\243p\221r@333333&@\177\274W\255L\370\037@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\024\256G\341z\024\026@\000\000\000\000\000\000Y@+\366\227\335\223\207\370?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\217\302\365(\\\2178@#\370\337Jvl\264?\000\000\000\000\000\000D@\244p=\n\327\243\031@\000\000\000\000\000\000\000\000\317\367S\343\245\233\334?!\260rh\221\355\031@\315\314\314\314\314\014@@\344\203\236\315\252\217\020@\000\000\000\000\000\000\020@\000\000\000\000\000\300o@\232\231\231\231\231\2311@fffff\316x@\303\365(\\\217\302\034@\371\367\031\027\016\204\264?\000\000\000\000\000\000\000\000\327\243p=\n\327\027@\000\000\000\000\000\000\000\000V\016-\262\235\357\337?ffffff\027@\000\000\000\000\000\300D@\267b\177\331=y\017@\000\000\000\000\000\000\024@\000\000\000\000\000pq@3333333@fffff\316x@\n\327\243p=\212!@\231\323e1\261\371\300?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?\201\225C\213lg\027@\315\314\314\314\314,X@\t\212\037c\356\332\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\315\314\314\314\314\240x@\270\036\205\353Qx0@\260U\202\305\341\314\366?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\n\327\243p=\n\032@\000\000\000\000\000\000Y@7\032\300[ A\374?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@)\\\217\302\365\304v@\217\302\365(\\\217\035@\214\271k\t\371\240\327?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\370S\343\245\233D\032@33333\323U@\341\013\223\251\202\321\014@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\327\243p=\n\273x@\217\302\365(\\\217\"@\345\355\010\247\005\177 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\337O\215\227n\222\035@33333\323X@\2201w-!\237\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353}w@=\n\327\243p\2750@v\375\202\335\260M @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\217\302\365(\\\217\025@\232\231\231\231\231\271X@J{\203/L\246\373?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\232\231\231\231\231\3314@\340\333\364g?R\304?\000\000\000\000\000\000\000\000\037\205\353Q\270\236%@\000\000\000\000\000\000\000\000;\337O\215\227n\332?\362\322Mb\020\330\027@\000\000\000\000\000\2001@.\220\240\3701&\025@\000\000\000\000\000\000\020@\000\000\000\000\000\020s@3333333@\327\243p=\n\217w@\303\365(\\\217\302#@O\314z1\224\023\344?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\274t\223\030\004V\027@\000\000\000\000\000@L@t$\227\377\220\376\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@R\270\036\205\353\271x@q=\n\327\243\360 @{1\224\023\355*\022@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?d;\337O\215\227\031@\000\000\000\000\000\000V@0L\246\nF%\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@)\\\217\302\365hw@)\\\217\302\365(\037@\3377\276\366\314\222\240?\000\000\000\000\000\000\000\000q=\n\327\243p\001@\000\000\000\000\000\000\000\000\035Zd;\337O\335?\313\241E\266\363\375\033@fffff\346F@\253>W[\261?\030@\000\000\000\000\000\000\010@\000\000\000\000\000\300k@33333\2632@\256G\341z\024\252x@\205\353Q\270\036\205\007@Yni5$\356\241?\000\000\000\000\000\000T@\315\314\314\314\314\314\023@\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?\213l\347\373\251q\033@fffff\346;@\326\305m4\200w\024@\000\000\000\000\000\000\020@\000\000\000\000\000\240n@3333333@fffff\316x@\244p=\n\327\243\n@\317\203\273\263v[\037@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\366(\\\217\302\365\344?\274t\223\030\004\326\030@\232\231\231\231\231YP@0\273\'\017\013\265\007@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@q=\n\327\243p*@\225+\274\313E|\365?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\335$\006\201\225C\030@\000\000\000\000\000\000Y@=,\324\232\346\035\374?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\n\327\243p=\036v@\270\036\205\353Q\270\031@aO;\37459\022@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\260rh\221\355|\014@\232\231\231\231\231\371U@\344\203\236\315\252\317\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@33333+v@{\024\256G\341z\034@\232\231\231\231\231\231\271?\000\000\000\000\000\000A@\\\217\302\365(\\\030@\000\000\000\000\000\000\000\000\203\300\312\241E\266\333?!\260rh\221\355\033@33333\2631@\326\305m4\200\367\025@\000\000\000\000\000\000\034@\000\000\000\000\000\220t@\232\231\231\231\231\0310@{\024\256G\341fx@q=\n\327\243p\023@\240\211\260\341\351\225\320?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\022\203\300\312\241\305\026@\000\000\000\000\000\000X@\"\375\366u\340\234\374?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\366(\\\217\302\201x@q=\n\327\24301@\324+e\031\342X\247?\000\000\000\000\000\000\000\000H\341z\024\256\307+@\000\000\000\000\000\000\360?\232\231\231\231\231\231\341?Zd;\337O\215\027@\000\000\000\000\000\000L@\204\rO\257\224\345\010@\000\000\000\000\000\000\024@\000\000\000\000\000@q@ffffff0@\315\314\314\314\314\214x@\205\353Q\270\036\005+@I\272f\362\3156\325?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?X9\264\310v~ @\232\231\231\231\231\231Q@e\031\342X\0277\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@33333\257w@\232\231\231\231\231\231\017@\276\331\346\306\364\204\245?\000\000\000\000\000\000<@\024\256G\341z\024.@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\370S\343\245\233\304\031@\315\314\314\314\314\314J@O@\023a\303S\r@\000\000\000\000\000\000\020@\000\000\000\000\000\340p@3333332@\\\217\302\365(\260x@R\270\036\205\353Q @\314@e\374\373\214\337?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\n\327\243p=\212\032@\000\000\000\000\000\240T@\n\327\243p=\212\n@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@fffff\316x@)\\\217\302\365(\022@\3377\276\366\314\222\003@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?J\014\002+\207\026\025@\000\000\000\000\000\200W@\361c\314]K\310\373?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\270\036\205\353Q(V@\244p=\n\327#0@\260U\202\305\341\254\022@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\201\225C\213l\347\027@\232\231\231\231\231\371U@\367u\340\234\021\245\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\366(\\\217\302\365$@\303\365(\\\217\0023@\226x@\331\224\013\021@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?\246\233\304 \260r\030@33333ST@\030&S\005\243\022\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327kx@\327\243p=\nW)@]\376C\372\355\2333@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\215\227n\022\203@\035@\232\231\231\231\231yX@\310\230\273\226\220\017\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\341z\024\256G\341*@->\005\300x\006\362?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353??5^\272I\014\024@\000\000\000\000\000\000V@\245N@\023a\303\371?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\024\256G\341ztu@=\n\327\243p=(@0*\251\023\320d8@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\317\367S\343\245\233\022@\000\000\000\000\000\000Y@(\017\013\265\246y\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@H\341z\024\256G<@\022\245\275\301\027&\325?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?\362\322Mb\020X\030@\000\000\000\000\000\300N@e\031\342X\0277\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\000\000\000\000\000\214w@\303\365(\\\217\302%@\272f\362\31567\302?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?j\274t\223\030\004\031@\315\314\314\314\314\014U@Zd;\337O\r\002@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@\244p=\n\327Kx@fffff\346$@d#\020\257\353\027\332?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\360?\323Mb\020X9\340?\016-\262\235\357\247\030@33333\323V@\374\251\361\322Mb\010@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\244p=\n\327\263x@\366(\\\217\302u5@]\304wb\326\213\241?\000\000\000\000\000\000\000\000\303\365(\\\217\302\024@\000\000\000\000\000\000\000\000{\024\256G\341z\340?`\345\320\"\333y\027@fffff&G@\"lxz\245\354\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000l@3333334@fffff\316x@\232\231\231\231\231\231#@\224\3367\276\366\314\272?\000\000\000\000\000\000D@\244p=\n\327\243\031@\000\000\000\000\000\000\360?\317\367S\343\245\233\334?\305 \260rh\021\035@\000\000\000\000\000\200H@\022\245\275\301\027&\023@\000\000\000\000\000\000\020@\000\000\000\000\000\300o@\232\231\231\231\231\2311@\000\000\000\000\000Tx@333333\030@\007_\230L\025,\025@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?Nb\020X94\030@\000\000\000\000\000\240T@\201&\302\206\247W\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\256G\341z\024\246w@\303\365(\\\217\3022@\314]K\310\007-C@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\035Zd;\337\317\025@\000\000\000\000\000\000Y@\023\362A\317f\325\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\327\243p=\n\227>@I\235\200&\302&/@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\217\302\365(\\\217\342?Nb\020X9\264\027@\000\000\000\000\000\300Q@\277}\0358gD\007@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327\013w@\341z\024\256G!2@\017\326\3779\314\027\362?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\'1\010\254\034\332\026@fffff\206W@;\337O\215\227\356\020@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\037\205\353Q\270\202v@\232\231\231\231\231\2316@*\221D/\243\230\003@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\317\367S\343\245\233\031@\315\314\314\314\314\314W@\232\231\231\231\231\031\002@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243\240t@\244p=\n\327\243&@vq\033\r\340\3351@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?1\010\254\034Z\344\030@\000\000\000\000\000\000Y@\005\305\2171w-\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\244p=\n\327\233x@H\341z\024\256\3075@\372~j\274t\223.@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000F\266\363\375\324x\345?\177j\274t\223\230\032@33333SW@\024?\306\334\265\204\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q\260v@=\n\327\243p=7@\200\267@\202\342\247<@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?\037\205\353Q\270\236\024@\000\000\000\000\000\000Y@\3122\304\261.n\371?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\327\243p=\n_j@\024\256G\341z\0244@\2201w-!\237\366?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353?j\274t\223\030\204\030@\000\000\000\000\000\000X@Z\365\271\332\212\375\373?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\270\036\205\353Q\020t@=\n\327\243p=.@\321\226s)\256*\273?\000\000\000\000\000\000>@\270\036\205\353Q\270\023@\000\000\000\000\000\000\000\0001\010\254\034Zd\333?\341z\024\256Ga\030@fffffFP@\016\2760\231*X\031@\000\000\000\000\000\000\030@\000\000\000\000\000\300r@\232\231\231\231\231\2310@R\270\036\205\353\251x@\315\314\314\314\314\314(@\306\341\314\257\346\000\261?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?q=\n\327\243p\033@\232\231\231\231\231\231R@\373:p\316\210R\007@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@\270\036\205\353Qtx@\256G\341z\024\256\033@\313\271\024W\225\235\035@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\264\310v\276\237\032\343?+\207\026\331\316w\026@\232\231\231\231\231yX@\365\333\327\201sF\367?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\n\327\243p=\252s@ffffff:@Uj\366@+0\264?\000\000\000\000\000\000T@\315\314\314\314\314\314\023@\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?d;\337O\215\227\034@33333\263;@\326\305m4\200w\024@\000\000\000\000\000\000\020@\000\000\000\000\000\240n@3333333@fffff\316x@{\024\256G\341z\014@\213\246\263\223\301Q\242?\000\000\000\000\000\0004@\244p=\n\327\243\n@\000\000\000\000\000\000\000\000c\177\331=yX\334?H\341z\024\256G\037@\000\000\000\000\000 P@\363\037\322o_\307\022@\000\000\000\000\000\000\024@\000\000\000\000\000\000k@\315\314\314\314\314\314-@)\\\217\302\3654x@\024\256G\341z\024\016@\240l\312\025\336\245\002@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?X9\264\310v\276\024@33333sW@\267b\177\331=y\370?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\244p=\n\327Ov@R\270\036\205\353Q<@Dn\206\033\360\371\261?\000\000\000\000\000\000\000\000333333\020@\000\000\000\000\000\000\000\000R\270\036\205\353Q\340?\024\256G\341z\024\030@\232\231\231\231\231\231G@8gDiop\014@\000\000\000\000\000\000\024@\000\000\000\000\000\200r@\232\231\231\231\231\2310@H\341z\024\256\223x@\270\036\205\353Q8$@)?\251\366\351x\254?\000\000\000\000\000\200Q@\354Q\270\036\205\353\001@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?D\213l\347\373)\034@\000\000\000\000\000\000$@\344\203\236\315\252O\037@\000\000\000\000\000\000\024@\000\000\000\000\000`v@\232\231\231\231\231\231-@\341z\024\256G9w@\366(\\\217\302\365\022@\375M(D\300!\244?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\037\205\353Q\270\236\031@\232\231\231\231\231yR@[\261\277\354\236\274\010@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@\315\314\314\314\314\230x@ffffff @2\311\310Y\330\323\324?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\323Mb\020X\271\031@33333\263X@\000\000\000\000\000\000\375?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@fffff\316x@H\341z\024\256\307.@\304\224H\242\227Q\363?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\000\000\000\000\000\200\027@fffff\246W@c\356ZB>h\003@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243Dr@\\\217\302\365(\334,@\t3m\377\312J\243?\000\000\000\000\000\000T@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000B`\345\320\"\333\331?\177j\274t\223\030\035@fffff&C@#\333\371~j<\035@\000\000\000\000\000\000\000@\000\000\000\000\000\220t@333333)@33333\203x@{\024\256G\341z\032@\2201w-!\037\224?\000\000\000\000\000\000T@)\\\217\302\365(\374?\000\000\000\000\000\000\000\000\244p=\n\327\243\330?\354Q\270\036\205\353\030@\000\000\000\000\000\200?@=\233U\237\253-\"@\000\000\000\000\000\000\360?\000\000\000\000\000 n@3333332@\232\231\231\231\231Yu@\\\217\302\365(\334)@q=\n\327\243p\235?\000\000\000\000\000\000<@\024\256G\341z\024.@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\362\322Mb\020\330\030@fffff\346<@O@\023a\303S\r@\000\000\000\000\000\000\020@\000\000\000\000\000\340p@3333332@\341z\024\256G\305x@\327\243p=\n\327\030@\201C\250R\263G\014@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\254\034Zd;\337\353?\317\367S\343\245\233\030@fffff\246T@!\260rh\221\355\373?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@q=\n\327\243\000V@\n\327\243p=\n.@\316\245\270\252\354\273\242?\000\000\000\000\000\0009@q=\n\327\243p\023@\000\000\000\000\000\000\000\000\335$\006\201\225C\333?h\221\355|?5\031@\232\231\231\231\231\031@@_\007\316\031Q\232\025@\000\000\000\000\000\000\020@\000\000\000\000\000\220q@\000\000\000\000\000\0003@fffff\316x@\341z\024\256G\341\032@\034\323\023\226x@\251?\000\000\000\000\000\200@@q=\n\327\243p\001@\000\000\000\000\000\000\000\000h\221\355|?5\336?L7\211A`e\033@33333\223Q@g\325\347j+v\t@\000\000\000\000\000\000\034@\000\000\000\000\000\300k@ffffff2@fffff\316x@\037\205\353Q\270\036\036@\335^\322\030\255c\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\016-\262\235\357\247\342?sh\221\355|?\031@33333\363I@\254\213\333h\000\357\017@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353Ix@)\\\217\302\365(%@\231\r2\311\310Y\270?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\276\237\032/\335$\031@\000\000\000\000\000\200F@\337\340\013\223\251\002\022@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@H\341z\024\256\363w@\341z\024\256G\341!@\371\240g\263\352s\305?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?Nb\020X9\264\031@fffff&J@\232\010\033\236^)\022@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\315\314\314\314\314\314\034@\177M\326\250\207h\352?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\002+\207\026\331N\035@\000\000\000\000\000\240W@\376e\367\344a\241\000@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\037\205\353Q\270\226x@\000\000\000\000\000\200&@\266\333.4\327i\310?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\254\034Zd;\337\032@\000\000\000\000\000\2001@u\223\030\004VN\037@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\244p=\n\327\233x@=\n\327\243p=\032@(a\246\355_Y\301?\000\000\000\000\000\000)@H\341z\024\256G\030@\000\000\000\000\000\000\000\000\223\030\004V\016-\332?\307K7\211A`\026@ffffffB@\313\241E\266\363\375\031@\000\000\000\000\000\000\020@\000\000\000\000\000\220u@fffff\3462@fffff\316x@\256G\341z\024.*@\004s\364\370\275M\267?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\037\205\353Q\270\236\034@\315\314\314\314\314\014W@\355\236<,\324\232\005@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@R\270\036\205\353\241x@H\341z\024\256G\023@\016\2760\231*\030\351?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\366(\\\217\302\365\027@\315\314\314\314\314lT@\271\215\006\360\026\010\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\000\000\000\000\000,x@\327\243p=\nW-@\373\221\"2\254\342\333?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\307K7\211A`\025@\000\000\000\000\000\000Y@\000\000\000\000\000\000\017@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@fffff\316x@\327\243p=\n\0277@\0054\0216<\3158@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?L7\211A`e\025@\000\000\000\000\000\000X@\221\017z6\253>\373?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\205\353Q\270\036\3053@\356_YiR\n\232?\000\000\000\000\000\200K@=\n\327\243p=\016@\000\000\000\000\000\000\000\000`\345\320\"\333\371\336?b\020X9\264\310\032@333333L@=\233U\237\253\355\026@\000\000\000\000\000\000\024@\000\000\000\000\000 w@\232\231\231\231\231\2311@fffff\316x@\270\036\205\353Q\270\034@\320\325V\354/[+@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?=\n\327\243p\275\027@\232\231\231\231\231\371U@\305\2171w-!\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314<Q@\303\365(\\\217\002A@,e\031\342X7&@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\307K7\211A`\345?9\264\310v\276\237\023@\000\000\000\000\000\000Y@Dio\360\205\311\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\303\365(\\\217bA@\217\344\362\037\322\3170@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000ffffff\346?\317\367S\343\245\033\025@fffff\206X@\2505\315;N\321\366?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\217\302\365(\\\317>@2U0*\251\323+@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\242E\266\363\375\324\030@\000\000\000\000\000\300W@\236^)\313\020\307\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353Q(Y@\327\243p=\nW.@\246\325\220\270\307r#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?9\264\310v\276\237\031@\315\314\314\314\314LX@\276\301\027&S\205\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\037x@\205\353Q\270\036\2053@!\223\214\234\205=\321?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\252\361\322Mb\020\031@33333\263T@C\034\353\3426\032\n@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\n\327\243p=\226x@\232\231\231\231\231\231\037@\273\270\215\006\360v\"@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\376\324x\351&1\344?w\276\237\032/\335\030@\000\000\000\000\000\000Y@\277\016\2343\242\264\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\342v@\217\302\365(\\\017#@\273\'\017\013\265\306\031@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?33333\263\031@33333\263R@|\362\260Pk\232\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\315\314\314\314\314|X@\217\302\365(\\\017(@`\260\033\266-\312\300?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?5^\272I\014\202\030@\315\314\314\314\314LU@B>\350\331\254\372\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\327\243p=\n;x@\256G\341z\024.,@\313\326\372\"\241-\247?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?{\024\256G\341z\030@\315\314\314\314\314,S@\315\314\314\314\314L\002@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@fffff\316x@)\\\217\302\365(\"@\212Y/\206r\242\305?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?\213l\347\373\251\361\027@\232\231\231\231\231\031V@\245,C\034\353\342\377?\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@\270\036\205\353Q\020x@\037\205\353Q\270\236-@#gaO;\374\245?\000\000\000\000\000\000<@\024\256G\341z\024.@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\345\320\"\333\371\376\030@33333SS@\354Q\270\036\205\353\014@\000\000\000\000\000\000\020@\000\000\000\000\000\340p@3333332@fffff\316x@\256G\341z\024.%@\321W\220f,\232\341?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?m\347\373\251\361\322\034@fffff\346V@R\'\240\211\260\341\376?\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\n\327\243p=>x@333333 @\034\010\311\002&\260\036@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\260rh\221\355\374\026@\232\231\231\231\231\271X@\030\225\324\th\"\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\232\231\231\231\231\221x@\354Q\270\036\205\3533@Z\273\355Bs\235\246?\000\000\000\000\000\200Q@\354Q\270\036\205\353\001@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\331?\226C\213l\347{\033@33333\263G@\344\203\236\315\252O\037@\000\000\000\000\000\000\024@\000\000\000\000\000`v@\232\231\231\231\231\231-@\366(\\\217\302mx@H\341z\024\256G\030@_)\313\020\307\232)@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\321\"\333\371~j\027@fffff&X@\370\302d\252`T\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\020n@\n\327\243p=\3127@\336\223\207\205Z\223\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000`\345\320\"\333\371\346?\'1\010\254\034\332\023@\232\231\231\231\231\331V@(~\214\271k\t\374?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\024\256G\341z\300s@\000\000\000\000\000\000,@:z\374\336\246?\303?\000\000\000\000\000\000\000\000fffff\2469@\000\000\000\000\000\000\000\000d;\337O\215\227\342?\006\201\225C\213l\027@\000\000\000\000\000@X@xz\245,C\034\377?\000\000\000\000\000\000\000@\000\000\000\000\000\200g@\232\231\231\231\231\0313@)\\\217\302\365$w@)\\\217\302\365h9@_\007\316\031Q\332\213?\000\000\000\000\000\300R@\000\000\000\000\000\000\020@\000\000\000\000\000\000\000\000=\n\327\243p=\332?Zd;\337O\215\027@\315\314\314\314\314\314G@\363\037\322o_G\035@\000\000\000\000\000\000\010@\000\000\000\000\000P}@\232\231\231\231\231\0315@fffff\316x@\232\231\231\231\231\231-@\3745Y\243\036\242\261?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\372~j\274t\223\030@\232\231\231\231\231\031O@*:\222\313\177\310\004@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@fffff\316x@fffff\346\"@\273\325s\322\373&\031@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?w\276\237\032/]\031@\232\231\231\231\231\031X@\372~j\274t\223\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\\\217\302\365(\340s@\n\327\243p=\3121@C\377\004\027+j\344?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\374\251\361\322Mb\030@\000\000\000\000\000 U@\360\026HP\374\330\021@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@\270\036\205\353Q\300w@\205\353Q\270\036\205$@\3230|DL\211\244?\000\000\000\000\000\000T@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000B`\345\320\"\333\331?\331\316\367S\343%\035@\315\314\314\314\314\014A@#\333\371~j<\035@\000\000\000\000\000\000\000@\000\000\000\000\000\220t@333333)@fffff\316x@R\270\036\205\353Q\020@\225\232=\320\n\214\006@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\240\032/\335$\006\341??5^\272I\014\027@fffff&D@\206\311T\301\250d\020@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\037\205\353Q\270\216x@\327\243p=\n\327$@\202\220,`\002\267\266?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?\'1\010\254\034\332\027@\232\231\231\231\231\331F@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@)\\\217\302\365\270x@fffff\346*@\300\004n\335\315S\215?\000\000\000\000\000\000Y@\037\205\353Q\270\036\365?\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?\335$\006\201\225C\033@\000\000\000\000\000@D@J{\203/L\246 @\000\000\000\000\000\000\024@\000\000\000\000\000\000p@333333.@fffff\216x@\232\231\231\231\231\231\017@,H3\026Mg\313?\000\000\000\000\000\0006@q=\n\327\243p\027@\000\000\000\000\000\000\000\000/\335$\006\201\225\333?\215\227n\022\203\300\031@\315\314\314\314\314\314!@\365JY\2068\226\035@\000\000\000\000\000\000\034@\000\000\000\000\000\240t@\232\231\231\231\231\0313@\205\353Q\270\036\221w@\270\036\205\353Q\270\014@A\237\310\223\244k\246?\000\000\000\000\000\000T@\366(\\\217\302\365\n@\000\000\000\000\000\000\000\000F\266\363\375\324x\331?\331\316\367S\343%\027@\232\231\231\231\231\031?@\031\004V\016-r\032@\000\000\000\000\000\000\020@\000\000\000\000\000\020u@\232\231\231\231\231\0310@fffff\316x@{\024\256G\341z$@\204d\001\023\270u\267?\000\000\000\000\000\000\000\000\037\205\353Q\270\236%@\000\000\000\000\000\000\000\000;\337O\215\227n\332?\303\365(\\\217B\030@333333\037@.\220\240\3701&\025@\000\000\000\000\000\000\020@\000\000\000\000\000\020s@3333333@\303\365(\\\217nx@\024\256G\341z\024\026@z\245,C\034\253%@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?T\343\245\233\304 \033@33333\263V@\351&1\010\254\034\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@R\270\036\205\353\2215@\n\327\243p=\3129@\312\246\\\341].\324?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\325x\351&1\210 @33333\223S@\326V\354/\273\'\007@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\315\314\314\314\314\020x@\217\302\365(\\\217\020@\1770\360\334{\270\314?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\317\367S\343\245\033\030@\315\314\314\314\314\354S@\007\360\026HP\374\003@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@)\\\217\302\365\250,@u\315\344\233mn\314?\000\000\000\000\000\000\000\000\205\353Q\270\036\005$@\000\000\000\000\000\000\000\000\033/\335$\006\201\341?\221\355|?5^\030@\232\231\231\231\231\331W@\374\251\361\322Mb\004@\000\000\000\000\000\000\030@\000\000\000\000\000\000{@\315\314\314\314\314\3141@fffff\316x@\327\243p=\n\0271@?\000\251M\234\334\340?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?33333s!@\000\000\000\000\000\300T@\326V\354/\273\'\007@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\000\000\000\000\000\340w@\205\353Q\270\036\205\022@F\261\334\322jH\214?\000\000\000\000\000\000T@q=\n\327\243p\335?\000\000\000\000\000\000\000\0005^\272I\014\002\333?\000\000\000\000\000\200\037@\000\000\000\000\000\000@@\325\347j+\366\227\026@\000\000\000\000\000\000\020@\000\000\000\000\000\340o@\315\314\314\314\314\314,@H\341z\024\256\243x@\303\365(\\\217\302\007@;\3745Y\243\236\032@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\370S\343\245\233D\031@\000\000\000\000\000\300T@\216uq\033\r\340\005@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@{\024\256G\341\372+@\312\303B\255i\336\301?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?^\272I\014\002\253\030@\000\000\000\000\000\200V@\221\355|?5^\003@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\327\243p=\n\213x@)\\\217\302\365\250(@F\266\363\375\324\210 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\307K7\211A`\345?\000\000\000\000\000\200\027@ffffffV@P\374\030s\327\022\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\256G\341z\024\276u@\303\365(\\\217\302!@?\035\217\031\250\214\257?\000\000\000\000\000\000\000\000\217\302\365(\\\217\021@\000\000\000\000\000\000\000\000}?5^\272I\334?d;\337O\215\227\027@fffff&J@\202sF\224\366\006 @\000\000\000\000\000\000\010@\000\000\000\000\000\000v@\315\314\314\314\314\3142@\366(\\\217\302\311v@\327\243p=\nW)@\351\361{\233\376l\r@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\244p=\n\327\243\350?\246\233\304 \260r\025@\315\314\314\314\314\014X@\300\354\236<,\324\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\314w@\341z\024\256Ga$@\365\326\300V\t\026\313?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340??5^\272I\214\030@\232\231\231\231\231\331U@\017\2343\242\264\267\005@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\354Q\270\036\205\247x@\341z\024\256G\341*@\207\242@\237\310\223\363?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\022\203\300\312\241\305\033@\232\231\231\231\231YX@(~\214\271k\t\376?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@{\024\256G\341\266v@\\\217\302\365(\\\022@\327\206\212q\376&\344?\000\000\000\000\000\000\000\000H\341z\024\256G @\000\000\000\000\000\000\000\000\236\357\247\306K7\341?\262\235\357\247\306\313\027@fffff\346N@\024\256G\341z\324\022@\000\000\000\000\000\000\020@\000\000\000\000\0000s@\000\000\000\000\000\0005@fffff\316x@\205\353Q\270\036\205 @MJA\267\2274\246?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?\366(\\\217\302u\030@\000\000\000\000\000\200O@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@\354Q\270\036\205\237x@\\\217\302\365(\334\"@?\343\302\201\220\034 @\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?h\221\355|?\265\025@\232\231\231\231\231\331W@\000\221~\373:p\003@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256G\tv@\244p=\n\327#2@\277`7l[\224\231?\000\000\000\000\000\000\000\000=\n\327\243p=\376?\000\000\000\000\000\000\000\000\372~j\274t\223\340?)\\\217\302\365(\032@\232\231\231\231\231\331M@\2505\315;N\021\031@\000\000\000\000\000\000\360?\000\000\000\000\000`z@\315\314\314\314\314\314/@\217\302\365(\\_x@\315\314\314\314\314L!@-`\002\267\356\346\251?\000\000\000\000\000\000\000\000\366(\\\217\302\365\021@\000\000\000\000\000\000\000\000#\333\371~j\274\334?u\223\030\004V\216\031@\000\000\000\000\000\000H@u\002\232\010\033\036\023@\000\000\000\000\000\000\010@\000\000\000\000\000\340n@\000\000\000\000\000\2002@fffff\316x@=\n\327\243p=#@H\371I\265O\007\003@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\016-\262\235\357\247\342?\226C\213l\347{\027@33333\363D@\230n\022\203\300\312\r@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256+w@\256G\341z\024\256*@g\270\001\237\037F\334?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?h\221\355|?5\032@ffffff5@9\326\305m4\000\013@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@=\n\327\243p\305w@\024\256G\341z\024\016@i\000o\201\004\305\303?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?\024\256G\341z\224\030@333333=@\212\037c\356ZB\037@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@{\024\256G\341jx@q=\n\327\243p\033@k\324C4\272\343\020@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\244p=\n\327\243\350?\203\300\312\241E6\027@\000\000\000\000\000@V@(\017\013\265\246y\376?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\020v@H\341z\024\256G-@u\002\232\010\033\236\322?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\031\004V\016-\262\030@ffffffW@\'\302\206\247W\312\371?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\341z\024\256GAx@)\\\217\302\365(8@\r\303G\304\224H\341?\000\000\000\000\000\0004@\303\365(\\\217\302\017@\000\000\000\000\000\000\000\000Nb\020X9\264\344?\035Zd;\337\317\034@33333sT@\204\rO\257\224\345\000@\000\000\000\000\000\000\024@\000\000\000\000\000\200p@\000\000\000\000\000\000*@\315\314\314\314\314\214x@\256G\341z\024.#@[\261\277\354\236<\254?\000\000\000\000\000\200@@q=\n\327\243p\001@\000\000\000\000\000\000\000\000h\221\355|?5\336?\213l\347\373\251\361\034@\315\314\314\314\314\214D@J\014\002+\207\026\020@\000\000\000\000\000\000\034@\000\000\000\000\000\300k@ffffff2@{\024\256G\341\232x@\270\036\205\353Q\270\033@G\254\305\247\000\310\"@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?5^\272I\014\202\026@\232\231\231\231\231yW@\301\250\244N@\023\375?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\341z\024\256G\3416@w\241\271N#-\321?\000\000\000\000\000\000\000\000\341z\024\256Ga#@\000\000\000\000\000\000\000\000\270\036\205\353Q\270\342?\223\030\004V\016-\027@fffff\246Q@\025\035\311\345?$\007@\000\000\000\000\000\000\030@\000\000\000\000\000px@3333333@fffff\316x@333333,@\224\301Q\362\352\034\303?\000\000\000\000\000\0009@\205\353Q\270\036\205\024@\000\000\000\000\000\000\000\000\313\241E\266\363\375\334?\020X9\264\310\366\026@\315\314\314\314\314\214P@\327\022\362A\317\346\034@\000\000\000\000\000\000 @\000\000\000\000\000\300q@33333\2633@\366(\\\217\302\261x@\315\314\314\314\314L*@\377\004\027+j\260\021@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\343\245\233\304 \260\342?P\215\227n\022\003\030@\000\000\000\000\000\240W@\373:p\316\210R\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\243\264t@R\270\036\205\353Q5@{Ic\264\216\252\334?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\360?\323Mb\020X9\340?\201\225C\213l\347\032@\000\000\000\000\000\240P@e\031\342X\0277\r@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@33333\203v@\232\231\231\231\231\031 @\010=\233U\237\253\343?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000\323Mb\020X9\340?F\266\363\375\324x\032@333333T@\314\356\311\303B-\n@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@fffff\316x@ffffff\036@\313\204_\352\347M\370?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\360?\\\217\302\365(\\\343?\000\000\000\000\000\300 @\232\231\231\231\231yW@\262\235\357\247\306K\001@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@33333Gx@\217\302\365(\\\217\n@\231d\344,\354i\367?\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\333\371~j\274\364\035@33333\263V@\177\373:p\316\210\377?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@{\024\256G\341fw@\256G\341z\024\256\373?\316\337\204B\004\034\242?\000\000\000\000\000\000A@\\\217\302\365(\\\030@\000\000\000\000\000\000\000\000\203\300\312\241E\266\333?\\\217\302\365(\\\032@333333D@\326\305m4\200\367\025@\000\000\000\000\000\000\034@\000\000\000\000\000\220t@\232\231\231\231\231\0310@\000\000\000\000\000\274x@\000\000\000\000\000\000#@,e\031\342X\2674@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000J\014\002+\207\026\345?Zd;\337O\215\020@\000\000\000\000\000\000Y@}\256\266b\177\331\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\354Q\270\036\205#w@\327\243p=\nW7@\205\224\237T\373t\330?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\000\000T\343\245\233\304 \340?\024\256G\341z\024 @\000\000\000\000\000\240U@D\372\355\353\300\271\t@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@\256G\341z\0246x@\n\327\243p=\n\t@\223W\347\030\220\275\216?\000\000\000\000\000\200V@\\\217\302\365(\\\363?\000\000\000\000\000\000\360?D\213l\347\373\251\331?\376\324x\351&\261\037@\315\314\314\314\314\3148@\n\327\243p=\212\027@\000\000\000\000\000\000\360?\000\000\000\000\000\300h@333333+@\270\036\205\353Q\270x@H\341z\024\256G\t@U\336\216pZ\360\001@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\\\217\302\365(\\\343?\321\"\333\371~j\027@33333\363V@\307K7\211A`\003@\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@\366(\\\217\302\261x@H\341z\024\256G\'@\321tv28J\266?\000\000\000\000\000\000\000\000)\\\217\302\365\250)@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\217\302\365(\\\217\030@fffff\346F@\351&1\010\254\\\020@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@33333\2632@\217\302\365(\\/x@\n\327\243p=\212$@\322\373\306\327\236Y\242?\000\000\000\000\000\000T@\366(\\\217\302\365\n@\000\000\000\000\000\000\000\000F\266\363\375\324x\331?)\\\217\302\365(\031@\315\314\314\314\314\3141@\031\004V\016-r\032@\000\000\000\000\000\000\020@\000\000\000\000\000\020u@\232\231\231\231\231\0310@fffff\316x@\256G\341z\024\256\022@n4\200\267@\202\242?\000\000\000\000\000\000T@\315\314\314\314\314\314\023@\000\000\000\000\000\000\000\000\347\373\251\361\322M\332?\205\353Q\270\036\205\032@ffffff7@\326\305m4\200w\024@\000\000\000\000\000\000\020@\000\000\000\000\000\240n@3333333@fffff\316x@\315\314\314\314\314\314\022@u\345\263<\017\256\026@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\376\324x\351&1\344?\010\254\034Zd\273\032@333333X@0\273\'\017\013\265\365?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256Guw@\327\243p=\n\327\r@\034\360\371a\204\360\260?\000\000\000\000\000\000\000\000\354Q\270\036\205\353\t@\000\000\000\000\000\000\000\000q=\n\327\243p\335?F\266\363\375\324x\027@\315\314\314\314\314\3149@\353\3426\032\300\333\024@\000\000\000\000\000\000\020@\000\000\000\000\000\340z@fffff\3460@\327\243p=\n\347w@q=\n\327\243\360#@\270\257\003\347\214(\265?\000\000\000\000\000\000\000\000\327\243p=\n\327+@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?5^\272I\014\202\030@ffffff2@\373\313\356\311\303\002\026@\000\000\000\000\000\000\020@\000\000\000\000\000\020r@\000\000\000\000\000\0000@fffff\316x@)\\\217\302\365(!@\202\250\373\000\2446\261?\000\000\000\000\000\000\000\000\354Q\270\036\205\353\t@\000\000\000\000\000\000\000\000q=\n\327\243p\335?\242E\266\363\375T\031@3333331@\353\3426\032\300\333\024@\000\000\000\000\000\000\020@\000\000\000\000\000\340z@fffff\3460@\217\302\365(\\sw@\\\217\302\365(\\\035@k\324C4\272\303\025@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\037\205\353Q\270\236\032@\315\314\314\314\314\214X@HP\374\030s\327\002@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@q=\n\327\2434v@{\024\256G\341\2721@\032\335A\354L\241\273?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?H\341z\024\256\307\030@333333K@b\241\3264\3578\006@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\244p=\n\327\227x@\000\000\000\000\000\000*@k`\253\004\213\303\325?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\242E\266\363\375\324\031@\232\231\231\231\231\271X@\246\233\304 \260\362\000@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@q=\n\327\243\260x@333333)@h\005\206\254n\365\264?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?H\341z\024\256G\037@33333sB@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@\024\256G\341z\230x@\217\302\365(\\\217\014@\315;N\321\221\\\326?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\027\331\316\367S\343\027@\315\314\314\314\314,S@R\270\036\205\353\321\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@\244p=\n\327\303x@q=\n\327\243\360#@\000o\201\004\305\217\261?\000\000\000\000\000\000\000\000\037\205\353Q\270\036\007@\000\000\000\000\000\000\000\000{\024\256G\341z\334?D\213l\347\373\251\035@\000\000\000\000\000@O@g\325\347j+\366\013@\000\000\000\000\000\000\000@\000\000\000\000\000@q@\000\000\000\000\000\0002@fffff\316x@\303\365(\\\217\302\030@;\001M\204\rO\t@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\366(\\\217\302\365\344?\360\247\306K7\t\027@\232\231\231\231\231\031H@\325x\351&1\210\010@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\346t@\303\365(\\\217B,@\215\321:\252\232 \320?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?o\022\203\300\312!\027@\315\314\314\314\314,R@\317f\325\347jk\021@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@{\024\256G\341Vx@\217\302\365(\\\0172@\024\355*\244\374\244\212?\000\000\000\000\000\200A@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000}?5^\272I\334?\020X9\264\310\366\034@fffff\246H@\327\022\362A\317&\034@\000\000\000\000\000\000\360?\000\000\000\000\000\300q@\000\000\000\000\000\000/@\244p=\n\327\253x@\366(\\\217\302\365\025@\313\370\367\031\027\016\274?\000\000\000\000\000\000\000\000\\\217\302\365(\334\'@\000\000\000\000\000\000\000\000\274t\223\030\004V\342?\223\030\004V\016-\033@33333SV@\261Pk\232w\034\003@\000\000\000\000\000\000\360?\000\000\000\000\000\020q@\000\000\000\000\000\0005@33333\227x@\354Q\270\036\205\353\031@\200`\216\036\277\267\251?\000\000\000\000\000\200A@=\n\327\243p=\030@\000\000\000\000\000\000\000\000\021\307\272\270\215\006\334?m\347\373\251\361\322\026@ffffff<@U0*\251\023\220\032@\000\000\000\000\000\000\360?\000\000\000\000\000\000s@fffff\3460@\270\036\205\353Q\240x@\\\217\302\365(\334(@\301n\330\266(3\016@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\366(\\\217\302\365\344?\002+\207\026\331\316\027@\315\314\314\314\314,U@F\266\363\375\324\370\006@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\303\365(\\\217\0026@fffff&1@\267E\231\r2\311\314?\000\000\000\000\000\000)@{\024\256G\341z\037@\000\000\000\000\000\000\000\000\370S\343\245\233\304\340?5^\272I\014\202\031@33333\223W@\302\027&S\005c\031@\000\000\000\000\000\000\024@\000\000\000\000\000ps@ffffff.@\270\036\205\353Q\210x@33333s4@\275\030\312\211v\025\005@\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?1\010\254\034Z\344\023@fffff\346B@\326V\354/\273\'\004@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@33333\347u@H\341z\024\256G)@*t^c\227\250\340?\000\000\000\000\000\000\000\000\315\314\314\314\314\314\030@\000\000\000\000\000\000\360?\323Mb\020X9\340?\240\032/\335$\206\032@\000\000\000\000\000 S@d;\337O\215\227\020@\000\000\000\000\000\000 @\000\000\000\000\0000s@ffffff1@33333Gx@\024\256G\341z\024#@\234\242#\271\374\207\322?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\331\316\367S\343\245\025@\232\231\231\231\231\231#@33333\263\014@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@{\024\256G\341\316u@\315\314\314\314\314\214=@N\356w(\n\364\261?\000\000\000\000\000\000\000\000H\341z\024\256\307+@\000\000\000\000\000\000\000\000\232\231\231\231\231\231\341?\305 \260rh\221\032@fffffFU@\312\303B\255i^\013@\000\000\000\000\000\000\024@\000\000\000\000\000@q@ffffff0@\024\256G\341z\214x@\341z\024\256Ga#@\325\347j+\366\227\255?\000\000\000\000\000\000\000\000\256G\341z\024\256\003@\000\000\000\000\000\000\000\000\010\254\034Zd;\337?\354Q\270\036\205\353\033@333333M@o\022\203\300\312\241\006@\000\000\000\000\000\000\010@\000\000\000\000\000 h@\315\314\314\314\314\3141@fffff\316x@)\\\217\302\365(\024@A\016J\230i\373\247?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?^\272I\014\002\253\031@fffff\206P@\314]K\310\007\275\010@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@{\024\256G\341\202x@\037\205\353Q\270\236!@\344f\270\001\237?\023@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?\347\373\251\361\322\315\032@\000\000\000\000\000\200V@H\341z\024\256\307\004@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\217\302\365(\\\347o@\354Q\270\036\205k0@S\226!\216uq\253?\000\000\000\000\000\0005@\217\302\365(\\\217\026@\000\000\000\000\000\000\000\000\177j\274t\223\030\334?%\006\201\225C\013\032@\232\231\231\231\231\0315@n4\200\267@B\033@\000\000\000\000\000\000\020@\000\000\000\000\000`n@\315\314\314\314\314\3140@fffff\316x@\037\205\353Q\270\036\025@\266\370\024\000\343\031\300?\000\000\000\000\000\200F@\205\353Q\270\036\205\013@\000\000\000\000\000\000\000\000+\207\026\331\316\367\333?\323Mb\020X9\032@\232\231\231\231\231\031=@\243\222:\001MD\022@\000\000\000\000\000\000\024@\000\000\000\000\000\340x@ffffff.@=\n\327\243p\355w@=\n\327\243p=\022@\263\315\215\351\tK\351?\000\000\000\000\000\000\000\000\315\314\314\314\314\314#@\000\000\000\000\000\000\000\000\234\304 \260rh\341?\260rh\221\355|\030@ffffffJ@\310\007=\233U\037\005@\000\000\000\000\000\000\020@\000\000\000\000\000\000s@ffffff2@fffff\316x@\354Q\270\036\205\353\027@\203i\030>\"\246\324?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\370S\343\245\233\304\027@\000\000\000\000\000`W@\325\th\"lx\377?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\000\000\000\000\000\244w@fffff\3460@\267\234KqU\331\341?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?\327\243p=\nW\031@\315\314\314\314\314\214X@mV}\256\266\342\000@\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@\037\205\353Q\270\252x@\366(\\\217\302\3650@k\016\020\314\321\343\247?\000\000\000\000\000\000T@R\270\036\205\353Q\370?\000\000\000\000\000\000\000\000B`\345\320\"\333\331?!\260rh\221m\034@\315\314\314\314\314LB@#\333\371~j<\035@\000\000\000\000\000\000\000@\000\000\000\000\000\220t@333333)@)\\\217\302\365$v@\270\036\205\353Q8!@\343\252\262\357\212\340\237?\000\000\000\000\000\000\000\000\217\302\365(\\\217\021@\000\000\000\000\000\000\000\000}?5^\272I\334?u\223\030\004V\016\030@\000\000\000\000\000@H@\202sF\224\366\006 @\000\000\000\000\000\000\010@\000\000\000\000\000\000v@\315\314\314\314\314\3142@\n\327\243p=\032x@\217\302\365(\\\017%@+\030\225\324\th\306?\000\000\000\000\000\000\000\000\327\243p=\n\327\027@\000\000\000\000\000\000\000\000V\016-\262\235\357\337?w\276\237\032/\335\027@333333>@\3274\3578E\307\016@\000\000\000\000\000\000\024@\000\000\000\000\000pq@3333333@{\024\256G\341\226x@\303\365(\\\217B$@Dio\360\205\331#@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\033/\335$\006\001\031@fffff&X@/\335$\006\201\225\001@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\270\036\205\353QHx@q=\n\327\243p0@2ZGU\023D\275?\000\000\000\000\000\000\000\000\037\205\353Q\270\036!@\000\000\000\000\000\000\000\000\244p=\n\327\243\340?9\264\310v\276\037\033@33333\323Q@E\330\360\364J\331\006@\000\000\000\000\000\000\024@\000\000\000\000\000\000x@fffff\3464@\341z\024\256G\271x@\256G\341z\024\256\036@\366]\021\374o%\253?\000\000\000\000\000\000\000\000H\341z\024\256G\013@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?7\211A`\345P\034@\315\314\314\314\314\214O@7\211A`\345P\013@\000\000\000\000\000\000\000@\000\000\000\000\000\340p@\315\314\314\314\314\3141@)\\\217\302\365\300x@\315\314\314\314\314\314\026@\3578EGr\371\317?\000\000\000\000\000\000\000\000\244p=\n\327\3435@\000\000\000\000\000\000\000\000+\207\026\331\316\367\343?!\260rh\221m\027@\315\314\314\314\314\214X@\212\260\341\351\225\262\372?\000\000\000\000\000\000\020@\000\000\000\000\000P{@3333335@q=\n\327\243\200x@R\270\036\205\353Q5@\033\236^)\313\3609@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\356|?5^\272\345?\236\357\247\306K7\025@fffffFV@\\\217\302\365(\\\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\327\243p=\n\327_@\244p=\n\327\243:@j\366@+0d\301?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\360?\262\235\357\247\306K\337?\250\306K7\211A\030@\315\314\314\314\314\214M@\024\320D\330\360\364\020@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@\205\353Q\270\036\325w@R\270\036\205\353Q-@\262KTo\rl\323?\000\000\000\000\000\000\000\000\205\353Q\270\036\205\035@\000\000\000\000\000\000\000\000Zd;\337O\215\337?sh\221\355|?\031@fffff\346<@\'\240\211\260\341\251\025@\000\000\000\000\000\000\024@\000\000\000\000\000\360q@\232\231\231\231\231\2313@fffff\316x@\232\231\231\231\231\231\030@1%\222\350e4\033@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\0007\211A`\345\320\346?m\347\373\251\361R\030@\232\231\231\231\231\031U@=\n\327\243p\275\005@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@ffffff-@e\215z\210F\367!@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\360?\244p=\n\327\243\350?\014\002+\207\026\331\030@\232\231\231\231\231YX@\321\221\\\376C\372\000@\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256\233w@\232\231\231\231\231\2311@\326\305m4\200\337F@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\223\030\004V\016-\346?\372~j\274t\023\022@\000\000\000\000\000\000Y@\234\242#\271\374\207\372?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@\341z\024\256G\021V@=\n\327\243p}B@\325\347j+\366W%@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\256G\341z\024\256\347?\274t\223\030\004\326\031@33333\263W@\221~\373:p\316\377?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@H\341z\024\256\207E@{\024\256G\341\3727@J\357\033_{f\315?\000\000\000\000\000\000\000\000\256G\341z\024.%@\000\000\000\000\000\000\000\000\262\235\357\247\306K\337?\347\373\251\361\322M\031@\000\000\000\000\000@J@\317f\325\347jk\021@\000\000\000\000\000\000\020@\000\000\000\000\000Pq@\232\231\231\231\231\2312@R\270\036\205\353\255x@q=\n\327\243\360%@\001\336\002\t\212\1772@\000\000\000\000\000\000\000\000\232\231\231\231\231\0312@\000\000\000\000\000\000\000\000\307K7\211A`\345?Zd;\337O\215\020@\000\000\000\000\000\000Y@\376\324x\351&1\362?\000\000\000\000\000\0008@\000\000\000\000\000\320\204@3333334@fffff\316x@\\\217\302\365(\374B@o*Ral!\314?\000\000\000\000\000\000\000\000\244p=\n\327\243\033@\000\000\000\000\000\000\000\000y\351&1\010\254\334?\234\304 \260rh\026@\000\000\000\000\000\000O@\322o_\007\316Y\030@\000\000\000\000\000\000\010@\000\000\000\000\000 m@fffff\3461@fffff\316x@3333330@9b->\005\300\304?\000\000\000\000\000\0004@\327\243p=\n\327\033@\000\000\000\000\000\000\000\000\031\004V\016-\262\335?\366(\\\217\302\365\030@\315\314\314\314\314L0@\236\357\247\306K\267\021@\000\000\000\000\000\000\010@\000\000\000\000\000\340k@\232\231\231\231\231\2312@fffff\316x@\\\217\302\365(\\\032@\255n\365\234\364\276\241?\000\000\000\000\000\200A@=\n\327\243p=\030@\000\000\000\000\000\000\000\000\021\307\272\270\215\006\334?9\264\310v\276\037\030@\315\314\314\314\314L7@U0*\251\023\220\032@\000\000\000\000\000\000\360?\000\000\000\000\000\000s@fffff\3460@\000\000\000\000\000\244v@R\270\036\205\353Q\037@\375\274\251H\2051\001@\000\000\000\000\000\000\000\000\024\256G\341z\2243@\000\000\000\000\000\000\000\000\254\034Zd;\337\353?\274t\223\030\004\326\026@\000\000\000\000\000\240X@\r\340-\220\240\370\371?\000\000\000\000\000\000\024@\000\000\000\000\0000y@ffffff-@33333_p@\024\256G\341z\224/@\270\222\035\033\201x\215?\000\000\000\000\000\000N@q=\n\327\243p\007@\000\000\000\000\000\000\000\000D\213l\347\373\251\331?\321\"\333\371~j\032@\315\314\314\314\314\3142@p\316\210\322\336\340\030@\000\000\000\000\000\000\360?\000\000\000\000\000\220p@333333/@33333\213w@\205\353Q\270\036\205\021@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Log1p"
      op: "Log1p"
      input: "OptimizeDataset/Log1p/x:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Log1p_1/x"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 404
              }
            }
            tensor_content: "ffffff.@fffff&E@\000\000\000\000\000\000I@\232\231\231\231\231\0315@33333\2631@\000\000\000\000\000\2002@\232\231\231\231\231\231&@333333/@333333/@\315\314\314\314\314\314,@333333(@fffff\3461@\232\231\231\231\231\0317@fffff\3463@ffffff/@\232\231\231\231\231\231!@\000\000\000\000\000\000I@\000\000\000\000\000\2006@\232\231\231\231\231\0318@\000\000\000\000\000\200;@\315\314\314\314\314\314%@\315\314\314\314\314\314>@33333s@@\000\000\000\000\000\0008@\000\000\000\000\000\2002@\232\231\231\231\231\231*@fffff\3466@\232\231\231\231\231YA@\232\231\231\231\231\2310@\000\000\000\000\000\2001@\315\314\314\314\314L6@\232\231\231\231\231\0310@\315\314\314\314\314\314-@\232\231\231\231\231\0317@33333sA@\000\000\000\000\000\0009@\315\314\314\314\314\314+@333333*@ffffff4@\000\000\000\000\000\0004@ffffff.@33333\2638@3333336@33333\2630@ffffff)@333333/@ffffff2@\000\000\000\000\000\0005@\232\231\231\231\231\031>@333333.@33333\2632@333333#@\000\000\000\000\000\200?@\315\314\314\314\314\3148@\232\231\231\231\231\0313@\000\000\000\000\000\0006@\000\000\000\000\000\000-@\000\000\000\000\000\000&@\000\000\000\000\000\000@@ffffff=@\315\314\314\314\314L4@ffffff8@333333-@\000\000\000\000\000\2003@333333,@\232\231\231\231\231\231,@333333/@\000\000\000\000\000\000%@333333\031@\315\314\314\314\314L3@\315\314\314\314\314L3@\315\314\314\314\314\314*@333333B@\315\314\314\314\314\3141@\000\000\000\000\000\000+@\000\000\000\000\000\2000@\232\231\231\231\231\231 @\232\231\231\231\231\231,@\000\000\000\000\000\0000@\315\314\314\314\314\314*@\232\231\231\231\231\231<@\000\000\000\000\000\300E@3333334@\000\000\000\000\000\0006@\000\000\000\000\000\0007@33333\2634@\000\000\000\000\000\000)@\000\000\000\000\000@H@333333-@\315\314\314\314\314\314*@33333\2637@\000\000\000\000\000\000I@33333\2635@fffff\346C@\232\231\231\231\231YC@3333336@33333sA@\000\000\000\000\000\2006@\232\231\231\231\231\031?@33333\263<@\000\000\000\000\000\000G@\232\231\231\231\231\331D@\000\000\000\000\000\0005@\232\231\231\231\231\231:@\000\000\000\000\000\000.@ffffff8@\232\231\231\231\231\231*@3333335@ffffff\'@33333\2635@ffffff3@\000\000\000\000\000\000I@\315\314\314\314\314\3146@33333\2633@33333\2638@\232\231\231\231\231\031B@ffffff,@fffff\3462@\315\314\314\314\314L2@\232\231\231\231\231\2314@\232\231\231\231\231\2318@3333332@ffffff!@\000\000\000\000\000\000F@\315\314\314\314\314\314$@ffffff*@3333335@\000\000\000\000\000\200B@33333\263>@fffff\3466@\000\000\000\000\000\0004@\315\314\314\314\314L3@33333\263?@\000\000\000\000\000\000@@\232\231\231\231\231\0317@\315\314\314\314\314\3142@\315\314\314\314\314\314%@\000\000\000\000\000\000I@\232\231\231\231\231\2313@\000\000\000\000\000\000\024@\315\314\314\314\314\314,@\315\314\314\314\314\3143@\232\231\231\231\231\231+@\232\231\231\231\231\2313@fffff\3467@\000\000\000\000\000\2008@\000\000\000\000\000\0009@fffff\3463@3333331@\232\231\231\231\231\2318@\000\000\000\000\000\000+@\232\231\231\231\231\231:@ffffff5@\315\314\314\314\314\314\'@\232\231\231\231\231\2316@\232\231\231\231\231\2313@\000\000\000\000\000\000!@33333\2637@\232\231\231\231\231\0317@ffffff6@\000\000\000\000\000\2004@\232\231\231\231\231\2317@ffffff2@\232\231\231\231\231\231A@\232\231\231\231\231\0317@fffff\346;@\232\231\231\231\231\2314@33333\2637@\000\000\000\000\000\000<@333333+@\232\231\231\231\231\031;@\232\231\231\231\231\2317@\232\231\231\231\231\2314@3333332@33333\2635@\232\231\231\231\231\0311@\315\314\314\314\314\314 @\315\314\314\314\314L9@\232\231\231\231\231\231+@3333336@ffffff2@33333\2634@\232\231\231\231\231\231?@\000\000\000\000\000\200>@\315\314\314\314\314L4@\232\231\231\231\231\231!@3333333@ffffff3@\232\231\231\231\231\0317@\000\000\000\000\000\0007@\232\231\231\231\231\231-@ffffffH@\232\231\231\231\231\2316@33333\263@@\232\231\231\231\231\0315@333333+@\232\231\231\231\231\031@@333333*@ffffff7@fffff\3462@fffff\3467@\232\231\231\231\231\231\'@\315\314\314\314\314L7@\315\314\314\314\314\3146@\232\231\231\231\231\2313@33333\2630@\315\314\314\314\314\314*@3333336@ffffff4@\315\314\314\314\314\3145@ffffff:@\315\314\314\314\314\314-@\232\231\231\231\231\0318@\315\314\314\314\314\3147@\232\231\231\231\231\231(@\232\231\231\231\231\031=@\000\000\000\000\000\0005@\000\000\000\000\000\2003@\315\314\314\314\314L7@\315\314\314\314\314\3147@\315\314\314\314\314\3141@\000\000\000\000\000\000\'@33333\2635@fffff\3463@\000\000\000\000\000\0009@33333\263@@\000\000\000\000\000\200<@ffffff5@\315\314\314\314\314L8@\000\000\000\000\000\200;@\315\314\314\314\314\214@@3333330@\315\314\314\314\314L7@fffff&H@fffff\3466@\315\314\314\314\314\3146@333333*@ffffff)@\232\231\231\231\231\2316@\000\000\000\000\000\000.@\232\231\231\231\231\231.@\000\000\000\000\000\000%@\000\000\000\000\000\0008@\000\000\000\000\000\2002@33333\2635@\000\000\000\000\000\2003@\232\231\231\231\231\231@@3333337@\000\000\000\000\000\000\024@\232\231\231\231\231\0313@ffffff)@\315\314\314\314\314L6@ffffff$@\315\314\314\314\314\314+@\315\314\314\314\314L0@\000\000\000\000\000\0001@\232\231\231\231\231\0314@fffff\346=@3333331@fffff\246B@33333\263F@\315\314\314\314\314\3141@3333337@\000\000\000\000\000\000=@\000\000\000\000\000\0006@\000\000\000\000\000\0002@ffffff1@\315\314\314\314\314LA@\232\231\231\231\231\0314@\000\000\000\000\000\0009@333333/@\315\314\314\314\314\3148@333333<@3333335@ffffff5@\315\314\314\314\314\3147@\000\000\000\000\000\000?@333333:@ffffff1@33333\363B@\000\000\000\000\000\2001@\000\000\000\000\000\0004@\232\231\231\231\231\231 @fffff\3467@\315\314\314\314\314\314 @\232\231\231\231\231\231+@\315\314\314\314\314\314\034@ffffff\'@\232\231\231\231\231\0311@\232\231\231\231\231\2315@\000\000\000\000\000\000I@\232\231\231\231\231\0310@ffffff4@\232\231\231\231\231\2314@ffffff5@\232\231\231\231\231\2314@\000\000\000\000\000@B@\000\000\000\000\000\000!@\315\314\314\314\314\3148@\232\231\231\231\231\231%@fffff\3465@\315\314\314\314\314L1@fffff\3462@\232\231\231\231\231\031B@\315\314\314\314\314\314-@3333332@fffff\246@@\315\314\314\314\314\3145@33333\2633@\232\231\231\231\231\231?@\315\314\314\314\314\3148@ffffff3@\315\314\314\314\314\3146@\000\000\000\000\000\000\036@ffffffF@\315\314\314\314\314\3140@33333\2632@\000\000\000\000\000\000I@\000\000\000\000\000\000I@\000\000\000\000\000\2003@\232\231\231\231\231\0314@\000\000\000\000\000\000I@3333331@\315\314\314\314\314\3144@\315\314\314\314\314L3@fffff\246D@ffffff4@\000\000\000\000\000\2004@\232\231\231\231\231\231+@\000\000\000\000\000\2000@fffff\3467@\232\231\231\231\231\2314@\000\000\000\000\000\200?@\315\314\314\314\314L7@\315\314\314\314\314\3140@\000\000\000\000\000\000,@fffff\346@@\315\314\314\314\314\014B@\232\231\231\231\231\231)@\315\314\314\314\314L2@33333\2632@\232\231\231\231\231\0313@\000\000\000\000\000\000=@\232\231\231\231\231\031>@\000\000\000\000\000\000I@\000\000\000\000\000\000I@\000\000\000\000\000\0006@\315\314\314\314\314\314\'@\315\314\314\314\314\314B@\000\000\000\000\000\000I@33333\2636@\315\314\314\314\314\3144@\000\000\000\000\000\2007@fffff\346;@\000\000\000\000\000\000I@\315\314\314\314\314L3@fffff\3467@\232\231\231\231\231\2316@ffffff.@33333\2635@3333333@fffff\346E@\315\314\314\314\314L4@\232\231\231\231\231\231@@fffff\3463@\000\000\000\000\000\2006@\232\231\231\231\231Y@@\000\000\000\000\000\0006@\232\231\231\231\231\0311@\000\000\000\000\000\0003@\000\000\000\000\000\000.@\232\231\231\231\231\0310@\232\231\231\231\231\0319@33333\2637@33333\263<@\232\231\231\231\231\231B@\232\231\231\231\231\2316@ffffff0@\000\000\000\000\000\0009@\315\314\314\314\314\314=@\232\231\231\231\231\0316@ffffff1@\232\231\231\231\231\0312@\315\314\314\314\314L>@\000\000\000\000\000\2001@33333\2638@333333)@\000\000\000\000\000\200:@33333\263<@\232\231\231\231\231\231*@\315\314\314\314\314\314$@ffffff8@\000\000\000\000\000\0007@\000\000\000\000\000\0004@\315\314\314\314\314\3141@\000\000\000\000\000\000\034@\232\231\231\231\231\231\'@ffffff8@\232\231\231\231\231\231+@ffffff3@3333339@ffffff3@ffffff3@\232\231\231\231\231\031=@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Log1p_1"
      op: "Log1p"
      input: "OptimizeDataset/Log1p_1/x:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
    }
    node_def {
      name: "OptimizeDataset/TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "OptimizeDataset/Log1p:y:0"
      input: "OptimizeDataset/Log1p_1:y:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
            }
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 320
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 87654321
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 87654321
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/Equal/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/Equal"
      op: "Equal"
      input: "OptimizeDataset/seed_1:output:0"
      input: "OptimizeDataset/seed2/Equal/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 42
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/Equal_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/Equal_1"
      op: "Equal"
      input: "OptimizeDataset/seed2/Const:output:0"
      input: "OptimizeDataset/seed2/Equal_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/LogicalAnd"
      op: "LogicalAnd"
      input: "OptimizeDataset/seed2/Equal:z:0"
      input: "OptimizeDataset/seed2/Equal_1:z:0"
      device: "/device:CPU:0"
    }
    node_def {
      name: "OptimizeDataset/seed2/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 42
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2"
      op: "Select"
      input: "OptimizeDataset/seed2/LogicalAnd:z:0"
      input: "OptimizeDataset/seed2/Const_1:output:0"
      input: "OptimizeDataset/seed2/Const_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleDataset"
      op: "ShuffleDataset"
      input: "OptimizeDataset/TensorSliceDataset:handle:0"
      input: "OptimizeDataset/buffer_size:output:0"
      input: "OptimizeDataset/seed:output:0"
      input: "OptimizeDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/RepeatDataset"
      op: "RepeatDataset"
      input: "OptimizeDataset/ShuffleDataset:handle:0"
      input: "OptimizeDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "OptimizeDataset/RepeatDataset:handle:0"
      input: "OptimizeDataset/batch_size:output:0"
      input: "OptimizeDataset/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "parallel_copy"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "OptimizeDataset/BatchDatasetV2:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "optimization_configs"
        value {
          list {
            s: "map_vectorization:use_choose_fastest:false"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "cpu_budget"
        value {
          i: 0
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 38
  min_consumer: 12
}
